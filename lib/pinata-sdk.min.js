!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("pinata-sdk",[],n):"object"==typeof exports?exports["pinata-sdk"]=n():e["pinata-sdk"]=n()}("undefined"!=typeof self?self:this,(function(){return function(e){var n={};function t(i){if(n[i])return n[i].exports;var a=n[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)t.d(i,a,function(n){return e[n]}.bind(null,a));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=199)}([function(e,n,t){var i=t(2),a=t(23),o=t(14),r=t(15),s=t(24),c=function(e,n,t){var p,u,l,f,d=e&c.F,m=e&c.G,h=e&c.S,v=e&c.P,x=e&c.B,b=m?i:h?i[n]||(i[n]={}):(i[n]||{}).prototype,g=m?a:a[n]||(a[n]={}),k=g.prototype||(g.prototype={});for(p in m&&(t=n),t)l=((u=!d&&b&&void 0!==b[p])?b:t)[p],f=x&&u?s(l,i):v&&"function"==typeof l?s(Function.call,l):l,b&&r(b,p,l,e&c.U),g[p]!=l&&o(g,p,f),v&&k[p]!=l&&(k[p]=l)};i.core=a,c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,e.exports=c},function(e,n,t){var i=t(4);e.exports=function(e){if(!i(e))throw TypeError(e+" is not an object!");return e}},function(e,n){var t=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)},function(e,n){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,n){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,n,t){var i=t(58)("wks"),a=t(42),o=t(2).Symbol,r="function"==typeof o;(e.exports=function(e){return i[e]||(i[e]=r&&o[e]||(r?o:a)("Symbol."+e))}).store=i},function(e,n,t){var i=t(26),a=Math.min;e.exports=function(e){return e>0?a(i(e),9007199254740991):0}},function(e,n,t){e.exports=!t(3)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(e,n,t){var i=t(1),a=t(133),o=t(29),r=Object.defineProperty;n.f=t(7)?Object.defineProperty:function(e,n,t){if(i(e),n=o(n,!0),i(t),a)try{return r(e,n,t)}catch(e){}if("get"in t||"set"in t)throw TypeError("Accessors not supported!");return"value"in t&&(e[n]=t.value),e}},function(e,n,t){var i=t(30);e.exports=function(e){return Object(i(e))}},function(e,n,t){var i=t(0);i(i.S+i.F*!t(7),"Object",{defineProperty:t(8).f})},function(e,n){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,n){e.exports=function(e){return e&&e.__esModule?e:{default:e}},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,n,t){"use strict";var i=t(173),a=Object.prototype.toString;function o(e){return"[object Array]"===a.call(e)}function r(e){return void 0===e}function s(e){return null!==e&&"object"==typeof e}function c(e){if("[object Object]"!==a.call(e))return!1;var n=Object.getPrototypeOf(e);return null===n||n===Object.prototype}function p(e){return"[object Function]"===a.call(e)}function u(e,n){if(null!=e)if("object"!=typeof e&&(e=[e]),o(e))for(var t=0,i=e.length;t<i;t++)n.call(null,e[t],t,e);else for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&n.call(null,e[a],a,e)}e.exports={isArray:o,isArrayBuffer:function(e){return"[object ArrayBuffer]"===a.call(e)},isBuffer:function(e){return null!==e&&!r(e)&&null!==e.constructor&&!r(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:s,isPlainObject:c,isUndefined:r,isDate:function(e){return"[object Date]"===a.call(e)},isFile:function(e){return"[object File]"===a.call(e)},isBlob:function(e){return"[object Blob]"===a.call(e)},isFunction:p,isStream:function(e){return s(e)&&p(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:u,merge:function e(){var n={};function t(t,i){c(n[i])&&c(t)?n[i]=e(n[i],t):c(t)?n[i]=e({},t):o(t)?n[i]=t.slice():n[i]=t}for(var i=0,a=arguments.length;i<a;i++)u(arguments[i],t);return n},extend:function(e,n,t){return u(n,(function(n,a){e[a]=t&&"function"==typeof n?i(n,t):n})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}},function(e,n,t){var i=t(8),a=t(41);e.exports=t(7)?function(e,n,t){return i.f(e,n,a(1,t))}:function(e,n,t){return e[n]=t,e}},function(e,n,t){var i=t(2),a=t(14),o=t(18),r=t(42)("src"),s=t(202),c=(""+s).split("toString");t(23).inspectSource=function(e){return s.call(e)},(e.exports=function(e,n,t,s){var p="function"==typeof t;p&&(o(t,"name")||a(t,"name",n)),e[n]!==t&&(p&&(o(t,r)||a(t,r,e[n]?""+e[n]:c.join(String(n)))),e===i?e[n]=t:s?e[n]?e[n]=t:a(e,n,t):(delete e[n],a(e,n,t)))})(Function.prototype,"toString",(function(){return"function"==typeof this&&this[r]||s.call(this)}))},function(e,n,t){"use strict";var i=t(53),a={};a[t(5)("toStringTag")]="z",a+""!="[object z]"&&t(15)(Object.prototype,"toString",(function(){return"[object "+i(this)+"]"}),!0)},function(e,n,t){var i=t(0),a=t(3),o=t(30),r=/"/g,s=function(e,n,t,i){var a=String(o(e)),s="<"+n;return""!==t&&(s+=" "+t+'="'+String(i).replace(r,"&quot;")+'"'),s+">"+a+"</"+n+">"};e.exports=function(e,n){var t={};t[e]=n(s),i(i.P+i.F*a((function(){var n=""[e]('"');return n!==n.toLowerCase()||n.split('"').length>3})),"String",t)}},function(e,n){var t={}.hasOwnProperty;e.exports=function(e,n){return t.call(e,n)}},function(e,n,t){var i=t(59),a=t(30);e.exports=function(e){return i(a(e))}},function(e,n,t){var i=t(60),a=t(41),o=t(19),r=t(29),s=t(18),c=t(133),p=Object.getOwnPropertyDescriptor;n.f=t(7)?p:function(e,n){if(e=o(e),n=r(n,!0),c)try{return p(e,n)}catch(e){}if(s(e,n))return a(!i.f.call(e,n),e[n])}},function(e,n,t){var i=t(18),a=t(9),o=t(88)("IE_PROTO"),r=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=a(e),i(e,o)?e[o]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?r:null}},function(e,n,t){"use strict";var i,a,o,r,s=t(38),c=t(2),p=t(24),u=t(53),l=t(0),f=t(4),d=t(11),m=t(48),h=t(49),v=t(62),x=t(115).set,b=t(116)(),g=t(117),k=t(157),y=t(75),w=t(158),S=c.TypeError,_=c.process,j=_&&_.versions,E=j&&j.v8||"",O=c.Promise,C="process"==u(_),A=function(){},P=a=g.f,M=!!function(){try{var e=O.resolve(1),n=(e.constructor={})[t(5)("species")]=function(e){e(A,A)};return(C||"function"==typeof PromiseRejectionEvent)&&e.then(A)instanceof n&&0!==E.indexOf("6.6")&&-1===y.indexOf("Chrome/66")}catch(e){}}(),F=function(e){var n;return!(!f(e)||"function"!=typeof(n=e.then))&&n},B=function(e,n){if(!e._n){e._n=!0;var t=e._c;b((function(){for(var i=e._v,a=1==e._s,o=0,r=function(n){var t,o,r,s=a?n.ok:n.fail,c=n.resolve,p=n.reject,u=n.domain;try{s?(a||(2==e._h&&R(e),e._h=1),!0===s?t=i:(u&&u.enter(),t=s(i),u&&(u.exit(),r=!0)),t===n.promise?p(S("Promise-chain cycle")):(o=F(t))?o.call(t,c,p):c(t)):p(i)}catch(e){u&&!r&&u.exit(),p(e)}};t.length>o;)r(t[o++]);e._c=[],e._n=!1,n&&!e._h&&N(e)}))}},N=function(e){x.call(c,(function(){var n,t,i,a=e._v,o=I(e);if(o&&(n=k((function(){C?_.emit("unhandledRejection",a,e):(t=c.onunhandledrejection)?t({promise:e,reason:a}):(i=c.console)&&i.error&&i.error("Unhandled promise rejection",a)})),e._h=C||I(e)?2:1),e._a=void 0,o&&n.e)throw n.v}))},I=function(e){return 1!==e._h&&0===(e._a||e._c).length},R=function(e){x.call(c,(function(){var n;C?_.emit("rejectionHandled",e):(n=c.onrejectionhandled)&&n({promise:e,reason:e._v})}))},T=function(e){var n=this;n._d||(n._d=!0,(n=n._w||n)._v=e,n._s=2,n._a||(n._a=n._c.slice()),B(n,!0))},z=function(e){var n,t=this;if(!t._d){t._d=!0,t=t._w||t;try{if(t===e)throw S("Promise can't be resolved itself");(n=F(e))?b((function(){var i={_w:t,_d:!1};try{n.call(e,p(z,i,1),p(T,i,1))}catch(e){T.call(i,e)}})):(t._v=e,t._s=1,B(t,!1))}catch(e){T.call({_w:t,_d:!1},e)}}};M||(O=function(e){m(this,O,"Promise","_h"),d(e),i.call(this);try{e(p(z,this,1),p(T,this,1))}catch(e){T.call(this,e)}},(i=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=t(50)(O.prototype,{then:function(e,n){var t=P(v(this,O));return t.ok="function"!=typeof e||e,t.fail="function"==typeof n&&n,t.domain=C?_.domain:void 0,this._c.push(t),this._a&&this._a.push(t),this._s&&B(this,!1),t.promise},catch:function(e){return this.then(void 0,e)}}),o=function(){var e=new i;this.promise=e,this.resolve=p(z,e,1),this.reject=p(T,e,1)},g.f=P=function(e){return e===O||e===r?new o(e):a(e)}),l(l.G+l.W+l.F*!M,{Promise:O}),t(52)(O,"Promise"),t(47)("Promise"),r=t(23).Promise,l(l.S+l.F*!M,"Promise",{reject:function(e){var n=P(this);return(0,n.reject)(e),n.promise}}),l(l.S+l.F*(s||!M),"Promise",{resolve:function(e){return w(s&&this===r?O:this,e)}}),l(l.S+l.F*!(M&&t(72)((function(e){O.all(e).catch(A)}))),"Promise",{all:function(e){var n=this,t=P(n),i=t.resolve,a=t.reject,o=k((function(){var t=[],o=0,r=1;h(e,!1,(function(e){var s=o++,c=!1;t.push(void 0),r++,n.resolve(e).then((function(e){c||(c=!0,t[s]=e,--r||i(t))}),a)})),--r||i(t)}));return o.e&&a(o.v),t.promise},race:function(e){var n=this,t=P(n),i=t.reject,a=k((function(){h(e,!1,(function(e){n.resolve(e).then(t.resolve,i)}))}));return a.e&&i(a.v),t.promise}})},function(e,n){var t=e.exports={version:"2.6.11"};"number"==typeof __e&&(__e=t)},function(e,n,t){var i=t(11);e.exports=function(e,n,t){if(i(e),void 0===n)return e;switch(t){case 1:return function(t){return e.call(n,t)};case 2:return function(t,i){return e.call(n,t,i)};case 3:return function(t,i,a){return e.call(n,t,i,a)}}return function(){return e.apply(n,arguments)}}},function(e,n){var t={}.toString;e.exports=function(e){return t.call(e).slice(8,-1)}},function(e,n){var t=Math.ceil,i=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?i:t)(e)}},function(e,n,t){"use strict";var i=t(3);e.exports=function(e,n){return!!e&&i((function(){n?e.call(null,(function(){}),1):e.call(null)}))}},function(e,n,t){"use strict";t(10);var i=t(12);Object.defineProperty(n,"__esModule",{value:!0}),n.validateApiKeys=function(e,n){if(!e||""===e)throw new Error("No pinataApiKey provided! Please provide your pinata api key as an argument when you start this script");if(!n||""===n)throw new Error("No pinataSecretApiKey provided! Please provide your pinata secret api key as an argument when you start this script")},n.validateHostNodes=r,n.validateMetadata=function(e){if(e.name&&!("string"==typeof e.name||e.name instanceof String))throw new Error("metadata name must be of type string");if(e.keyvalues){if("object"!==(0,a.default)(e.keyvalues))throw new Error("metatadata keyvalues must be an object");var n=0;Object.entries(e.keyvalues).forEach((function(e){if(n>9)throw new Error("No more than 10 keyvalues can be provided for metadata entries");if("string"!=typeof e[1]&&"boolean"!=typeof e[1]&&isNaN(e[1]))throw new Error("Metadata keyvalue values must be strings, booleans, or numbers");n++}))}},n.validatePinPolicyStructure=s,n.validatePinataOptions=function(e){if("object"!==(0,a.default)(e))throw new Error("options must be an object");if(e.cidVersion&&0!=e.cidVersion&&1!=e.cidVersion)throw new Error("unsupported or invalid cidVersion");if(e.wrapWithDirectory&&!0!==e.wrapWithDirectory&&!1!==e.wrapWithDirectory)throw new Error("wrapWithDirectory must be a boolean value of true or false");e.hostNodes&&r(e.hostNodes);e.customPinPolicy&&s(e.customPinPolicy)};var a=i(t(126));t(149),t(56),t(69),t(120),t(16),t(99),t(96);var o=i(t(63));function r(e){if(!Array.isArray(e))throw new Error("host_nodes value must be an array");e.forEach((function(e){if(!o.default.peerMultiaddr(e))throw new Error("host_node array entry: ".concat(e," is not a valid peer multiaddr"))}))}function s(e){if(!e)throw new Error("No pin policy provided");if(!e.regions)throw new Error("No regions provided in pin policy");e.regions.length&&e.regions.forEach((function(e){if(!e.id||"[object String]"!==Object.prototype.toString.call(e.id))throw new Error("region id must be a string");if(!e.desiredReplicationCount&&0!==e.desiredReplicationCount||!Number.isInteger(e.desiredReplicationCount))throw new Error("desiredReplicationCount must be an integer")}))}},function(e,n,t){var i=t(4);e.exports=function(e,n){if(!i(e))return e;var t,a;if(n&&"function"==typeof(t=e.toString)&&!i(a=t.call(e)))return a;if("function"==typeof(t=e.valueOf)&&!i(a=t.call(e)))return a;if(!n&&"function"==typeof(t=e.toString)&&!i(a=t.call(e)))return a;throw TypeError("Can't convert object to primitive value")}},function(e,n){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},function(e,n,t){var i=t(0),a=t(23),o=t(3);e.exports=function(e,n){var t=(a.Object||{})[e]||Object[e],r={};r[e]=n(t),i(i.S+i.F*o((function(){t(1)})),"Object",r)}},function(e,n,t){var i=t(24),a=t(59),o=t(9),r=t(6),s=t(109);e.exports=function(e,n){var t=1==e,c=2==e,p=3==e,u=4==e,l=6==e,f=5==e||l,d=n||s;return function(n,s,m){for(var h,v,x=o(n),b=a(x),g=i(s,m,3),k=r(b.length),y=0,w=t?d(n,k):c?d(n,0):void 0;k>y;y++)if((f||y in b)&&(v=g(h=b[y],y,x),e))if(t)w[y]=v;else if(v)switch(e){case 3:return!0;case 5:return h;case 6:return y;case 2:w.push(h)}else if(u)return!1;return l?-1:p||u?u:w}}},function(e,n,t){e.exports=t(386)},function(e,n,t){"use strict";t(10),Object.defineProperty(n,"__esModule",{value:!0}),n.baseUrl=void 0;n.baseUrl="https://api.pinata.cloud"},function(e,n,t){"use strict";t(10),Object.defineProperty(n,"__esModule",{value:!0}),n.handleError=void 0;n.handleError=function(e){return e&&e.response&&e.response&&e.response.data&&e.response.data.error?e.response.data.error:e.data&&e.data.error?e.data.error:e.response&&e.response.error?e.response.error:e}},function(e,n,t){"use strict";if(t(7)){var i=t(38),a=t(2),o=t(3),r=t(0),s=t(77),c=t(118),p=t(24),u=t(48),l=t(41),f=t(14),d=t(50),m=t(26),h=t(6),v=t(164),x=t(44),b=t(29),g=t(18),k=t(53),y=t(4),w=t(9),S=t(106),_=t(45),j=t(21),E=t(46).f,O=t(108),C=t(42),A=t(5),P=t(32),M=t(66),F=t(62),B=t(112),N=t(55),I=t(72),R=t(47),T=t(111),z=t(153),L=t(8),q=t(20),D=L.f,U=q.f,$=a.RangeError,V=a.TypeError,W=a.Uint8Array,G=Array.prototype,H=c.ArrayBuffer,K=c.DataView,J=P(0),Y=P(2),X=P(3),Z=P(4),Q=P(5),ee=P(6),ne=M(!0),te=M(!1),ie=B.values,ae=B.keys,oe=B.entries,re=G.lastIndexOf,se=G.reduce,ce=G.reduceRight,pe=G.join,ue=G.sort,le=G.slice,fe=G.toString,de=G.toLocaleString,me=A("iterator"),he=A("toStringTag"),ve=C("typed_constructor"),xe=C("def_constructor"),be=s.CONSTR,ge=s.TYPED,ke=s.VIEW,ye=P(1,(function(e,n){return Ee(F(e,e[xe]),n)})),we=o((function(){return 1===new W(new Uint16Array([1]).buffer)[0]})),Se=!!W&&!!W.prototype.set&&o((function(){new W(1).set({})})),_e=function(e,n){var t=m(e);if(t<0||t%n)throw $("Wrong offset!");return t},je=function(e){if(y(e)&&ge in e)return e;throw V(e+" is not a typed array!")},Ee=function(e,n){if(!(y(e)&&ve in e))throw V("It is not a typed array constructor!");return new e(n)},Oe=function(e,n){return Ce(F(e,e[xe]),n)},Ce=function(e,n){for(var t=0,i=n.length,a=Ee(e,i);i>t;)a[t]=n[t++];return a},Ae=function(e,n,t){D(e,n,{get:function(){return this._d[t]}})},Pe=function(e){var n,t,i,a,o,r,s=w(e),c=arguments.length,u=c>1?arguments[1]:void 0,l=void 0!==u,f=O(s);if(null!=f&&!S(f)){for(r=f.call(s),i=[],n=0;!(o=r.next()).done;n++)i.push(o.value);s=i}for(l&&c>2&&(u=p(u,arguments[2],2)),n=0,t=h(s.length),a=Ee(this,t);t>n;n++)a[n]=l?u(s[n],n):s[n];return a},Me=function(){for(var e=0,n=arguments.length,t=Ee(this,n);n>e;)t[e]=arguments[e++];return t},Fe=!!W&&o((function(){de.call(new W(1))})),Be=function(){return de.apply(Fe?le.call(je(this)):je(this),arguments)},Ne={copyWithin:function(e,n){return z.call(je(this),e,n,arguments.length>2?arguments[2]:void 0)},every:function(e){return Z(je(this),e,arguments.length>1?arguments[1]:void 0)},fill:function(e){return T.apply(je(this),arguments)},filter:function(e){return Oe(this,Y(je(this),e,arguments.length>1?arguments[1]:void 0))},find:function(e){return Q(je(this),e,arguments.length>1?arguments[1]:void 0)},findIndex:function(e){return ee(je(this),e,arguments.length>1?arguments[1]:void 0)},forEach:function(e){J(je(this),e,arguments.length>1?arguments[1]:void 0)},indexOf:function(e){return te(je(this),e,arguments.length>1?arguments[1]:void 0)},includes:function(e){return ne(je(this),e,arguments.length>1?arguments[1]:void 0)},join:function(e){return pe.apply(je(this),arguments)},lastIndexOf:function(e){return re.apply(je(this),arguments)},map:function(e){return ye(je(this),e,arguments.length>1?arguments[1]:void 0)},reduce:function(e){return se.apply(je(this),arguments)},reduceRight:function(e){return ce.apply(je(this),arguments)},reverse:function(){for(var e,n=je(this).length,t=Math.floor(n/2),i=0;i<t;)e=this[i],this[i++]=this[--n],this[n]=e;return this},some:function(e){return X(je(this),e,arguments.length>1?arguments[1]:void 0)},sort:function(e){return ue.call(je(this),e)},subarray:function(e,n){var t=je(this),i=t.length,a=x(e,i);return new(F(t,t[xe]))(t.buffer,t.byteOffset+a*t.BYTES_PER_ELEMENT,h((void 0===n?i:x(n,i))-a))}},Ie=function(e,n){return Oe(this,le.call(je(this),e,n))},Re=function(e){je(this);var n=_e(arguments[1],1),t=this.length,i=w(e),a=h(i.length),o=0;if(a+n>t)throw $("Wrong length!");for(;o<a;)this[n+o]=i[o++]},Te={entries:function(){return oe.call(je(this))},keys:function(){return ae.call(je(this))},values:function(){return ie.call(je(this))}},ze=function(e,n){return y(e)&&e[ge]&&"symbol"!=typeof n&&n in e&&String(+n)==String(n)},Le=function(e,n){return ze(e,n=b(n,!0))?l(2,e[n]):U(e,n)},qe=function(e,n,t){return!(ze(e,n=b(n,!0))&&y(t)&&g(t,"value"))||g(t,"get")||g(t,"set")||t.configurable||g(t,"writable")&&!t.writable||g(t,"enumerable")&&!t.enumerable?D(e,n,t):(e[n]=t.value,e)};be||(q.f=Le,L.f=qe),r(r.S+r.F*!be,"Object",{getOwnPropertyDescriptor:Le,defineProperty:qe}),o((function(){fe.call({})}))&&(fe=de=function(){return pe.call(this)});var De=d({},Ne);d(De,Te),f(De,me,Te.values),d(De,{slice:Ie,set:Re,constructor:function(){},toString:fe,toLocaleString:Be}),Ae(De,"buffer","b"),Ae(De,"byteOffset","o"),Ae(De,"byteLength","l"),Ae(De,"length","e"),D(De,he,{get:function(){return this[ge]}}),e.exports=function(e,n,t,c){var p=e+((c=!!c)?"Clamped":"")+"Array",l="get"+e,d="set"+e,m=a[p],x=m||{},b=m&&j(m),g=!m||!s.ABV,w={},S=m&&m.prototype,O=function(e,t){D(e,t,{get:function(){return function(e,t){var i=e._d;return i.v[l](t*n+i.o,we)}(this,t)},set:function(e){return function(e,t,i){var a=e._d;c&&(i=(i=Math.round(i))<0?0:i>255?255:255&i),a.v[d](t*n+a.o,i,we)}(this,t,e)},enumerable:!0})};g?(m=t((function(e,t,i,a){u(e,m,p,"_d");var o,r,s,c,l=0,d=0;if(y(t)){if(!(t instanceof H||"ArrayBuffer"==(c=k(t))||"SharedArrayBuffer"==c))return ge in t?Ce(m,t):Pe.call(m,t);o=t,d=_e(i,n);var x=t.byteLength;if(void 0===a){if(x%n)throw $("Wrong length!");if((r=x-d)<0)throw $("Wrong length!")}else if((r=h(a)*n)+d>x)throw $("Wrong length!");s=r/n}else s=v(t),o=new H(r=s*n);for(f(e,"_d",{b:o,o:d,l:r,e:s,v:new K(o)});l<s;)O(e,l++)})),S=m.prototype=_(De),f(S,"constructor",m)):o((function(){m(1)}))&&o((function(){new m(-1)}))&&I((function(e){new m,new m(null),new m(1.5),new m(e)}),!0)||(m=t((function(e,t,i,a){var o;return u(e,m,p),y(t)?t instanceof H||"ArrayBuffer"==(o=k(t))||"SharedArrayBuffer"==o?void 0!==a?new x(t,_e(i,n),a):void 0!==i?new x(t,_e(i,n)):new x(t):ge in t?Ce(m,t):Pe.call(m,t):new x(v(t))})),J(b!==Function.prototype?E(x).concat(E(b)):E(x),(function(e){e in m||f(m,e,x[e])})),m.prototype=S,i||(S.constructor=m));var C=S[me],A=!!C&&("values"==C.name||null==C.name),P=Te.values;f(m,ve,!0),f(S,ge,p),f(S,ke,!0),f(S,xe,m),(c?new m(1)[he]==p:he in S)||D(S,he,{get:function(){return p}}),w[p]=m,r(r.G+r.W+r.F*(m!=x),w),r(r.S,p,{BYTES_PER_ELEMENT:n}),r(r.S+r.F*o((function(){x.of.call(m,1)})),p,{from:Pe,of:Me}),"BYTES_PER_ELEMENT"in S||f(S,"BYTES_PER_ELEMENT",n),r(r.P,p,Ne),R(p),r(r.P+r.F*Se,p,{set:Re}),r(r.P+r.F*!A,p,Te),i||S.toString==fe||(S.toString=fe),r(r.P+r.F*o((function(){new m(1).slice()})),p,{slice:Ie}),r(r.P+r.F*(o((function(){return[1,2].toLocaleString()!=new m([1,2]).toLocaleString()}))||!o((function(){S.toLocaleString.call([1,2])}))),p,{toLocaleString:Be}),N[p]=A?C:P,i||A||f(S,me,P)}}else e.exports=function(){}},function(e,n,t){var i=t(159),a=t(0),o=t(58)("metadata"),r=o.store||(o.store=new(t(162))),s=function(e,n,t){var a=r.get(e);if(!a){if(!t)return;r.set(e,a=new i)}var o=a.get(n);if(!o){if(!t)return;a.set(n,o=new i)}return o};e.exports={store:r,map:s,has:function(e,n,t){var i=s(n,t,!1);return void 0!==i&&i.has(e)},get:function(e,n,t){var i=s(n,t,!1);return void 0===i?void 0:i.get(e)},set:function(e,n,t,i){s(t,i,!0).set(e,n)},keys:function(e,n){var t=s(e,n,!1),i=[];return t&&t.forEach((function(e,n){i.push(n)})),i},key:function(e){return void 0===e||"symbol"==typeof e?e:String(e)},exp:function(e){a(a.S,"Reflect",e)}}},function(e,n){e.exports=!1},function(e,n,t){var i=t(42)("meta"),a=t(4),o=t(18),r=t(8).f,s=0,c=Object.isExtensible||function(){return!0},p=!t(3)((function(){return c(Object.preventExtensions({}))})),u=function(e){r(e,i,{value:{i:"O"+ ++s,w:{}}})},l=e.exports={KEY:i,NEED:!1,fastKey:function(e,n){if(!a(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!o(e,i)){if(!c(e))return"F";if(!n)return"E";u(e)}return e[i].i},getWeak:function(e,n){if(!o(e,i)){if(!c(e))return!0;if(!n)return!1;u(e)}return e[i].w},onFreeze:function(e){return p&&l.NEED&&c(e)&&!o(e,i)&&u(e),e}}},function(e,n,t){var i=t(5)("unscopables"),a=Array.prototype;null==a[i]&&t(14)(a,i,{}),e.exports=function(e){a[i][e]=!0}},function(e,n){e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},function(e,n){var t=0,i=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++t+i).toString(36))}},function(e,n,t){var i=t(135),a=t(89);e.exports=Object.keys||function(e){return i(e,a)}},function(e,n,t){var i=t(26),a=Math.max,o=Math.min;e.exports=function(e,n){return(e=i(e))<0?a(e+n,0):o(e,n)}},function(e,n,t){var i=t(1),a=t(136),o=t(89),r=t(88)("IE_PROTO"),s=function(){},c=function(){var e,n=t(86)("iframe"),i=o.length;for(n.style.display="none",t(90).appendChild(n),n.src="javascript:",(e=n.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),c=e.F;i--;)delete c.prototype[o[i]];return c()};e.exports=Object.create||function(e,n){var t;return null!==e?(s.prototype=i(e),t=new s,s.prototype=null,t[r]=e):t=c(),void 0===n?t:a(t,n)}},function(e,n,t){var i=t(135),a=t(89).concat("length","prototype");n.f=Object.getOwnPropertyNames||function(e){return i(e,a)}},function(e,n,t){"use strict";var i=t(2),a=t(8),o=t(7),r=t(5)("species");e.exports=function(e){var n=i[e];o&&n&&!n[r]&&a.f(n,r,{configurable:!0,get:function(){return this}})}},function(e,n){e.exports=function(e,n,t,i){if(!(e instanceof n)||void 0!==i&&i in e)throw TypeError(t+": incorrect invocation!");return e}},function(e,n,t){var i=t(24),a=t(150),o=t(106),r=t(1),s=t(6),c=t(108),p={},u={};(n=e.exports=function(e,n,t,l,f){var d,m,h,v,x=f?function(){return e}:c(e),b=i(t,l,n?2:1),g=0;if("function"!=typeof x)throw TypeError(e+" is not iterable!");if(o(x)){for(d=s(e.length);d>g;g++)if((v=n?b(r(m=e[g])[0],m[1]):b(e[g]))===p||v===u)return v}else for(h=x.call(e);!(m=h.next()).done;)if((v=a(h,b,m.value,n))===p||v===u)return v}).BREAK=p,n.RETURN=u},function(e,n,t){var i=t(15);e.exports=function(e,n,t){for(var a in n)i(e,a,n[a],t);return e}},function(e,n,t){var i=t(4);e.exports=function(e,n){if(!i(e)||e._t!==n)throw TypeError("Incompatible receiver, "+n+" required!");return e}},function(e,n,t){var i=t(8).f,a=t(18),o=t(5)("toStringTag");e.exports=function(e,n,t){e&&!a(e=t?e:e.prototype,o)&&i(e,o,{configurable:!0,value:n})}},function(e,n,t){var i=t(25),a=t(5)("toStringTag"),o="Arguments"==i(function(){return arguments}());e.exports=function(e){var n,t,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(t=function(e,n){try{return e[n]}catch(e){}}(n=Object(e),a))?t:o?i(n):"Object"==(r=i(n))&&"function"==typeof n.callee?"Arguments":r}},function(e,n,t){var i=t(0),a=t(30),o=t(3),r=t(95),s="["+r+"]",c=RegExp("^"+s+s+"*"),p=RegExp(s+s+"*$"),u=function(e,n,t){var a={},s=o((function(){return!!r[e]()||"​"!="​"[e]()})),c=a[e]=s?n(l):r[e];t&&(a[t]=c),i(i.P+i.F*s,"String",a)},l=u.trim=function(e,n){return e=String(a(e)),1&n&&(e=e.replace(c,"")),2&n&&(e=e.replace(p,"")),e};e.exports=u},function(e,n){e.exports={}},function(e,n,t){"use strict";var i=t(0),a=t(32)(0),o=t(27)([].forEach,!0);i(i.P+i.F*!o,"Array",{forEach:function(e){return a(this,e,arguments[1])}})},function(e,n,t){e.exports={encode:t(415),decode:t(416),encodingLength:t(417)}},function(e,n,t){var i=t(23),a=t(2),o=a["__core-js_shared__"]||(a["__core-js_shared__"]={});(e.exports=function(e,n){return o[e]||(o[e]=void 0!==n?n:{})})("versions",[]).push({version:i.version,mode:t(38)?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},function(e,n,t){var i=t(25);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==i(e)?e.split(""):Object(e)}},function(e,n){n.f={}.propertyIsEnumerable},function(e,n,t){"use strict";var i=t(1);e.exports=function(){var e=i(this),n="";return e.global&&(n+="g"),e.ignoreCase&&(n+="i"),e.multiline&&(n+="m"),e.unicode&&(n+="u"),e.sticky&&(n+="y"),n}},function(e,n,t){var i=t(1),a=t(11),o=t(5)("species");e.exports=function(e,n){var t,r=i(e).constructor;return void 0===r||null==(t=i(r)[o])?n:a(t)}},function(e,n,t){"use strict";const i=t(83),a=t(127),o=t(186),r=t(187),s=t(436),c=t(129),p=/^https?:\/\/[^/]+\/(ip(f|n)s)\/((\w+).*)/,u=/^\/(ip(f|n)s)\/((\w+).*)/,l=/^https?:\/\/([^/]+)\.(ip(?:f|n)s)\.[^/]+/;function f(e){try{return new c(e),!0}catch(e){return!1}}function d(e){if(!e)return!1;if(r.isMultiaddr(e))return!0;try{return new r(e),!0}catch(e){return!1}}function m(e,n,t=1,i=4){const a=x(e);if(!a)return!1;const o=a.match(n);if(!o)return!1;if("ipfs"!==o[t])return!1;let r=o[i];return r&&n===l&&(r=r.toLowerCase()),f(r)}function h(e,n,t=1,i){const a=x(e);if(!a)return!1;const o=a.match(n);if(!o)return!1;if("ipns"!==o[t])return!1;if(i&&n===l){let e=o[i];return e=e.toLowerCase(),f(e)}return!0}function v(e){return"string"==typeof e}function x(e){return Buffer.isBuffer(e)?i.encode(e):!!v(e)&&e}const b=e=>m(e,l,2,1),g=e=>h(e,l,2,1);e.exports={multihash:function(e){const n=x(e);try{const e=Buffer.from(i.decode(n));return a.decode(e),!0}catch(e){return!1}},multiaddr:d,peerMultiaddr:function(e){return d(e)&&s.IPFS.matches(e)},cid:f,base32cid:e=>"base32"===function(e){try{return o.isEncoded(e)}catch(e){return!1}}(e)&&f(e),ipfsSubdomain:b,ipnsSubdomain:g,subdomain:e=>b(e)||g(e),subdomainPattern:l,ipfsUrl:e=>m(e,p),ipnsUrl:e=>h(e,p),url:e=>m(e,p)||h(e,p),urlPattern:p,ipfsPath:e=>m(e,u),ipnsPath:e=>h(e,u),path:e=>m(e,u)||h(e,u),pathPattern:u,urlOrPath:e=>m(e,p)||h(e,p)||m(e,u)||h(e,u),cidPath:e=>v(e)&&!f(e)&&m(`/ipfs/${e}`,u)}},function(e){e.exports=JSON.parse('{"identity":0,"ip4":4,"tcp":6,"sha1":17,"sha2-256":18,"sha2-512":19,"sha3-512":20,"sha3-384":21,"sha3-256":22,"sha3-224":23,"shake-128":24,"shake-256":25,"keccak-224":26,"keccak-256":27,"keccak-384":28,"keccak-512":29,"dccp":33,"murmur3-128":34,"murmur3-32":35,"ip6":41,"ip6zone":42,"path":47,"multicodec":48,"multihash":49,"multiaddr":50,"multibase":51,"dns":53,"dns4":54,"dns6":55,"dnsaddr":56,"protobuf":80,"cbor":81,"raw":85,"dbl-sha2-256":86,"rlp":96,"bencode":99,"dag-pb":112,"dag-cbor":113,"libp2p-key":114,"git-raw":120,"torrent-info":123,"torrent-file":124,"leofcoin-block":129,"leofcoin-tx":130,"leofcoin-pr":131,"sctp":132,"eth-block":144,"eth-block-list":145,"eth-tx-trie":146,"eth-tx":147,"eth-tx-receipt-trie":148,"eth-tx-receipt":149,"eth-state-trie":150,"eth-account-snapshot":151,"eth-storage-trie":152,"bitcoin-block":176,"bitcoin-tx":177,"zcash-block":192,"zcash-tx":193,"stellar-block":208,"stellar-tx":209,"md4":212,"md5":213,"bmt":214,"decred-block":224,"decred-tx":225,"ipld-ns":226,"ipfs-ns":227,"swarm-ns":228,"ipns-ns":229,"zeronet":230,"ed25519-pub":237,"dash-block":240,"dash-tx":241,"swarm-manifest":250,"swarm-feed":251,"udp":273,"p2p-webrtc-star":275,"p2p-webrtc-direct":276,"p2p-stardust":277,"p2p-circuit":290,"dag-json":297,"udt":301,"utp":302,"unix":400,"p2p":421,"ipfs":421,"https":443,"onion":444,"onion3":445,"garlic64":446,"garlic32":447,"tls":448,"quic":460,"ws":477,"wss":478,"p2p-websocket-star":479,"http":480,"json":512,"messagepack":513,"x11":4352,"blake2b-8":45569,"blake2b-16":45570,"blake2b-24":45571,"blake2b-32":45572,"blake2b-40":45573,"blake2b-48":45574,"blake2b-56":45575,"blake2b-64":45576,"blake2b-72":45577,"blake2b-80":45578,"blake2b-88":45579,"blake2b-96":45580,"blake2b-104":45581,"blake2b-112":45582,"blake2b-120":45583,"blake2b-128":45584,"blake2b-136":45585,"blake2b-144":45586,"blake2b-152":45587,"blake2b-160":45588,"blake2b-168":45589,"blake2b-176":45590,"blake2b-184":45591,"blake2b-192":45592,"blake2b-200":45593,"blake2b-208":45594,"blake2b-216":45595,"blake2b-224":45596,"blake2b-232":45597,"blake2b-240":45598,"blake2b-248":45599,"blake2b-256":45600,"blake2b-264":45601,"blake2b-272":45602,"blake2b-280":45603,"blake2b-288":45604,"blake2b-296":45605,"blake2b-304":45606,"blake2b-312":45607,"blake2b-320":45608,"blake2b-328":45609,"blake2b-336":45610,"blake2b-344":45611,"blake2b-352":45612,"blake2b-360":45613,"blake2b-368":45614,"blake2b-376":45615,"blake2b-384":45616,"blake2b-392":45617,"blake2b-400":45618,"blake2b-408":45619,"blake2b-416":45620,"blake2b-424":45621,"blake2b-432":45622,"blake2b-440":45623,"blake2b-448":45624,"blake2b-456":45625,"blake2b-464":45626,"blake2b-472":45627,"blake2b-480":45628,"blake2b-488":45629,"blake2b-496":45630,"blake2b-504":45631,"blake2b-512":45632,"blake2s-8":45633,"blake2s-16":45634,"blake2s-24":45635,"blake2s-32":45636,"blake2s-40":45637,"blake2s-48":45638,"blake2s-56":45639,"blake2s-64":45640,"blake2s-72":45641,"blake2s-80":45642,"blake2s-88":45643,"blake2s-96":45644,"blake2s-104":45645,"blake2s-112":45646,"blake2s-120":45647,"blake2s-128":45648,"blake2s-136":45649,"blake2s-144":45650,"blake2s-152":45651,"blake2s-160":45652,"blake2s-168":45653,"blake2s-176":45654,"blake2s-184":45655,"blake2s-192":45656,"blake2s-200":45657,"blake2s-208":45658,"blake2s-216":45659,"blake2s-224":45660,"blake2s-232":45661,"blake2s-240":45662,"blake2s-248":45663,"blake2s-256":45664,"skein256-8":45825,"skein256-16":45826,"skein256-24":45827,"skein256-32":45828,"skein256-40":45829,"skein256-48":45830,"skein256-56":45831,"skein256-64":45832,"skein256-72":45833,"skein256-80":45834,"skein256-88":45835,"skein256-96":45836,"skein256-104":45837,"skein256-112":45838,"skein256-120":45839,"skein256-128":45840,"skein256-136":45841,"skein256-144":45842,"skein256-152":45843,"skein256-160":45844,"skein256-168":45845,"skein256-176":45846,"skein256-184":45847,"skein256-192":45848,"skein256-200":45849,"skein256-208":45850,"skein256-216":45851,"skein256-224":45852,"skein256-232":45853,"skein256-240":45854,"skein256-248":45855,"skein256-256":45856,"skein512-8":45857,"skein512-16":45858,"skein512-24":45859,"skein512-32":45860,"skein512-40":45861,"skein512-48":45862,"skein512-56":45863,"skein512-64":45864,"skein512-72":45865,"skein512-80":45866,"skein512-88":45867,"skein512-96":45868,"skein512-104":45869,"skein512-112":45870,"skein512-120":45871,"skein512-128":45872,"skein512-136":45873,"skein512-144":45874,"skein512-152":45875,"skein512-160":45876,"skein512-168":45877,"skein512-176":45878,"skein512-184":45879,"skein512-192":45880,"skein512-200":45881,"skein512-208":45882,"skein512-216":45883,"skein512-224":45884,"skein512-232":45885,"skein512-240":45886,"skein512-248":45887,"skein512-256":45888,"skein512-264":45889,"skein512-272":45890,"skein512-280":45891,"skein512-288":45892,"skein512-296":45893,"skein512-304":45894,"skein512-312":45895,"skein512-320":45896,"skein512-328":45897,"skein512-336":45898,"skein512-344":45899,"skein512-352":45900,"skein512-360":45901,"skein512-368":45902,"skein512-376":45903,"skein512-384":45904,"skein512-392":45905,"skein512-400":45906,"skein512-408":45907,"skein512-416":45908,"skein512-424":45909,"skein512-432":45910,"skein512-440":45911,"skein512-448":45912,"skein512-456":45913,"skein512-464":45914,"skein512-472":45915,"skein512-480":45916,"skein512-488":45917,"skein512-496":45918,"skein512-504":45919,"skein512-512":45920,"skein1024-8":45921,"skein1024-16":45922,"skein1024-24":45923,"skein1024-32":45924,"skein1024-40":45925,"skein1024-48":45926,"skein1024-56":45927,"skein1024-64":45928,"skein1024-72":45929,"skein1024-80":45930,"skein1024-88":45931,"skein1024-96":45932,"skein1024-104":45933,"skein1024-112":45934,"skein1024-120":45935,"skein1024-128":45936,"skein1024-136":45937,"skein1024-144":45938,"skein1024-152":45939,"skein1024-160":45940,"skein1024-168":45941,"skein1024-176":45942,"skein1024-184":45943,"skein1024-192":45944,"skein1024-200":45945,"skein1024-208":45946,"skein1024-216":45947,"skein1024-224":45948,"skein1024-232":45949,"skein1024-240":45950,"skein1024-248":45951,"skein1024-256":45952,"skein1024-264":45953,"skein1024-272":45954,"skein1024-280":45955,"skein1024-288":45956,"skein1024-296":45957,"skein1024-304":45958,"skein1024-312":45959,"skein1024-320":45960,"skein1024-328":45961,"skein1024-336":45962,"skein1024-344":45963,"skein1024-352":45964,"skein1024-360":45965,"skein1024-368":45966,"skein1024-376":45967,"skein1024-384":45968,"skein1024-392":45969,"skein1024-400":45970,"skein1024-408":45971,"skein1024-416":45972,"skein1024-424":45973,"skein1024-432":45974,"skein1024-440":45975,"skein1024-448":45976,"skein1024-456":45977,"skein1024-464":45978,"skein1024-472":45979,"skein1024-480":45980,"skein1024-488":45981,"skein1024-496":45982,"skein1024-504":45983,"skein1024-512":45984,"skein1024-520":45985,"skein1024-528":45986,"skein1024-536":45987,"skein1024-544":45988,"skein1024-552":45989,"skein1024-560":45990,"skein1024-568":45991,"skein1024-576":45992,"skein1024-584":45993,"skein1024-592":45994,"skein1024-600":45995,"skein1024-608":45996,"skein1024-616":45997,"skein1024-624":45998,"skein1024-632":45999,"skein1024-640":46000,"skein1024-648":46001,"skein1024-656":46002,"skein1024-664":46003,"skein1024-672":46004,"skein1024-680":46005,"skein1024-688":46006,"skein1024-696":46007,"skein1024-704":46008,"skein1024-712":46009,"skein1024-720":46010,"skein1024-728":46011,"skein1024-736":46012,"skein1024-744":46013,"skein1024-752":46014,"skein1024-760":46015,"skein1024-768":46016,"skein1024-776":46017,"skein1024-784":46018,"skein1024-792":46019,"skein1024-800":46020,"skein1024-808":46021,"skein1024-816":46022,"skein1024-824":46023,"skein1024-832":46024,"skein1024-840":46025,"skein1024-848":46026,"skein1024-856":46027,"skein1024-864":46028,"skein1024-872":46029,"skein1024-880":46030,"skein1024-888":46031,"skein1024-896":46032,"skein1024-904":46033,"skein1024-912":46034,"skein1024-920":46035,"skein1024-928":46036,"skein1024-936":46037,"skein1024-944":46038,"skein1024-952":46039,"skein1024-960":46040,"skein1024-968":46041,"skein1024-976":46042,"skein1024-984":46043,"skein1024-992":46044,"skein1024-1000":46045,"skein1024-1008":46046,"skein1024-1016":46047,"skein1024-1024":46048,"holochain-adr-v0":8417572,"holochain-adr-v1":8483108,"holochain-key-v0":9728292,"holochain-key-v1":9793828,"holochain-sig-v0":10645796,"holochain-sig-v1":10711332}')},function(e,n){e.exports=require("fs")},function(e,n,t){var i=t(19),a=t(6),o=t(44);e.exports=function(e){return function(n,t,r){var s,c=i(n),p=a(c.length),u=o(r,p);if(e&&t!=t){for(;p>u;)if((s=c[u++])!=s)return!0}else for(;p>u;u++)if((e||u in c)&&c[u]===t)return e||u||0;return!e&&-1}}},function(e,n){n.f=Object.getOwnPropertySymbols},function(e,n,t){var i=t(25);e.exports=Array.isArray||function(e){return"Array"==i(e)}},function(e,n,t){var i=t(8).f,a=Function.prototype,o=/^\s*function ([^ (]*)/;"name"in a||t(7)&&i(a,"name",{configurable:!0,get:function(){try{return(""+this).match(o)[1]}catch(e){return""}}})},function(e,n,t){var i=t(26),a=t(30);e.exports=function(e){return function(n,t){var o,r,s=String(a(n)),c=i(t),p=s.length;return c<0||c>=p?e?"":void 0:(o=s.charCodeAt(c))<55296||o>56319||c+1===p||(r=s.charCodeAt(c+1))<56320||r>57343?e?s.charAt(c):o:e?s.slice(c,c+2):r-56320+(o-55296<<10)+65536}}},function(e,n,t){var i=t(4),a=t(25),o=t(5)("match");e.exports=function(e){var n;return i(e)&&(void 0!==(n=e[o])?!!n:"RegExp"==a(e))}},function(e,n,t){var i=t(5)("iterator"),a=!1;try{var o=[7][i]();o.return=function(){a=!0},Array.from(o,(function(){throw 2}))}catch(e){}e.exports=function(e,n){if(!n&&!a)return!1;var t=!1;try{var o=[7],r=o[i]();r.next=function(){return{done:t=!0}},o[i]=function(){return r},e(o)}catch(e){}return t}},function(e,n,t){"use strict";var i=t(53),a=RegExp.prototype.exec;e.exports=function(e,n){var t=e.exec;if("function"==typeof t){var o=t.call(e,n);if("object"!=typeof o)throw new TypeError("RegExp exec method returned something other than an Object or null");return o}if("RegExp"!==i(e))throw new TypeError("RegExp#exec called on incompatible receiver");return a.call(e,n)}},function(e,n,t){"use strict";t(155);var i=t(15),a=t(14),o=t(3),r=t(30),s=t(5),c=t(113),p=s("species"),u=!o((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),l=function(){var e=/(?:)/,n=e.exec;e.exec=function(){return n.apply(this,arguments)};var t="ab".split(e);return 2===t.length&&"a"===t[0]&&"b"===t[1]}();e.exports=function(e,n,t){var f=s(e),d=!o((function(){var n={};return n[f]=function(){return 7},7!=""[e](n)})),m=d?!o((function(){var n=!1,t=/a/;return t.exec=function(){return n=!0,null},"split"===e&&(t.constructor={},t.constructor[p]=function(){return t}),t[f](""),!n})):void 0;if(!d||!m||"replace"===e&&!u||"split"===e&&!l){var h=/./[f],v=t(r,f,""[e],(function(e,n,t,i,a){return n.exec===c?d&&!a?{done:!0,value:h.call(n,t,i)}:{done:!0,value:e.call(t,n,i)}:{done:!1}})),x=v[0],b=v[1];i(String.prototype,e,x),a(RegExp.prototype,f,2==n?function(e,n){return b.call(e,this,n)}:function(e){return b.call(e,this)})}}},function(e,n,t){var i=t(2).navigator;e.exports=i&&i.userAgent||""},function(e,n,t){"use strict";var i=t(2),a=t(0),o=t(15),r=t(50),s=t(39),c=t(49),p=t(48),u=t(4),l=t(3),f=t(72),d=t(52),m=t(97);e.exports=function(e,n,t,h,v,x){var b=i[e],g=b,k=v?"set":"add",y=g&&g.prototype,w={},S=function(e){var n=y[e];o(y,e,"delete"==e||"has"==e?function(e){return!(x&&!u(e))&&n.call(this,0===e?0:e)}:"get"==e?function(e){return x&&!u(e)?void 0:n.call(this,0===e?0:e)}:"add"==e?function(e){return n.call(this,0===e?0:e),this}:function(e,t){return n.call(this,0===e?0:e,t),this})};if("function"==typeof g&&(x||y.forEach&&!l((function(){(new g).entries().next()})))){var _=new g,j=_[k](x?{}:-0,1)!=_,E=l((function(){_.has(1)})),O=f((function(e){new g(e)})),C=!x&&l((function(){for(var e=new g,n=5;n--;)e[k](n,n);return!e.has(-0)}));O||((g=n((function(n,t){p(n,g,e);var i=m(new b,n,g);return null!=t&&c(t,v,i[k],i),i}))).prototype=y,y.constructor=g),(E||C)&&(S("delete"),S("has"),v&&S("get")),(C||j)&&S(k),x&&y.clear&&delete y.clear}else g=h.getConstructor(n,e,v,k),r(g.prototype,t),s.NEED=!0;return d(g,e),w[e]=g,a(a.G+a.W+a.F*(g!=b),w),x||h.setStrong(g,e,v),g}},function(e,n,t){for(var i,a=t(2),o=t(14),r=t(42),s=r("typed_array"),c=r("view"),p=!(!a.ArrayBuffer||!a.DataView),u=p,l=0,f="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");l<9;)(i=a[f[l++]])?(o(i.prototype,s,!0),o(i.prototype,c,!0)):u=!1;e.exports={ABV:p,CONSTR:u,TYPED:s,VIEW:c}},function(e,n,t){"use strict";e.exports=t(38)||!t(3)((function(){var e=Math.random();__defineSetter__.call(null,e,(function(){})),delete t(2)[e]}))},function(e,n,t){"use strict";var i=t(0);e.exports=function(e){i(i.S,e,{of:function(){for(var e=arguments.length,n=new Array(e);e--;)n[e]=arguments[e];return new this(n)}})}},function(e,n,t){"use strict";var i=t(0),a=t(11),o=t(24),r=t(49);e.exports=function(e){i(i.S,e,{from:function(e){var n,t,i,s,c=arguments[1];return a(this),(n=void 0!==c)&&a(c),null==e?new this:(t=[],n?(i=0,s=o(c,arguments[2],2),r(e,!1,(function(e){t.push(s(e,i++))}))):r(e,!1,t.push,t),new this(t))}})}},function(e,n){e.exports=require("stream")},function(e,n){e.exports=require("util")},function(e,n,t){var i=t(184);e.exports=i("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")},function(e,n){e.exports=require("path")},function(e,n,t){"use strict";var i=t(2),a=t(18),o=t(7),r=t(0),s=t(15),c=t(39).KEY,p=t(3),u=t(58),l=t(52),f=t(42),d=t(5),m=t(134),h=t(87),v=t(203),x=t(68),b=t(1),g=t(4),k=t(9),y=t(19),w=t(29),S=t(41),_=t(45),j=t(137),E=t(20),O=t(67),C=t(8),A=t(43),P=E.f,M=C.f,F=j.f,B=i.Symbol,N=i.JSON,I=N&&N.stringify,R=d("_hidden"),T=d("toPrimitive"),z={}.propertyIsEnumerable,L=u("symbol-registry"),q=u("symbols"),D=u("op-symbols"),U=Object.prototype,$="function"==typeof B&&!!O.f,V=i.QObject,W=!V||!V.prototype||!V.prototype.findChild,G=o&&p((function(){return 7!=_(M({},"a",{get:function(){return M(this,"a",{value:7}).a}})).a}))?function(e,n,t){var i=P(U,n);i&&delete U[n],M(e,n,t),i&&e!==U&&M(U,n,i)}:M,H=function(e){var n=q[e]=_(B.prototype);return n._k=e,n},K=$&&"symbol"==typeof B.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof B},J=function(e,n,t){return e===U&&J(D,n,t),b(e),n=w(n,!0),b(t),a(q,n)?(t.enumerable?(a(e,R)&&e[R][n]&&(e[R][n]=!1),t=_(t,{enumerable:S(0,!1)})):(a(e,R)||M(e,R,S(1,{})),e[R][n]=!0),G(e,n,t)):M(e,n,t)},Y=function(e,n){b(e);for(var t,i=v(n=y(n)),a=0,o=i.length;o>a;)J(e,t=i[a++],n[t]);return e},X=function(e){var n=z.call(this,e=w(e,!0));return!(this===U&&a(q,e)&&!a(D,e))&&(!(n||!a(this,e)||!a(q,e)||a(this,R)&&this[R][e])||n)},Z=function(e,n){if(e=y(e),n=w(n,!0),e!==U||!a(q,n)||a(D,n)){var t=P(e,n);return!t||!a(q,n)||a(e,R)&&e[R][n]||(t.enumerable=!0),t}},Q=function(e){for(var n,t=F(y(e)),i=[],o=0;t.length>o;)a(q,n=t[o++])||n==R||n==c||i.push(n);return i},ee=function(e){for(var n,t=e===U,i=F(t?D:y(e)),o=[],r=0;i.length>r;)!a(q,n=i[r++])||t&&!a(U,n)||o.push(q[n]);return o};$||(s((B=function(){if(this instanceof B)throw TypeError("Symbol is not a constructor!");var e=f(arguments.length>0?arguments[0]:void 0),n=function(t){this===U&&n.call(D,t),a(this,R)&&a(this[R],e)&&(this[R][e]=!1),G(this,e,S(1,t))};return o&&W&&G(U,e,{configurable:!0,set:n}),H(e)}).prototype,"toString",(function(){return this._k})),E.f=Z,C.f=J,t(46).f=j.f=Q,t(60).f=X,O.f=ee,o&&!t(38)&&s(U,"propertyIsEnumerable",X,!0),m.f=function(e){return H(d(e))}),r(r.G+r.W+r.F*!$,{Symbol:B});for(var ne="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),te=0;ne.length>te;)d(ne[te++]);for(var ie=A(d.store),ae=0;ie.length>ae;)h(ie[ae++]);r(r.S+r.F*!$,"Symbol",{for:function(e){return a(L,e+="")?L[e]:L[e]=B(e)},keyFor:function(e){if(!K(e))throw TypeError(e+" is not a symbol!");for(var n in L)if(L[n]===e)return n},useSetter:function(){W=!0},useSimple:function(){W=!1}}),r(r.S+r.F*!$,"Object",{create:function(e,n){return void 0===n?_(e):Y(_(e),n)},defineProperty:J,defineProperties:Y,getOwnPropertyDescriptor:Z,getOwnPropertyNames:Q,getOwnPropertySymbols:ee});var oe=p((function(){O.f(1)}));r(r.S+r.F*oe,"Object",{getOwnPropertySymbols:function(e){return O.f(k(e))}}),N&&r(r.S+r.F*(!$||p((function(){var e=B();return"[null]"!=I([e])||"{}"!=I({a:e})||"{}"!=I(Object(e))}))),"JSON",{stringify:function(e){for(var n,t,i=[e],a=1;arguments.length>a;)i.push(arguments[a++]);if(t=n=i[1],(g(n)||void 0!==e)&&!K(e))return x(n)||(n=function(e,n){if("function"==typeof t&&(n=t.call(this,e,n)),!K(n))return n}),i[1]=n,I.apply(N,i)}}),B.prototype[T]||t(14)(B.prototype,T,B.prototype.valueOf),l(B,"Symbol"),l(Math,"Math",!0),l(i.JSON,"JSON",!0)},function(e,n,t){var i=t(4),a=t(2).document,o=i(a)&&i(a.createElement);e.exports=function(e){return o?a.createElement(e):{}}},function(e,n,t){var i=t(2),a=t(23),o=t(38),r=t(134),s=t(8).f;e.exports=function(e){var n=a.Symbol||(a.Symbol=o?{}:i.Symbol||{});"_"==e.charAt(0)||e in n||s(n,e,{value:r.f(e)})}},function(e,n,t){var i=t(58)("keys"),a=t(42);e.exports=function(e){return i[e]||(i[e]=a(e))}},function(e,n){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,n,t){var i=t(2).document;e.exports=i&&i.documentElement},function(e,n,t){var i=t(0);i(i.S+i.F*!t(7),"Object",{defineProperties:t(136)})},function(e,n,t){var i=t(19),a=t(20).f;t(31)("getOwnPropertyDescriptor",(function(){return function(e,n){return a(i(e),n)}}))},function(e,n,t){var i=t(9),a=t(43);t(31)("keys",(function(){return function(e){return a(i(e))}}))},function(e,n,t){var i=t(4),a=t(1),o=function(e,n){if(a(e),!i(n)&&null!==n)throw TypeError(n+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,n,i){try{(i=t(24)(Function.call,t(20).f(Object.prototype,"__proto__").set,2))(e,[]),n=!(e instanceof Array)}catch(e){n=!0}return function(e,t){return o(e,t),n?e.__proto__=t:i(e,t),e}}({},!1):void 0),check:o}},function(e,n){e.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},function(e,n,t){"use strict";var i=t(2),a=t(18),o=t(25),r=t(97),s=t(29),c=t(3),p=t(46).f,u=t(20).f,l=t(8).f,f=t(54).trim,d=i.Number,m=d,h=d.prototype,v="Number"==o(t(45)(h)),x="trim"in String.prototype,b=function(e){var n=s(e,!1);if("string"==typeof n&&n.length>2){var t,i,a,o=(n=x?n.trim():f(n,3)).charCodeAt(0);if(43===o||45===o){if(88===(t=n.charCodeAt(2))||120===t)return NaN}else if(48===o){switch(n.charCodeAt(1)){case 66:case 98:i=2,a=49;break;case 79:case 111:i=8,a=55;break;default:return+n}for(var r,c=n.slice(2),p=0,u=c.length;p<u;p++)if((r=c.charCodeAt(p))<48||r>a)return NaN;return parseInt(c,i)}}return+n};if(!d(" 0o1")||!d("0b1")||d("+0x1")){d=function(e){var n=arguments.length<1?0:e,t=this;return t instanceof d&&(v?c((function(){h.valueOf.call(t)})):"Number"!=o(t))?r(new m(b(n)),t,d):b(n)};for(var g,k=t(7)?p(m):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),y=0;k.length>y;y++)a(m,g=k[y])&&!a(d,g)&&l(d,g,u(m,g));d.prototype=h,h.constructor=d,t(15)(i,"Number",d)}},function(e,n,t){var i=t(4),a=t(94).set;e.exports=function(e,n,t){var o,r=n.constructor;return r!==t&&"function"==typeof r&&(o=r.prototype)!==t.prototype&&i(o)&&a&&a(e,o),e}},function(e,n,t){"use strict";var i=t(26),a=t(30);e.exports=function(e){var n=String(a(this)),t="",o=i(e);if(o<0||o==1/0)throw RangeError("Count can't be negative");for(;o>0;(o>>>=1)&&(n+=n))1&o&&(t+=n);return t}},function(e,n,t){var i=t(0);i(i.S,"Number",{isInteger:t(145)})},function(e,n){e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}},function(e,n){var t=Math.expm1;e.exports=!t||t(10)>22025.465794806718||t(10)<22025.465794806718||-2e-17!=t(-2e-17)?function(e){return 0==(e=+e)?e:e>-1e-6&&e<1e-6?e+e*e/2:Math.exp(e)-1}:t},function(e,n,t){"use strict";var i=t(38),a=t(0),o=t(15),r=t(14),s=t(55),c=t(103),p=t(52),u=t(21),l=t(5)("iterator"),f=!([].keys&&"next"in[].keys()),d=function(){return this};e.exports=function(e,n,t,m,h,v,x){c(t,n,m);var b,g,k,y=function(e){if(!f&&e in j)return j[e];switch(e){case"keys":case"values":return function(){return new t(this,e)}}return function(){return new t(this,e)}},w=n+" Iterator",S="values"==h,_=!1,j=e.prototype,E=j[l]||j["@@iterator"]||h&&j[h],O=E||y(h),C=h?S?y("entries"):O:void 0,A="Array"==n&&j.entries||E;if(A&&(k=u(A.call(new e)))!==Object.prototype&&k.next&&(p(k,w,!0),i||"function"==typeof k[l]||r(k,l,d)),S&&E&&"values"!==E.name&&(_=!0,O=function(){return E.call(this)}),i&&!x||!f&&!_&&j[l]||r(j,l,O),s[n]=O,s[w]=d,h)if(b={values:S?O:y("values"),keys:v?O:y("keys"),entries:C},x)for(g in b)g in j||o(j,g,b[g]);else a(a.P+a.F*(f||_),n,b);return b}},function(e,n,t){"use strict";var i=t(45),a=t(41),o=t(52),r={};t(14)(r,t(5)("iterator"),(function(){return this})),e.exports=function(e,n,t){e.prototype=i(r,{next:a(1,t)}),o(e,n+" Iterator")}},function(e,n,t){var i=t(71),a=t(30);e.exports=function(e,n,t){if(i(n))throw TypeError("String#"+t+" doesn't accept regex!");return String(a(e))}},function(e,n,t){var i=t(5)("match");e.exports=function(e){var n=/./;try{"/./"[e](n)}catch(t){try{return n[i]=!1,!"/./"[e](n)}catch(e){}}return!0}},function(e,n,t){var i=t(55),a=t(5)("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(i.Array===e||o[a]===e)}},function(e,n,t){"use strict";var i=t(8),a=t(41);e.exports=function(e,n,t){n in e?i.f(e,n,a(0,t)):e[n]=t}},function(e,n,t){var i=t(53),a=t(5)("iterator"),o=t(55);e.exports=t(23).getIteratorMethod=function(e){if(null!=e)return e[a]||e["@@iterator"]||o[i(e)]}},function(e,n,t){var i=t(279);e.exports=function(e,n){return new(i(e))(n)}},function(e,n,t){"use strict";var i=t(0),a=t(32)(2);i(i.P+i.F*!t(27)([].filter,!0),"Array",{filter:function(e){return a(this,e,arguments[1])}})},function(e,n,t){"use strict";var i=t(9),a=t(44),o=t(6);e.exports=function(e){for(var n=i(this),t=o(n.length),r=arguments.length,s=a(r>1?arguments[1]:void 0,t),c=r>2?arguments[2]:void 0,p=void 0===c?t:a(c,t);p>s;)n[s++]=e;return n}},function(e,n,t){"use strict";var i=t(40),a=t(154),o=t(55),r=t(19);e.exports=t(102)(Array,"Array",(function(e,n){this._t=r(e),this._i=0,this._k=n}),(function(){var e=this._t,n=this._k,t=this._i++;return!e||t>=e.length?(this._t=void 0,a(1)):a(0,"keys"==n?t:"values"==n?e[t]:[t,e[t]])}),"values"),o.Arguments=o.Array,i("keys"),i("values"),i("entries")},function(e,n,t){"use strict";var i,a,o=t(61),r=RegExp.prototype.exec,s=String.prototype.replace,c=r,p=(i=/a/,a=/b*/g,r.call(i,"a"),r.call(a,"a"),0!==i.lastIndex||0!==a.lastIndex),u=void 0!==/()??/.exec("")[1];(p||u)&&(c=function(e){var n,t,i,a,c=this;return u&&(t=new RegExp("^"+c.source+"$(?!\\s)",o.call(c))),p&&(n=c.lastIndex),i=r.call(c,e),p&&i&&(c.lastIndex=c.global?i.index+i[0].length:n),u&&i&&i.length>1&&s.call(i[0],t,(function(){for(a=1;a<arguments.length-2;a++)void 0===arguments[a]&&(i[a]=void 0)})),i}),e.exports=c},function(e,n,t){"use strict";var i=t(70)(!0);e.exports=function(e,n,t){return n+(t?i(e,n).length:1)}},function(e,n,t){var i,a,o,r=t(24),s=t(141),c=t(90),p=t(86),u=t(2),l=u.process,f=u.setImmediate,d=u.clearImmediate,m=u.MessageChannel,h=u.Dispatch,v=0,x={},b=function(){var e=+this;if(x.hasOwnProperty(e)){var n=x[e];delete x[e],n()}},g=function(e){b.call(e.data)};f&&d||(f=function(e){for(var n=[],t=1;arguments.length>t;)n.push(arguments[t++]);return x[++v]=function(){s("function"==typeof e?e:Function(e),n)},i(v),v},d=function(e){delete x[e]},"process"==t(25)(l)?i=function(e){l.nextTick(r(b,e,1))}:h&&h.now?i=function(e){h.now(r(b,e,1))}:m?(o=(a=new m).port2,a.port1.onmessage=g,i=r(o.postMessage,o,1)):u.addEventListener&&"function"==typeof postMessage&&!u.importScripts?(i=function(e){u.postMessage(e+"","*")},u.addEventListener("message",g,!1)):i="onreadystatechange"in p("script")?function(e){c.appendChild(p("script")).onreadystatechange=function(){c.removeChild(this),b.call(e)}}:function(e){setTimeout(r(b,e,1),0)}),e.exports={set:f,clear:d}},function(e,n,t){var i=t(2),a=t(115).set,o=i.MutationObserver||i.WebKitMutationObserver,r=i.process,s=i.Promise,c="process"==t(25)(r);e.exports=function(){var e,n,t,p=function(){var i,a;for(c&&(i=r.domain)&&i.exit();e;){a=e.fn,e=e.next;try{a()}catch(i){throw e?t():n=void 0,i}}n=void 0,i&&i.enter()};if(c)t=function(){r.nextTick(p)};else if(!o||i.navigator&&i.navigator.standalone)if(s&&s.resolve){var u=s.resolve(void 0);t=function(){u.then(p)}}else t=function(){a.call(i,p)};else{var l=!0,f=document.createTextNode("");new o(p).observe(f,{characterData:!0}),t=function(){f.data=l=!l}}return function(i){var a={fn:i,next:void 0};n&&(n.next=a),e||(e=a,t()),n=a}}},function(e,n,t){"use strict";var i=t(11);function a(e){var n,t;this.promise=new e((function(e,i){if(void 0!==n||void 0!==t)throw TypeError("Bad Promise constructor");n=e,t=i})),this.resolve=i(n),this.reject=i(t)}e.exports.f=function(e){return new a(e)}},function(e,n,t){"use strict";var i=t(2),a=t(7),o=t(38),r=t(77),s=t(14),c=t(50),p=t(3),u=t(48),l=t(26),f=t(6),d=t(164),m=t(46).f,h=t(8).f,v=t(111),x=t(52),b=i.ArrayBuffer,g=i.DataView,k=i.Math,y=i.RangeError,w=i.Infinity,S=b,_=k.abs,j=k.pow,E=k.floor,O=k.log,C=k.LN2,A=a?"_b":"buffer",P=a?"_l":"byteLength",M=a?"_o":"byteOffset";function F(e,n,t){var i,a,o,r=new Array(t),s=8*t-n-1,c=(1<<s)-1,p=c>>1,u=23===n?j(2,-24)-j(2,-77):0,l=0,f=e<0||0===e&&1/e<0?1:0;for((e=_(e))!=e||e===w?(a=e!=e?1:0,i=c):(i=E(O(e)/C),e*(o=j(2,-i))<1&&(i--,o*=2),(e+=i+p>=1?u/o:u*j(2,1-p))*o>=2&&(i++,o/=2),i+p>=c?(a=0,i=c):i+p>=1?(a=(e*o-1)*j(2,n),i+=p):(a=e*j(2,p-1)*j(2,n),i=0));n>=8;r[l++]=255&a,a/=256,n-=8);for(i=i<<n|a,s+=n;s>0;r[l++]=255&i,i/=256,s-=8);return r[--l]|=128*f,r}function B(e,n,t){var i,a=8*t-n-1,o=(1<<a)-1,r=o>>1,s=a-7,c=t-1,p=e[c--],u=127&p;for(p>>=7;s>0;u=256*u+e[c],c--,s-=8);for(i=u&(1<<-s)-1,u>>=-s,s+=n;s>0;i=256*i+e[c],c--,s-=8);if(0===u)u=1-r;else{if(u===o)return i?NaN:p?-w:w;i+=j(2,n),u-=r}return(p?-1:1)*i*j(2,u-n)}function N(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function I(e){return[255&e]}function R(e){return[255&e,e>>8&255]}function T(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function z(e){return F(e,52,8)}function L(e){return F(e,23,4)}function q(e,n,t){h(e.prototype,n,{get:function(){return this[t]}})}function D(e,n,t,i){var a=d(+t);if(a+n>e[P])throw y("Wrong index!");var o=e[A]._b,r=a+e[M],s=o.slice(r,r+n);return i?s:s.reverse()}function U(e,n,t,i,a,o){var r=d(+t);if(r+n>e[P])throw y("Wrong index!");for(var s=e[A]._b,c=r+e[M],p=i(+a),u=0;u<n;u++)s[c+u]=p[o?u:n-u-1]}if(r.ABV){if(!p((function(){b(1)}))||!p((function(){new b(-1)}))||p((function(){return new b,new b(1.5),new b(NaN),"ArrayBuffer"!=b.name}))){for(var $,V=(b=function(e){return u(this,b),new S(d(e))}).prototype=S.prototype,W=m(S),G=0;W.length>G;)($=W[G++])in b||s(b,$,S[$]);o||(V.constructor=b)}var H=new g(new b(2)),K=g.prototype.setInt8;H.setInt8(0,2147483648),H.setInt8(1,2147483649),!H.getInt8(0)&&H.getInt8(1)||c(g.prototype,{setInt8:function(e,n){K.call(this,e,n<<24>>24)},setUint8:function(e,n){K.call(this,e,n<<24>>24)}},!0)}else b=function(e){u(this,b,"ArrayBuffer");var n=d(e);this._b=v.call(new Array(n),0),this[P]=n},g=function(e,n,t){u(this,g,"DataView"),u(e,b,"DataView");var i=e[P],a=l(n);if(a<0||a>i)throw y("Wrong offset!");if(a+(t=void 0===t?i-a:f(t))>i)throw y("Wrong length!");this[A]=e,this[M]=a,this[P]=t},a&&(q(b,"byteLength","_l"),q(g,"buffer","_b"),q(g,"byteLength","_l"),q(g,"byteOffset","_o")),c(g.prototype,{getInt8:function(e){return D(this,1,e)[0]<<24>>24},getUint8:function(e){return D(this,1,e)[0]},getInt16:function(e){var n=D(this,2,e,arguments[1]);return(n[1]<<8|n[0])<<16>>16},getUint16:function(e){var n=D(this,2,e,arguments[1]);return n[1]<<8|n[0]},getInt32:function(e){return N(D(this,4,e,arguments[1]))},getUint32:function(e){return N(D(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return B(D(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return B(D(this,8,e,arguments[1]),52,8)},setInt8:function(e,n){U(this,1,e,I,n)},setUint8:function(e,n){U(this,1,e,I,n)},setInt16:function(e,n){U(this,2,e,R,n,arguments[2])},setUint16:function(e,n){U(this,2,e,R,n,arguments[2])},setInt32:function(e,n){U(this,4,e,T,n,arguments[2])},setUint32:function(e,n){U(this,4,e,T,n,arguments[2])},setFloat32:function(e,n){U(this,4,e,L,n,arguments[2])},setFloat64:function(e,n){U(this,8,e,z,n,arguments[2])}});x(b,"ArrayBuffer"),x(g,"DataView"),s(g.prototype,r.VIEW,!0),n.ArrayBuffer=b,n.DataView=g},function(e,n,t){var i=t(0),a=t(165),o=t(19),r=t(20),s=t(107);i(i.S,"Object",{getOwnPropertyDescriptors:function(e){for(var n,t,i=o(e),c=r.f,p=a(i),u={},l=0;p.length>l;)void 0!==(t=c(i,n=p[l++]))&&s(u,n,t);return u}})},function(e,n,t){var i=t(0),a=t(169)(!0);i(i.S,"Object",{entries:function(e){return a(e)}})},function(e,n,t){"use strict";var i=t(13);function a(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,n,t){if(!n)return e;var o;if(t)o=t(n);else if(i.isURLSearchParams(n))o=n.toString();else{var r=[];i.forEach(n,(function(e,n){null!=e&&(i.isArray(e)?n+="[]":e=[e],i.forEach(e,(function(e){i.isDate(e)?e=e.toISOString():i.isObject(e)&&(e=JSON.stringify(e)),r.push(a(n)+"="+a(e))})))})),o=r.join("&")}if(o){var s=e.indexOf("#");-1!==s&&(e=e.slice(0,s)),e+=(-1===e.indexOf("?")?"?":"&")+o}return e}},function(e,n,t){"use strict";var i=t(177);e.exports=function(e,n,t,a,o){var r=new Error(e);return i(r,n,t,a,o)}},function(e,n){e.exports=require("http")},function(e,n){e.exports=require("https")},function(e,n){e.exports=require("url")},function(e,n){function t(n){return e.exports=t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.__esModule=!0,e.exports.default=e.exports,t(n)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},function(e,n,t){"use strict";const i=t(83),a=t(414);n.names=a.names,n.codes=a.codes,n.defaultLengths=a.defaultLengths;const o=t(57);function r(e){n.decode(e)}n.toHexString=function(e){if(!Buffer.isBuffer(e))throw new Error("must be passed a buffer");return e.toString("hex")},n.fromHexString=function(e){return Buffer.from(e,"hex")},n.toB58String=function(e){if(!Buffer.isBuffer(e))throw new Error("must be passed a buffer");return i.encode(e)},n.fromB58String=function(e){let n=e;return Buffer.isBuffer(e)&&(n=e.toString()),Buffer.from(i.decode(n))},n.decode=function(e){if(!Buffer.isBuffer(e))throw new Error("multihash must be a Buffer");if(e.length<3)throw new Error("multihash too short. must be > 3 bytes.");const t=o.decode(e);if(!n.isValidCode(t))throw new Error(`multihash unknown function code: 0x${t.toString(16)}`);e=e.slice(o.decode.bytes);const i=o.decode(e);if(i<1)throw new Error(`multihash invalid length: 0x${i.toString(16)}`);if((e=e.slice(o.decode.bytes)).length!==i)throw new Error(`multihash length inconsistent: 0x${e.toString("hex")}`);return{code:t,name:a.codes[t],length:i,digest:e}},n.encode=function(e,t,i){if(!e||void 0===t)throw new Error("multihash encode requires at least two args: digest, code");const a=n.coerceCode(t);if(!Buffer.isBuffer(e))throw new Error("digest should be a Buffer");if(null==i&&(i=e.length),i&&e.length!==i)throw new Error("digest length should be equal to specified length.");return Buffer.concat([Buffer.from(o.encode(a)),Buffer.from(o.encode(i)),e])},n.coerceCode=function(e){let t=e;if("string"==typeof e){if(void 0===a.names[e])throw new Error(`Unrecognized hash function named: ${e}`);t=a.names[e]}if("number"!=typeof t)throw new Error(`Hash function code should be a number. Got: ${t}`);if(void 0===a.codes[t]&&!n.isAppCode(t))throw new Error(`Unrecognized function code: ${t}`);return t},n.isAppCode=function(e){return e>0&&e<16},n.isValidCode=function(e){return!!n.isAppCode(e)||!!a.codes[e]},n.validate=r,n.prefix=function(e){return r(e),e.slice(0,2)}},function(e,n,t){"use strict";function i(e){if("number"==typeof e){if(i.codes[e])return i.codes[e];throw new Error("no protocol with code: "+e)}if("string"==typeof e||e instanceof String){if(i.names[e])return i.names[e];throw new Error("no protocol with name: "+e)}throw new Error("invalid protocol id type: "+e)}const a=-1;function o(e,n,t,i,a){return{code:e,size:n,name:t,resolvable:Boolean(i),path:Boolean(a)}}i.lengthPrefixedVarSize=a,i.V=a,i.table=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,a,"ip6zone"],[53,a,"dns","resolvable"],[54,a,"dns4","resolvable"],[55,a,"dns6","resolvable"],[56,a,"dnsaddr","resolvable"],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,a,"unix",!1,"path"],[421,a,"ipfs"],[421,a,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,a,"garlic64"],[460,0,"quic"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"]],i.names={},i.codes={},i.table.map(e=>{const n=o.apply(null,e);i.codes[n.code]=n,i.names[n.name]=n}),i.object=o,e.exports=i},function(e,n,t){"use strict";const i=t(127),a=t(186),o=t(428),r=t(64),s=t(433);class c{constructor(e,n,t,r){if(p.isCID(e)){const n=e;return this.version=n.version,this.codec=n.codec,this.multihash=Buffer.from(n.multihash),void(this.multibaseName=n.multibaseName||(0===n.version?"base58btc":"base32"))}if("string"==typeof e){const n=a.isEncoded(e);if(n){const t=a.decode(e);this.version=parseInt(t.slice(0,1).toString("hex"),16),this.codec=o.getCodec(t.slice(1)),this.multihash=o.rmPrefix(t.slice(1)),this.multibaseName=n}else this.version=0,this.codec="dag-pb",this.multihash=i.fromB58String(e),this.multibaseName="base58btc";return c.validateCID(this),void Object.defineProperty(this,"string",{value:e})}if(Buffer.isBuffer(e)){const n=e.slice(0,1),t=parseInt(n.toString("hex"),16);if(1===t){const n=e;this.version=t,this.codec=o.getCodec(n.slice(1)),this.multihash=o.rmPrefix(n.slice(1)),this.multibaseName="base32"}else this.version=0,this.codec="dag-pb",this.multihash=e,this.multibaseName="base58btc";c.validateCID(this)}else this.version=e,this.codec=n,this.multihash=t,this.multibaseName=r||(0===e?"base58btc":"base32"),c.validateCID(this)}get buffer(){let e=this._buffer;if(!e){if(0===this.version)e=this.multihash;else{if(1!==this.version)throw new Error("unsupported version");e=Buffer.concat([Buffer.from("01","hex"),o.getCodeVarint(this.codec),this.multihash])}Object.defineProperty(this,"_buffer",{value:e})}return e}get prefix(){return Buffer.concat([Buffer.from(`0${this.version}`,"hex"),o.getCodeVarint(this.codec),i.prefix(this.multihash)])}toV0(){if("dag-pb"!==this.codec)throw new Error("Cannot convert a non dag-pb CID to CIDv0");const{name:e,length:n}=i.decode(this.multihash);if("sha2-256"!==e)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");if(32!==n)throw new Error("Cannot convert non 32 byte multihash CID to CIDv0");return new p(0,this.codec,this.multihash)}toV1(){return new p(1,this.codec,this.multihash)}toBaseEncodedString(e=this.multibaseName){if(this.string&&e===this.multibaseName)return this.string;let n=null;if(0===this.version){if("base58btc"!==e)throw new Error("not supported with CIDv0, to support different bases, please migrate the instance do CIDv1, you can do that through cid.toV1()");n=i.toB58String(this.multihash)}else{if(1!==this.version)throw new Error("unsupported version");n=a.encode(e,this.buffer).toString()}return e===this.multibaseName&&Object.defineProperty(this,"string",{value:n}),n}toString(e){return this.toBaseEncodedString(e)}toJSON(){return{codec:this.codec,version:this.version,hash:this.multihash}}equals(e){return this.codec===e.codec&&this.version===e.version&&this.multihash.equals(e.multihash)}static validateCID(e){const n=s.checkCIDComponents(e);if(n)throw new Error(n)}}const p=t(189)(c,{className:"CID",symbolName:"@ipld/js-cid/CID"});p.codecs=r,e.exports=p},function(e,n,t){var i=t(65),a=t(84);n.readdirr=function(e,n){var t=[],o=[];t.push(e),function e(r){if(r==t.length)return n(null,t,o);i.readdir(t[r],(function(s,c){if(s)return n(s);!function(e,n,r){!function s(c){if(c==n.length)return r();var p=a.join(e,n[c]);i.stat(p,(function(e,n){if(e)return r(e);n.isDirectory()?t.push(p):o.push(p),s(++c)}))}(0)}(t[r],c,(function(t){if(t)return n(t);e(++r)}))}))}(0)}},function(e,n,t){var i=t(65),a=t(130).readdirr;function o(e,n){return e>n?-1:e<n?1:0}n.rmdirr=function(e,t){a(e,(function(e,i,a){if(e)return t(e);n.rmfiles(a,(function(e){if(e)return t(e);n.rmdirs(i,t)}))}))},n.rmfiles=function(e,n){!function t(a){if(a==e.length)return n();i.unlink(e[a],(function(e){if(e)return n(e);t(++a)}))}(0)},n.rmdirs=function(e,n){e.sort(o),function t(a){if(a==e.length)return n();i.rmdir(e[a],(function(e){if(e)return n(e);t(++a)}))}(0)}},function(e,n,t){var i=t(65),a=t(84),o=t(130).readdirr;n.cpdirr=function(e,t,i){o(e,(function(a,o,r){if(a)return i(a);n.cpdirs(e,t,o,(function(a){if(a)return i(a);n.cpfiles(e,t,r,(function(e){if(e)return i(e);i()}))}))}))},n.cpdirs=function(e,n,t,o){t.sort(),function r(s){if(s==t.length)return o();var c=a.relative(e,t[s]);c=a.join(n,c),i.exists(c,(function(e){if(e)return r(++s);i.mkdir(c,(function(e){if(e)return o(e);r(++s)}))}))}(0)},n.cpfiles=function(e,n,t,o){!function r(s){if(s==t.length)return o();i.readFile(t[s],(function(c,p){if(c)return o(c);var u=a.relative(e,t[s]);u=a.join(n,u),i.writeFile(u,p,(function(e){if(e)return o(e);r(++s)}))}))}(0)}},function(e,n,t){e.exports=!t(7)&&!t(3)((function(){return 7!=Object.defineProperty(t(86)("div"),"a",{get:function(){return 7}}).a}))},function(e,n,t){n.f=t(5)},function(e,n,t){var i=t(18),a=t(19),o=t(66)(!1),r=t(88)("IE_PROTO");e.exports=function(e,n){var t,s=a(e),c=0,p=[];for(t in s)t!=r&&i(s,t)&&p.push(t);for(;n.length>c;)i(s,t=n[c++])&&(~o(p,t)||p.push(t));return p}},function(e,n,t){var i=t(8),a=t(1),o=t(43);e.exports=t(7)?Object.defineProperties:function(e,n){a(e);for(var t,r=o(n),s=r.length,c=0;s>c;)i.f(e,t=r[c++],n[t]);return e}},function(e,n,t){var i=t(19),a=t(46).f,o={}.toString,r="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return r&&"[object Window]"==o.call(e)?function(e){try{return a(e)}catch(e){return r.slice()}}(e):a(i(e))}},function(e,n,t){"use strict";var i=t(7),a=t(43),o=t(67),r=t(60),s=t(9),c=t(59),p=Object.assign;e.exports=!p||t(3)((function(){var e={},n={},t=Symbol(),i="abcdefghijklmnopqrst";return e[t]=7,i.split("").forEach((function(e){n[e]=e})),7!=p({},e)[t]||Object.keys(p({},n)).join("")!=i}))?function(e,n){for(var t=s(e),p=arguments.length,u=1,l=o.f,f=r.f;p>u;)for(var d,m=c(arguments[u++]),h=l?a(m).concat(l(m)):a(m),v=h.length,x=0;v>x;)d=h[x++],i&&!f.call(m,d)||(t[d]=m[d]);return t}:p},function(e,n){e.exports=Object.is||function(e,n){return e===n?0!==e||1/e==1/n:e!=e&&n!=n}},function(e,n,t){"use strict";var i=t(11),a=t(4),o=t(141),r=[].slice,s={},c=function(e,n,t){if(!(n in s)){for(var i=[],a=0;a<n;a++)i[a]="a["+a+"]";s[n]=Function("F,a","return new F("+i.join(",")+")")}return s[n](e,t)};e.exports=Function.bind||function(e){var n=i(this),t=r.call(arguments,1),s=function(){var i=t.concat(r.call(arguments));return this instanceof s?c(n,i.length,i):o(n,i,e)};return a(n.prototype)&&(s.prototype=n.prototype),s}},function(e,n){e.exports=function(e,n,t){var i=void 0===t;switch(n.length){case 0:return i?e():e.call(t);case 1:return i?e(n[0]):e.call(t,n[0]);case 2:return i?e(n[0],n[1]):e.call(t,n[0],n[1]);case 3:return i?e(n[0],n[1],n[2]):e.call(t,n[0],n[1],n[2]);case 4:return i?e(n[0],n[1],n[2],n[3]):e.call(t,n[0],n[1],n[2],n[3])}return e.apply(t,n)}},function(e,n,t){var i=t(2).parseInt,a=t(54).trim,o=t(95),r=/^[-+]?0[xX]/;e.exports=8!==i(o+"08")||22!==i(o+"0x16")?function(e,n){var t=a(String(e),3);return i(t,n>>>0||(r.test(t)?16:10))}:i},function(e,n,t){var i=t(2).parseFloat,a=t(54).trim;e.exports=1/i(t(95)+"-0")!=-1/0?function(e){var n=a(String(e),3),t=i(n);return 0===t&&"-"==n.charAt(0)?-0:t}:i},function(e,n,t){var i=t(25);e.exports=function(e,n){if("number"!=typeof e&&"Number"!=i(e))throw TypeError(n);return+e}},function(e,n,t){var i=t(4),a=Math.floor;e.exports=function(e){return!i(e)&&isFinite(e)&&a(e)===e}},function(e,n){e.exports=Math.log1p||function(e){return(e=+e)>-1e-8&&e<1e-8?e-e*e/2:Math.log(1+e)}},function(e,n,t){var i=t(100),a=Math.pow,o=a(2,-52),r=a(2,-23),s=a(2,127)*(2-r),c=a(2,-126);e.exports=Math.fround||function(e){var n,t,a=Math.abs(e),p=i(e);return a<c?p*(a/c/r+1/o-1/o)*c*r:(t=(n=(1+r/o)*a)-(n-a))>s||t!=t?p*(1/0):p*t}},function(e,n,t){var i=t(0),a=t(271);i(i.P+i.F*(Date.prototype.toISOString!==a),"Date",{toISOString:a})},function(e,n,t){var i=t(0);i(i.S,"Array",{isArray:t(68)})},function(e,n,t){var i=t(1);e.exports=function(e,n,t,a){try{return a?n(i(t)[0],t[1]):n(t)}catch(n){var o=e.return;throw void 0!==o&&i(o.call(e)),n}}},function(e,n,t){"use strict";var i=t(0),a=t(11),o=t(9),r=t(3),s=[].sort,c=[1,2,3];i(i.P+i.F*(r((function(){c.sort(void 0)}))||!r((function(){c.sort(null)}))||!t(27)(s)),"Array",{sort:function(e){return void 0===e?s.call(o(this)):s.call(o(this),a(e))}})},function(e,n,t){var i=t(11),a=t(9),o=t(59),r=t(6);e.exports=function(e,n,t,s,c){i(n);var p=a(e),u=o(p),l=r(p.length),f=c?l-1:0,d=c?-1:1;if(t<2)for(;;){if(f in u){s=u[f],f+=d;break}if(f+=d,c?f<0:l<=f)throw TypeError("Reduce of empty array with no initial value")}for(;c?f>=0:l>f;f+=d)f in u&&(s=n(s,u[f],f,p));return s}},function(e,n,t){"use strict";var i=t(9),a=t(44),o=t(6);e.exports=[].copyWithin||function(e,n){var t=i(this),r=o(t.length),s=a(e,r),c=a(n,r),p=arguments.length>2?arguments[2]:void 0,u=Math.min((void 0===p?r:a(p,r))-c,r-s),l=1;for(c<s&&s<c+u&&(l=-1,c+=u-1,s+=u-1);u-- >0;)c in t?t[s]=t[c]:delete t[s],s+=l,c+=l;return t}},function(e,n){e.exports=function(e,n){return{value:n,done:!!e}}},function(e,n,t){"use strict";var i=t(113);t(0)({target:"RegExp",proto:!0,forced:i!==/./.exec},{exec:i})},function(e,n,t){t(7)&&"g"!=/./g.flags&&t(8).f(RegExp.prototype,"flags",{configurable:!0,get:t(61)})},function(e,n){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,n,t){var i=t(1),a=t(4),o=t(117);e.exports=function(e,n){if(i(e),a(n)&&n.constructor===e)return n;var t=o.f(e);return(0,t.resolve)(n),t.promise}},function(e,n,t){"use strict";var i=t(160),a=t(51);e.exports=t(76)("Map",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{get:function(e){var n=i.getEntry(a(this,"Map"),e);return n&&n.v},set:function(e,n){return i.def(a(this,"Map"),0===e?0:e,n)}},i,!0)},function(e,n,t){"use strict";var i=t(8).f,a=t(45),o=t(50),r=t(24),s=t(48),c=t(49),p=t(102),u=t(154),l=t(47),f=t(7),d=t(39).fastKey,m=t(51),h=f?"_s":"size",v=function(e,n){var t,i=d(n);if("F"!==i)return e._i[i];for(t=e._f;t;t=t.n)if(t.k==n)return t};e.exports={getConstructor:function(e,n,t,p){var u=e((function(e,i){s(e,u,n,"_i"),e._t=n,e._i=a(null),e._f=void 0,e._l=void 0,e[h]=0,null!=i&&c(i,t,e[p],e)}));return o(u.prototype,{clear:function(){for(var e=m(this,n),t=e._i,i=e._f;i;i=i.n)i.r=!0,i.p&&(i.p=i.p.n=void 0),delete t[i.i];e._f=e._l=void 0,e[h]=0},delete:function(e){var t=m(this,n),i=v(t,e);if(i){var a=i.n,o=i.p;delete t._i[i.i],i.r=!0,o&&(o.n=a),a&&(a.p=o),t._f==i&&(t._f=a),t._l==i&&(t._l=o),t[h]--}return!!i},forEach:function(e){m(this,n);for(var t,i=r(e,arguments.length>1?arguments[1]:void 0,3);t=t?t.n:this._f;)for(i(t.v,t.k,this);t&&t.r;)t=t.p},has:function(e){return!!v(m(this,n),e)}}),f&&i(u.prototype,"size",{get:function(){return m(this,n)[h]}}),u},def:function(e,n,t){var i,a,o=v(e,n);return o?o.v=t:(e._l=o={i:a=d(n,!0),k:n,v:t,p:i=e._l,n:void 0,r:!1},e._f||(e._f=o),i&&(i.n=o),e[h]++,"F"!==a&&(e._i[a]=o)),e},getEntry:v,setStrong:function(e,n,t){p(e,n,(function(e,t){this._t=m(e,n),this._k=t,this._l=void 0}),(function(){for(var e=this._k,n=this._l;n&&n.r;)n=n.p;return this._t&&(this._l=n=n?n.n:this._t._f)?u(0,"keys"==e?n.k:"values"==e?n.v:[n.k,n.v]):(this._t=void 0,u(1))}),t?"entries":"values",!t,!0),l(n)}}},function(e,n,t){"use strict";var i=t(160),a=t(51);e.exports=t(76)("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return i.def(a(this,"Set"),e=0===e?0:e,e)}},i)},function(e,n,t){"use strict";var i,a=t(2),o=t(32)(0),r=t(15),s=t(39),c=t(138),p=t(163),u=t(4),l=t(51),f=t(51),d=!a.ActiveXObject&&"ActiveXObject"in a,m=s.getWeak,h=Object.isExtensible,v=p.ufstore,x=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},b={get:function(e){if(u(e)){var n=m(e);return!0===n?v(l(this,"WeakMap")).get(e):n?n[this._i]:void 0}},set:function(e,n){return p.def(l(this,"WeakMap"),e,n)}},g=e.exports=t(76)("WeakMap",x,b,p,!0,!0);f&&d&&(c((i=p.getConstructor(x,"WeakMap")).prototype,b),s.NEED=!0,o(["delete","has","get","set"],(function(e){var n=g.prototype,t=n[e];r(n,e,(function(n,a){if(u(n)&&!h(n)){this._f||(this._f=new i);var o=this._f[e](n,a);return"set"==e?this:o}return t.call(this,n,a)}))})))},function(e,n,t){"use strict";var i=t(50),a=t(39).getWeak,o=t(1),r=t(4),s=t(48),c=t(49),p=t(32),u=t(18),l=t(51),f=p(5),d=p(6),m=0,h=function(e){return e._l||(e._l=new v)},v=function(){this.a=[]},x=function(e,n){return f(e.a,(function(e){return e[0]===n}))};v.prototype={get:function(e){var n=x(this,e);if(n)return n[1]},has:function(e){return!!x(this,e)},set:function(e,n){var t=x(this,e);t?t[1]=n:this.a.push([e,n])},delete:function(e){var n=d(this.a,(function(n){return n[0]===e}));return~n&&this.a.splice(n,1),!!~n}},e.exports={getConstructor:function(e,n,t,o){var p=e((function(e,i){s(e,p,n,"_i"),e._t=n,e._i=m++,e._l=void 0,null!=i&&c(i,t,e[o],e)}));return i(p.prototype,{delete:function(e){if(!r(e))return!1;var t=a(e);return!0===t?h(l(this,n)).delete(e):t&&u(t,this._i)&&delete t[this._i]},has:function(e){if(!r(e))return!1;var t=a(e);return!0===t?h(l(this,n)).has(e):t&&u(t,this._i)}}),p},def:function(e,n,t){var i=a(o(n),!0);return!0===i?h(e).set(n,t):i[e._i]=t,e},ufstore:h}},function(e,n,t){var i=t(26),a=t(6);e.exports=function(e){if(void 0===e)return 0;var n=i(e),t=a(n);if(n!==t)throw RangeError("Wrong length!");return t}},function(e,n,t){var i=t(46),a=t(67),o=t(1),r=t(2).Reflect;e.exports=r&&r.ownKeys||function(e){var n=i.f(o(e)),t=a.f;return t?n.concat(t(e)):n}},function(e,n,t){"use strict";var i=t(68),a=t(4),o=t(6),r=t(24),s=t(5)("isConcatSpreadable");e.exports=function e(n,t,c,p,u,l,f,d){for(var m,h,v=u,x=0,b=!!f&&r(f,d,3);x<p;){if(x in c){if(m=b?b(c[x],x,t):c[x],h=!1,a(m)&&(h=void 0!==(h=m[s])?!!h:i(m)),h&&l>0)v=e(n,t,m,o(m.length),v,l-1)-1;else{if(v>=9007199254740991)throw TypeError();n[v]=m}v++}x++}return v}},function(e,n,t){var i=t(6),a=t(98),o=t(30);e.exports=function(e,n,t,r){var s=String(o(e)),c=s.length,p=void 0===t?" ":String(t),u=i(n);if(u<=c||""==p)return s;var l=u-c,f=a.call(p,Math.ceil(l/p.length));return f.length>l&&(f=f.slice(0,l)),r?f+s:s+f}},function(e,n,t){t(87)("asyncIterator")},function(e,n,t){var i=t(7),a=t(43),o=t(19),r=t(60).f;e.exports=function(e){return function(n){for(var t,s=o(n),c=a(s),p=c.length,u=0,l=[];p>u;)t=c[u++],i&&!r.call(s,t)||l.push(e?[t,s[t]]:s[t]);return l}}},function(e,n,t){var i=t(53),a=t(171);e.exports=function(e){return function(){if(i(this)!=e)throw TypeError(e+"#toJSON isn't generic");return a(this)}}},function(e,n,t){var i=t(49);e.exports=function(e,n){var t=[];return i(e,!1,t.push,t,n),t}},function(e,n){e.exports=Math.scale||function(e,n,t,i,a){return 0===arguments.length||e!=e||n!=n||t!=t||i!=i||a!=a?NaN:e===1/0||e===-1/0?e:(e-n)*(a-i)/(t-n)+i}},function(e,n,t){"use strict";e.exports=function(e,n){return function(){for(var t=new Array(arguments.length),i=0;i<t.length;i++)t[i]=arguments[i];return e.apply(n,t)}}},function(e,n,t){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,n,t){"use strict";var i=t(13),a=t(391),o={"Content-Type":"application/x-www-form-urlencoded"};function r(e,n){!i.isUndefined(e)&&i.isUndefined(e["Content-Type"])&&(e["Content-Type"]=n)}var s,c={adapter:("undefined"!=typeof XMLHttpRequest?s=t(392):"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process)&&(s=t(398)),s),transformRequest:[function(e,n){return a(n,"Accept"),a(n,"Content-Type"),i.isFormData(e)||i.isArrayBuffer(e)||i.isBuffer(e)||i.isStream(e)||i.isFile(e)||i.isBlob(e)?e:i.isArrayBufferView(e)?e.buffer:i.isURLSearchParams(e)?(r(n,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):i.isObject(e)?(r(n,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300}};c.headers={common:{Accept:"application/json, text/plain, */*"}},i.forEach(["delete","get","head"],(function(e){c.headers[e]={}})),i.forEach(["post","put","patch"],(function(e){c.headers[e]=i.merge(o)})),e.exports=c},function(e,n,t){"use strict";var i=t(122);e.exports=function(e,n,t){var a=t.config.validateStatus;t.status&&a&&!a(t.status)?n(i("Request failed with status code "+t.status,t.config,null,t.request,t)):e(t)}},function(e,n,t){"use strict";e.exports=function(e,n,t,i,a){return e.config=n,t&&(e.code=t),e.request=i,e.response=a,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},function(e,n,t){"use strict";var i=t(394),a=t(395);e.exports=function(e,n){return e&&!i(n)?a(e,n):n}},function(e,n,t){var i=t(125),a=i.URL,o=t(123),r=t(124),s=t(81).Writable,c=t(399),p=t(400),u=Object.create(null);["abort","aborted","connect","error","socket","timeout"].forEach((function(e){u[e]=function(n,t,i){this._redirectable.emit(e,n,t,i)}}));var l=w("ERR_FR_REDIRECTION_FAILURE",""),f=w("ERR_FR_TOO_MANY_REDIRECTS","Maximum number of redirects exceeded"),d=w("ERR_FR_MAX_BODY_LENGTH_EXCEEDED","Request body larger than maxBodyLength limit"),m=w("ERR_STREAM_WRITE_AFTER_END","write after end");function h(e,n){s.call(this),this._sanitizeOptions(e),this._options=e,this._ended=!1,this._ending=!1,this._redirectCount=0,this._redirects=[],this._requestBodyLength=0,this._requestBodyBuffers=[],n&&this.on("response",n);var t=this;this._onNativeResponse=function(e){t._processResponse(e)},this._performRequest()}function v(e,n){clearTimeout(e._timeout),e._timeout=setTimeout((function(){e.emit("timeout")}),n)}function x(){clearTimeout(this._timeout)}function b(e){var n={maxRedirects:21,maxBodyLength:10485760},t={};return Object.keys(e).forEach((function(o){var r=o+":",s=t[r]=e[o],u=n[o]=Object.create(s);Object.defineProperties(u,{request:{value:function(e,o,s){if("string"==typeof e){var u=e;try{e=k(new a(u))}catch(n){e=i.parse(u)}}else a&&e instanceof a?e=k(e):(s=o,o=e,e={protocol:r});return"function"==typeof o&&(s=o,o=null),(o=Object.assign({maxRedirects:n.maxRedirects,maxBodyLength:n.maxBodyLength},e,o)).nativeProtocols=t,c.equal(o.protocol,r,"protocol mismatch"),p("options",o),new h(o,s)},configurable:!0,enumerable:!0,writable:!0},get:{value:function(e,n,t){var i=u.request(e,n,t);return i.end(),i},configurable:!0,enumerable:!0,writable:!0}})})),n}function g(){}function k(e){var n={protocol:e.protocol,hostname:e.hostname.startsWith("[")?e.hostname.slice(1,-1):e.hostname,hash:e.hash,search:e.search,pathname:e.pathname,path:e.pathname+e.search,href:e.href};return""!==e.port&&(n.port=Number(e.port)),n}function y(e,n){var t;for(var i in n)e.test(i)&&(t=n[i],delete n[i]);return t}function w(e,n){function t(e){Error.captureStackTrace(this,this.constructor),this.message=e||n}return t.prototype=new Error,t.prototype.constructor=t,t.prototype.name="Error ["+e+"]",t.prototype.code=e,t}h.prototype=Object.create(s.prototype),h.prototype.write=function(e,n,t){if(this._ending)throw new m;if(!("string"==typeof e||"object"==typeof e&&"length"in e))throw new TypeError("data should be a string, Buffer or Uint8Array");"function"==typeof n&&(t=n,n=null),0!==e.length?this._requestBodyLength+e.length<=this._options.maxBodyLength?(this._requestBodyLength+=e.length,this._requestBodyBuffers.push({data:e,encoding:n}),this._currentRequest.write(e,n,t)):(this.emit("error",new d),this.abort()):t&&t()},h.prototype.end=function(e,n,t){if("function"==typeof e?(t=e,e=n=null):"function"==typeof n&&(t=n,n=null),e){var i=this,a=this._currentRequest;this.write(e,n,(function(){i._ended=!0,a.end(null,null,t)})),this._ending=!0}else this._ended=this._ending=!0,this._currentRequest.end(null,null,t)},h.prototype.setHeader=function(e,n){this._options.headers[e]=n,this._currentRequest.setHeader(e,n)},h.prototype.removeHeader=function(e){delete this._options.headers[e],this._currentRequest.removeHeader(e)},h.prototype.setTimeout=function(e,n){if(n&&this.once("timeout",n),this.socket)v(this,e);else{var t=this;this._currentRequest.once("socket",(function(){v(t,e)}))}return this.once("response",x),this.once("error",x),this},["abort","flushHeaders","getHeader","setNoDelay","setSocketKeepAlive"].forEach((function(e){h.prototype[e]=function(n,t){return this._currentRequest[e](n,t)}})),["aborted","connection","socket"].forEach((function(e){Object.defineProperty(h.prototype,e,{get:function(){return this._currentRequest[e]}})})),h.prototype._sanitizeOptions=function(e){if(e.headers||(e.headers={}),e.host&&(e.hostname||(e.hostname=e.host),delete e.host),!e.pathname&&e.path){var n=e.path.indexOf("?");n<0?e.pathname=e.path:(e.pathname=e.path.substring(0,n),e.search=e.path.substring(n))}},h.prototype._performRequest=function(){var e=this._options.protocol,n=this._options.nativeProtocols[e];if(n){if(this._options.agents){var t=e.substr(0,e.length-1);this._options.agent=this._options.agents[t]}var a=this._currentRequest=n.request(this._options,this._onNativeResponse);for(var o in this._currentUrl=i.format(this._options),a._redirectable=this,u)o&&a.on(o,u[o]);if(this._isRedirect){var r=0,s=this,c=this._requestBodyBuffers;!function e(n){if(a===s._currentRequest)if(n)s.emit("error",n);else if(r<c.length){var t=c[r++];a.finished||a.write(t.data,t.encoding,e)}else s._ended&&a.end()}()}}else this.emit("error",new TypeError("Unsupported protocol "+e))},h.prototype._processResponse=function(e){var n=e.statusCode;this._options.trackRedirects&&this._redirects.push({url:this._currentUrl,headers:e.headers,statusCode:n});var t=e.headers.location;if(t&&!1!==this._options.followRedirects&&n>=300&&n<400){if(this._currentRequest.removeAllListeners(),this._currentRequest.on("error",g),this._currentRequest.abort(),e.destroy(),++this._redirectCount>this._options.maxRedirects)return void this.emit("error",new f);((301===n||302===n)&&"POST"===this._options.method||303===n&&!/^(?:GET|HEAD)$/.test(this._options.method))&&(this._options.method="GET",this._requestBodyBuffers=[],y(/^content-/i,this._options.headers));var a=y(/^host$/i,this._options.headers)||i.parse(this._currentUrl).hostname,o=i.resolve(this._currentUrl,t);p("redirecting to",o),this._isRedirect=!0;var r=i.parse(o);if(Object.assign(this._options,r),r.hostname!==a&&y(/^authorization$/i,this._options.headers),"function"==typeof this._options.beforeRedirect){var s={headers:e.headers};try{this._options.beforeRedirect.call(null,this._options,s)}catch(e){return void this.emit("error",e)}this._sanitizeOptions(this._options)}try{this._performRequest()}catch(e){var c=new l("Redirected request failed: "+e.message);c.cause=e,this.emit("error",c)}}else e.responseUrl=this._currentUrl,e.redirects=this._redirects,this.emit("response",e),this._requestBodyBuffers=[]},e.exports=b({http:o,https:r}),e.exports.wrap=b},function(e,n,t){e.exports=function(e){function n(e){let t,a=null;function o(...e){if(!o.enabled)return;const i=o,a=Number(new Date),r=a-(t||a);i.diff=r,i.prev=t,i.curr=a,t=a,e[0]=n.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let s=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,(t,a)=>{if("%%"===t)return"%";s++;const o=n.formatters[a];if("function"==typeof o){const n=e[s];t=o.call(i,n),e.splice(s,1),s--}return t}),n.formatArgs.call(i,e),(i.log||n.log).apply(i,e)}return o.namespace=e,o.useColors=n.useColors(),o.color=n.selectColor(e),o.extend=i,o.destroy=n.destroy,Object.defineProperty(o,"enabled",{enumerable:!0,configurable:!1,get:()=>null===a?n.enabled(e):a,set:e=>{a=e}}),"function"==typeof n.init&&n.init(o),o}function i(e,t){const i=n(this.namespace+(void 0===t?":":t)+e);return i.log=this.log,i}function a(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return n.debug=n,n.default=n,n.coerce=function(e){if(e instanceof Error)return e.stack||e.message;return e},n.disable=function(){const e=[...n.names.map(a),...n.skips.map(a).map(e=>"-"+e)].join(",");return n.enable(""),e},n.enable=function(e){let t;n.save(e),n.names=[],n.skips=[];const i=("string"==typeof e?e:"").split(/[\s,]+/),a=i.length;for(t=0;t<a;t++)i[t]&&("-"===(e=i[t].replace(/\*/g,".*?"))[0]?n.skips.push(new RegExp("^"+e.substr(1)+"$")):n.names.push(new RegExp("^"+e+"$")))},n.enabled=function(e){if("*"===e[e.length-1])return!0;let t,i;for(t=0,i=n.skips.length;t<i;t++)if(n.skips[t].test(e))return!1;for(t=0,i=n.names.length;t<i;t++)if(n.names[t].test(e))return!0;return!1},n.humanize=t(403),n.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach(t=>{n[t]=e[t]}),n.names=[],n.skips=[],n.formatters={},n.selectColor=function(e){let t=0;for(let n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return n.colors[Math.abs(t)%n.colors.length]},n.enable(n.load()),n}},function(e,n){e.exports=require("os")},function(e,n,t){"use strict";var i=t(13);e.exports=function(e,n){n=n||{};var t={},a=["url","method","data"],o=["headers","auth","proxy","params"],r=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],s=["validateStatus"];function c(e,n){return i.isPlainObject(e)&&i.isPlainObject(n)?i.merge(e,n):i.isPlainObject(n)?i.merge({},n):i.isArray(n)?n.slice():n}function p(a){i.isUndefined(n[a])?i.isUndefined(e[a])||(t[a]=c(void 0,e[a])):t[a]=c(e[a],n[a])}i.forEach(a,(function(e){i.isUndefined(n[e])||(t[e]=c(void 0,n[e]))})),i.forEach(o,p),i.forEach(r,(function(a){i.isUndefined(n[a])?i.isUndefined(e[a])||(t[a]=c(void 0,e[a])):t[a]=c(void 0,n[a])})),i.forEach(s,(function(i){i in n?t[i]=c(e[i],n[i]):i in e&&(t[i]=c(void 0,e[i]))}));var u=a.concat(o).concat(r).concat(s),l=Object.keys(e).concat(Object.keys(n)).filter((function(e){return-1===u.indexOf(e)}));return i.forEach(l,p),t}},function(e,n,t){"use strict";function i(e){this.message=e}i.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},i.prototype.__CANCEL__=!0,e.exports=i},function(e,n,t){"use strict";var i=t(413).Buffer;e.exports=function(e){if(e.length>=255)throw new TypeError("Alphabet too long");for(var n=new Uint8Array(256),t=0;t<n.length;t++)n[t]=255;for(var a=0;a<e.length;a++){var o=e.charAt(a),r=o.charCodeAt(0);if(255!==n[r])throw new TypeError(o+" is ambiguous");n[r]=a}var s=e.length,c=e.charAt(0),p=Math.log(s)/Math.log(256),u=Math.log(256)/Math.log(s);function l(e){if("string"!=typeof e)throw new TypeError("Expected String");if(0===e.length)return i.alloc(0);var t=0;if(" "!==e[t]){for(var a=0,o=0;e[t]===c;)a++,t++;for(var r=(e.length-t)*p+1>>>0,u=new Uint8Array(r);e[t];){var l=n[e.charCodeAt(t)];if(255===l)return;for(var f=0,d=r-1;(0!==l||f<o)&&-1!==d;d--,f++)l+=s*u[d]>>>0,u[d]=l%256>>>0,l=l/256>>>0;if(0!==l)throw new Error("Non-zero carry");o=f,t++}if(" "!==e[t]){for(var m=r-o;m!==r&&0===u[m];)m++;var h=i.allocUnsafe(a+(r-m));h.fill(0,0,a);for(var v=a;m!==r;)h[v++]=u[m++];return h}}}return{encode:function(n){if((Array.isArray(n)||n instanceof Uint8Array)&&(n=i.from(n)),!i.isBuffer(n))throw new TypeError("Expected Buffer");if(0===n.length)return"";for(var t=0,a=0,o=0,r=n.length;o!==r&&0===n[o];)o++,t++;for(var p=(r-o)*u+1>>>0,l=new Uint8Array(p);o!==r;){for(var f=n[o],d=0,m=p-1;(0!==f||d<a)&&-1!==m;m--,d++)f+=256*l[m]>>>0,l[m]=f%s>>>0,f=f/s>>>0;if(0!==f)throw new Error("Non-zero carry");a=d,o++}for(var h=p-a;h!==p&&0===l[h];)h++;for(var v=c.repeat(t);h<p;++h)v+=e.charAt(l[h]);return v},decodeUnsafe:l,decode:function(e){var n=l(e);if(n)return n;throw new Error("Non-base"+s+" character")}}}},function(e,n){e.exports=require("buffer")},function(e,n,t){"use strict";const i=t(418);(n=e.exports=o).encode=function(e,n){const t=r(e);return o(t.name,Buffer.from(t.encode(n)))},n.decode=function(e){Buffer.isBuffer(e)&&(e=e.toString());const n=e.substring(0,1);"string"==typeof(e=e.substring(1,e.length))&&(e=Buffer.from(e));const t=r(n);return Buffer.from(t.decode(e.toString()))},n.isEncoded=function(e){Buffer.isBuffer(e)&&(e=e.toString());if("[object String]"!==Object.prototype.toString.call(e))return!1;const n=e.substring(0,1);try{return r(n).name}catch(e){return!1}},n.names=Object.freeze(Object.keys(i.names)),n.codes=Object.freeze(Object.keys(i.codes));const a=new Error("Unsupported encoding");function o(e,n){if(!n)throw new Error("requires an encoded buffer");const t=r(e),i=Buffer.from(t.code);return function(e,n){r(e).decode(n.toString())}(t.name,n),Buffer.concat([i,n])}function r(e){let n;if(i.names[e])n=i.names[e];else{if(!i.codes[e])throw a;n=i.codes[e]}if(!n.isImplemented())throw new Error("Base "+e+" is not implemented yet");return n}},function(e,n,t){"use strict";const i=t(423),a=t(128),o=t(57),r=t(83),s=t(129),c=t(189),p=Symbol.for("nodejs.util.inspect.custom"),u=c.proto((function(e){if(!(this instanceof u))return new u(e);if(null==e&&(e=""),e instanceof Buffer)this.buffer=i.fromBuffer(e);else if("string"==typeof e||e instanceof String){if(e.length>0&&"/"!==e.charAt(0))throw new Error(`multiaddr "${e}" must start with a "/"`);this.buffer=i.fromString(e)}else{if(!(e.buffer&&e.protos&&e.protoCodes))throw new Error("addr must be a string, Buffer, or another Multiaddr");this.buffer=i.fromBuffer(e.buffer)}}),{className:"Multiaddr",symbolName:"@multiformats/js-multiaddr/multiaddr"});u.prototype.toString=function(){return i.bufferToString(this.buffer)},u.prototype.toJSON=u.prototype.toString,u.prototype.toOptions=function(){const e={},n=this.toString().split("/");return e.family="ip4"===n[1]?"ipv4":"ipv6",e.host=n[2],e.transport=n[3],e.port=parseInt(n[4]),e},u.prototype[p]=function(){return"<Multiaddr "+this.buffer.toString("hex")+" - "+i.bufferToString(this.buffer)+">"},u.prototype.inspect=function(){return"<Multiaddr "+this.buffer.toString("hex")+" - "+i.bufferToString(this.buffer)+">"},u.prototype.protos=function(){return this.protoCodes().map(e=>Object.assign({},a(e)))},u.prototype.protoCodes=function(){const e=[],n=this.buffer;let t=0;for(;t<n.length;){const r=o.decode(n,t),s=o.decode.bytes,c=a(r);t+=i.sizeForAddr(c,n.slice(t+s))+s,e.push(r)}return e},u.prototype.protoNames=function(){return this.protos().map(e=>e.name)},u.prototype.tuples=function(){return i.bufferToTuples(this.buffer)},u.prototype.stringTuples=function(){const e=i.bufferToTuples(this.buffer);return i.tuplesToStringTuples(e)},u.prototype.encapsulate=function(e){return e=u(e),u(this.toString()+e.toString())},u.prototype.decapsulate=function(e){e=e.toString();const n=this.toString(),t=n.lastIndexOf(e);if(t<0)throw new Error("Address "+this+" does not contain subaddress: "+e);return u(n.slice(0,t))},u.prototype.decapsulateCode=function(e){const n=this.tuples();for(let t=n.length-1;t>=0;t--)if(n[t][0]===e)return u(i.tuplesToBuffer(n.slice(0,t)));return this},u.prototype.getPeerId=function(){let e=null;try{e=this.stringTuples().filter(e=>{if(e[0]===a.names.ipfs.code)return!0}).pop()[1],e=r.encode(new s(e).multihash)}catch(n){e=null}return e},u.prototype.getPath=function(){let e=null;try{e=this.stringTuples().filter(e=>{if(a(e[0]).path)return!0})[0][1]}catch(n){e=null}return e},u.prototype.equals=function(e){return this.buffer.equals(e.buffer)},u.prototype.nodeAddress=function(){const e=this.protoCodes(),n=this.protoNames(),t=this.toString().split("/").slice(1);if(t.length<4)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6}/{address}/{tcp, udp}/{port}".');if(4!==e[0]&&41!==e[0]&&54!==e[0]&&55!==e[0])throw new Error(`no protocol with name: "'${n[0]}'". Must have a valid family name: "{ip4, ip6, dns4, dns6}".`);if("tcp"!==t[2]&&"udp"!==t[2])throw new Error(`no protocol with name: "'${n[1]}'". Must have a valid transport protocol: "{tcp, udp}".`);return{family:41===e[0]||55===e[0]?6:4,address:t[1],port:parseInt(t[3])}},u.fromNodeAddress=function(e,n){if(!e)throw new Error("requires node address object");if(!n)throw new Error("requires transport protocol");const t="IPv6"===e.family?"ip6":"ip4";return u("/"+[t,e.address,n,e.port].join("/"))},u.prototype.isThinWaistAddress=function(e){const n=(e||this).protos();return 2===n.length&&((4===n[0].code||41===n[0].code)&&(6===n[1].code||273===n[1].code))},u.protocols=a,u.isName=function(e){return!!u.isMultiaddr(e)&&e.protos().some(e=>e.resolvable)},u.resolve=function(e){return u.isMultiaddr(e)&&u.isName(e)?Promise.reject(new Error("not implemented yet")):Promise.reject(Error("not a valid name"))},e.exports=u},function(e,n,t){"use strict";const i=t(57);function a(e){return parseInt(e.toString("hex"),16)}function o(e){let n=e.toString(16);return n.length%2==1&&(n="0"+n),Buffer.from(n,"hex")}e.exports={numberToBuffer:o,bufferToNumber:a,varintBufferEncode:function(e){return Buffer.from(i.encode(a(e)))},varintBufferDecode:function(e){return o(i.decode(e))},varintEncode:function(e){return Buffer.from(i.encode(e))}}},function(e,n,t){"use strict";e.exports=function(e,{className:n,symbolName:t}){const i=Symbol.for(t),a={[n]:class extends e{constructor(...e){super(...e),Object.defineProperty(this,i,{value:!0})}get[Symbol.toStringTag](){return n}}}[n];return a[`is${n}`]=e=>!(!e||!e[i]),a},e.exports.proto=function(e,{className:n,symbolName:t,withoutNew:i}){const a=Symbol.for(t),o={[n]:function(...n){if(i&&!(this instanceof o))return new o(...n);const t=e.call(this,...n)||this;return t&&!t[a]&&Object.defineProperty(t,a,{value:!0}),t}}[n];return o.prototype=Object.create(e.prototype),o.prototype.constructor=o,Object.defineProperty(o.prototype,Symbol.toStringTag,{get:()=>n}),o[`is${n}`]=e=>!(!e||!e[a]),o}},function(e,n,t){var i=t(439),a=t(82),o=t(84),r=t(123),s=t(124),c=t(125).parse,p=t(65),u=t(441),l=t(444),f=t(448);function d(e){if(!(this instanceof d))return new d;for(var n in this._overheadLength=0,this._valueLength=0,this._valuesToMeasure=[],i.call(this),e=e||{})this[n]=e[n]}e.exports=d,a.inherits(d,i),d.LINE_BREAK="\r\n",d.DEFAULT_CONTENT_TYPE="application/octet-stream",d.prototype.append=function(e,n,t){"string"==typeof(t=t||{})&&(t={filename:t});var o=i.prototype.append.bind(this);if("number"==typeof n&&(n=""+n),a.isArray(n))this._error(new Error("Arrays are not supported."));else{var r=this._multiPartHeader(e,n,t),s=this._multiPartFooter();o(r),o(n),o(s),this._trackLength(r,n,t)}},d.prototype._trackLength=function(e,n,t){var i=0;null!=t.knownLength?i+=+t.knownLength:Buffer.isBuffer(n)?i=n.length:"string"==typeof n&&(i=Buffer.byteLength(n)),this._valueLength+=i,this._overheadLength+=Buffer.byteLength(e)+d.LINE_BREAK.length,n&&(n.path||n.readable&&n.hasOwnProperty("httpVersion"))&&(t.knownLength||this._valuesToMeasure.push(n))},d.prototype._lengthRetriever=function(e,n){e.hasOwnProperty("fd")?null!=e.end&&e.end!=1/0&&null!=e.start?n(null,e.end+1-(e.start?e.start:0)):p.stat(e.path,(function(t,i){var a;t?n(t):(a=i.size-(e.start?e.start:0),n(null,a))})):e.hasOwnProperty("httpVersion")?n(null,+e.headers["content-length"]):e.hasOwnProperty("httpModule")?(e.on("response",(function(t){e.pause(),n(null,+t.headers["content-length"])})),e.resume()):n("Unknown stream")},d.prototype._multiPartHeader=function(e,n,t){if("string"==typeof t.header)return t.header;var i,a=this._getContentDisposition(n,t),o=this._getContentType(n,t),r="",s={"Content-Disposition":["form-data",'name="'+e+'"'].concat(a||[]),"Content-Type":[].concat(o||[])};for(var c in"object"==typeof t.header&&f(s,t.header),s)s.hasOwnProperty(c)&&null!=(i=s[c])&&(Array.isArray(i)||(i=[i]),i.length&&(r+=c+": "+i.join("; ")+d.LINE_BREAK));return"--"+this.getBoundary()+d.LINE_BREAK+r+d.LINE_BREAK},d.prototype._getContentDisposition=function(e,n){var t,i;return"string"==typeof n.filepath?t=o.normalize(n.filepath).replace(/\\/g,"/"):n.filename||e.name||e.path?t=o.basename(n.filename||e.name||e.path):e.readable&&e.hasOwnProperty("httpVersion")&&(t=o.basename(e.client._httpMessage.path||"")),t&&(i='filename="'+t+'"'),i},d.prototype._getContentType=function(e,n){var t=n.contentType;return!t&&e.name&&(t=u.lookup(e.name)),!t&&e.path&&(t=u.lookup(e.path)),!t&&e.readable&&e.hasOwnProperty("httpVersion")&&(t=e.headers["content-type"]),t||!n.filepath&&!n.filename||(t=u.lookup(n.filepath||n.filename)),t||"object"!=typeof e||(t=d.DEFAULT_CONTENT_TYPE),t},d.prototype._multiPartFooter=function(){return function(e){var n=d.LINE_BREAK;0===this._streams.length&&(n+=this._lastBoundary()),e(n)}.bind(this)},d.prototype._lastBoundary=function(){return"--"+this.getBoundary()+"--"+d.LINE_BREAK},d.prototype.getHeaders=function(e){var n,t={"content-type":"multipart/form-data; boundary="+this.getBoundary()};for(n in e)e.hasOwnProperty(n)&&(t[n.toLowerCase()]=e[n]);return t},d.prototype.getBoundary=function(){return this._boundary||this._generateBoundary(),this._boundary},d.prototype.getBuffer=function(){for(var e=new Buffer.alloc(0),n=this.getBoundary(),t=0,i=this._streams.length;t<i;t++)"function"!=typeof this._streams[t]&&(e=Buffer.isBuffer(this._streams[t])?Buffer.concat([e,this._streams[t]]):Buffer.concat([e,Buffer.from(this._streams[t])]),"string"==typeof this._streams[t]&&this._streams[t].substring(2,n.length+2)===n||(e=Buffer.concat([e,Buffer.from(d.LINE_BREAK)])));return Buffer.concat([e,Buffer.from(this._lastBoundary())])},d.prototype._generateBoundary=function(){for(var e="--------------------------",n=0;n<24;n++)e+=Math.floor(10*Math.random()).toString(16);this._boundary=e},d.prototype.getLengthSync=function(){var e=this._overheadLength+this._valueLength;return this._streams.length&&(e+=this._lastBoundary().length),this.hasKnownLength()||this._error(new Error("Cannot calculate proper length in synchronous way.")),e},d.prototype.hasKnownLength=function(){var e=!0;return this._valuesToMeasure.length&&(e=!1),e},d.prototype.getLength=function(e){var n=this._overheadLength+this._valueLength;this._streams.length&&(n+=this._lastBoundary().length),this._valuesToMeasure.length?l.parallel(this._valuesToMeasure,this._lengthRetriever,(function(t,i){t?e(t):(i.forEach((function(e){n+=e})),e(null,n))})):process.nextTick(e.bind(this,null,n))},d.prototype.submit=function(e,n){var t,i,a={method:"post"};return"string"==typeof e?(e=c(e),i=f({port:e.port,path:e.pathname,host:e.hostname,protocol:e.protocol},a)):(i=f(e,a)).port||(i.port="https:"==i.protocol?443:80),i.headers=this.getHeaders(e.headers),t="https:"==i.protocol?s.request(i):r.request(i),this.getLength(function(e,i){e?this._error(e):(t.setHeader("Content-Length",i),this.pipe(t),n&&(t.on("error",n),t.on("response",n.bind(this,null))))}.bind(this)),t},d.prototype._error=function(e){this.error||(this.error=e,this.pause(),this.emit("error",e))},d.prototype.toString=function(){return"[object FormData]"}},function(e,n,t){var i=t(192),a=t(193);e.exports=function(e,n,t,o){var r=t.keyedList?t.keyedList[t.index]:t.index;t.jobs[r]=function(e,n,t,a){var o;o=2==e.length?e(t,i(a)):e(t,n,i(a));return o}(n,r,e[r],(function(e,n){r in t.jobs&&(delete t.jobs[r],e?a(t):t.results[r]=n,o(e,t.results))}))}},function(e,n,t){var i=t(446);e.exports=function(e){var n=!1;return i((function(){n=!0})),function(t,a){n?e(t,a):i((function(){e(t,a)}))}}},function(e,n){function t(e){"function"==typeof this.jobs[e]&&this.jobs[e]()}e.exports=function(e){Object.keys(e.jobs).forEach(t.bind(e)),e.jobs={}}},function(e,n){e.exports=function(e,n){var t=!Array.isArray(e),i={index:0,keyedList:t||n?Object.keys(e):null,jobs:{},results:t?{}:[],size:t?Object.keys(e).length:e.length};n&&i.keyedList.sort(t?n:function(t,i){return n(e[t],e[i])});return i}},function(e,n,t){var i=t(193),a=t(192);e.exports=function(e){if(!Object.keys(this.jobs).length)return;this.index=this.size,i(this),a(e)(null,this.results)}},function(e,n,t){var i=t(191),a=t(194),o=t(195);function r(e,n){return e<n?-1:e>n?1:0}e.exports=function(e,n,t,r){var s=a(e,t);return i(e,n,s,(function t(a,o){a?r(a,o):(s.index++,s.index<(s.keyedList||e).length?i(e,n,s,t):r(null,s.results))})),o.bind(s,r)},e.exports.ascending=r,e.exports.descending=function(e,n){return-1*r(e,n)}},function(e,n,t){"use strict";var i=t(12);Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};(0,s.validateApiKeys)(e,n),t=l(l({},t),{includeCount:"false"});var i="".concat(r.baseUrl,"/data/pinList"),a=(0,p.default)(i,t);return new Promise((function(t,i){o.default.get(a,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&i(new Error("unknown server response while attempting to retrieve user pin list: ".concat(e))),t(e.data)})).catch((function(e){var n=(0,c.handleError)(e);i(n)}))}))},t(16),t(22),t(93),t(85),t(110),t(92),t(56),t(119),t(91),t(10);var a=i(t(198)),o=i(t(33)),r=t(34),s=t(28),c=t(35),p=i(t(457));function u(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?u(Object(t),!0).forEach((function(n){(0,a.default)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}e.exports=n.default},function(e,n){e.exports=function(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e},e.exports.__esModule=!0,e.exports.default=e.exports},function(e,n,t){t(200),e.exports=t(384)},function(e,n,t){"use strict";if(t(201),t(380),t(381),global._babelPolyfill)throw new Error("only one instance of babel-polyfill is allowed");global._babelPolyfill=!0;function i(e,n,t){e[n]||Object.defineProperty(e,n,{writable:!0,configurable:!0,value:t})}i(String.prototype,"padLeft","".padStart),i(String.prototype,"padRight","".padEnd),"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach((function(e){[][e]&&i(Array,e,Function.call.bind([][e]))}))},function(e,n,t){t(85),t(204),t(10),t(91),t(92),t(205),t(93),t(206),t(207),t(208),t(209),t(210),t(211),t(212),t(213),t(214),t(215),t(16),t(216),t(69),t(217),t(218),t(219),t(96),t(220),t(221),t(222),t(223),t(99),t(224),t(225),t(226),t(227),t(228),t(229),t(230),t(231),t(232),t(233),t(234),t(235),t(236),t(237),t(238),t(239),t(240),t(241),t(242),t(243),t(244),t(245),t(246),t(247),t(248),t(249),t(250),t(251),t(252),t(253),t(254),t(255),t(256),t(257),t(258),t(259),t(260),t(261),t(262),t(263),t(264),t(265),t(266),t(267),t(268),t(269),t(270),t(148),t(272),t(273),t(149),t(275),t(276),t(277),t(278),t(151),t(56),t(280),t(110),t(281),t(282),t(283),t(284),t(285),t(286),t(287),t(288),t(289),t(290),t(291),t(112),t(292),t(155),t(293),t(156),t(294),t(295),t(296),t(297),t(22),t(159),t(161),t(162),t(298),t(299),t(300),t(301),t(302),t(303),t(304),t(305),t(306),t(307),t(308),t(309),t(310),t(311),t(312),t(313),t(314),t(315),t(316),t(317),t(318),t(319),t(320),t(321),t(322),t(323),t(324),t(325),t(326),t(327),t(328),t(329),t(330),t(331),t(332),t(168),t(333),t(119),t(334),t(120),t(335),t(336),t(337),t(338),t(339),t(340),t(341),t(342),t(343),t(344),t(345),t(346),t(347),t(348),t(349),t(350),t(351),t(352),t(353),t(354),t(355),t(356),t(357),t(358),t(359),t(360),t(361),t(362),t(363),t(364),t(365),t(366),t(367),t(368),t(369),t(370),t(371),t(372),t(373),t(374),t(375),t(376),t(377),t(378),t(379),e.exports=t(23)},function(e,n,t){e.exports=t(58)("native-function-to-string",Function.toString)},function(e,n,t){var i=t(43),a=t(67),o=t(60);e.exports=function(e){var n=i(e),t=a.f;if(t)for(var r,s=t(e),c=o.f,p=0;s.length>p;)c.call(e,r=s[p++])&&n.push(r);return n}},function(e,n,t){var i=t(0);i(i.S,"Object",{create:t(45)})},function(e,n,t){var i=t(9),a=t(21);t(31)("getPrototypeOf",(function(){return function(e){return a(i(e))}}))},function(e,n,t){t(31)("getOwnPropertyNames",(function(){return t(137).f}))},function(e,n,t){var i=t(4),a=t(39).onFreeze;t(31)("freeze",(function(e){return function(n){return e&&i(n)?e(a(n)):n}}))},function(e,n,t){var i=t(4),a=t(39).onFreeze;t(31)("seal",(function(e){return function(n){return e&&i(n)?e(a(n)):n}}))},function(e,n,t){var i=t(4),a=t(39).onFreeze;t(31)("preventExtensions",(function(e){return function(n){return e&&i(n)?e(a(n)):n}}))},function(e,n,t){var i=t(4);t(31)("isFrozen",(function(e){return function(n){return!i(n)||!!e&&e(n)}}))},function(e,n,t){var i=t(4);t(31)("isSealed",(function(e){return function(n){return!i(n)||!!e&&e(n)}}))},function(e,n,t){var i=t(4);t(31)("isExtensible",(function(e){return function(n){return!!i(n)&&(!e||e(n))}}))},function(e,n,t){var i=t(0);i(i.S+i.F,"Object",{assign:t(138)})},function(e,n,t){var i=t(0);i(i.S,"Object",{is:t(139)})},function(e,n,t){var i=t(0);i(i.S,"Object",{setPrototypeOf:t(94).set})},function(e,n,t){var i=t(0);i(i.P,"Function",{bind:t(140)})},function(e,n,t){"use strict";var i=t(4),a=t(21),o=t(5)("hasInstance"),r=Function.prototype;o in r||t(8).f(r,o,{value:function(e){if("function"!=typeof this||!i(e))return!1;if(!i(this.prototype))return e instanceof this;for(;e=a(e);)if(this.prototype===e)return!0;return!1}})},function(e,n,t){var i=t(0),a=t(142);i(i.G+i.F*(parseInt!=a),{parseInt:a})},function(e,n,t){var i=t(0),a=t(143);i(i.G+i.F*(parseFloat!=a),{parseFloat:a})},function(e,n,t){"use strict";var i=t(0),a=t(26),o=t(144),r=t(98),s=1..toFixed,c=Math.floor,p=[0,0,0,0,0,0],u="Number.toFixed: incorrect invocation!",l=function(e,n){for(var t=-1,i=n;++t<6;)i+=e*p[t],p[t]=i%1e7,i=c(i/1e7)},f=function(e){for(var n=6,t=0;--n>=0;)t+=p[n],p[n]=c(t/e),t=t%e*1e7},d=function(){for(var e=6,n="";--e>=0;)if(""!==n||0===e||0!==p[e]){var t=String(p[e]);n=""===n?t:n+r.call("0",7-t.length)+t}return n},m=function(e,n,t){return 0===n?t:n%2==1?m(e,n-1,t*e):m(e*e,n/2,t)};i(i.P+i.F*(!!s&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!t(3)((function(){s.call({})}))),"Number",{toFixed:function(e){var n,t,i,s,c=o(this,u),p=a(e),h="",v="0";if(p<0||p>20)throw RangeError(u);if(c!=c)return"NaN";if(c<=-1e21||c>=1e21)return String(c);if(c<0&&(h="-",c=-c),c>1e-21)if(t=(n=function(e){for(var n=0,t=e;t>=4096;)n+=12,t/=4096;for(;t>=2;)n+=1,t/=2;return n}(c*m(2,69,1))-69)<0?c*m(2,-n,1):c/m(2,n,1),t*=4503599627370496,(n=52-n)>0){for(l(0,t),i=p;i>=7;)l(1e7,0),i-=7;for(l(m(10,i,1),0),i=n-1;i>=23;)f(1<<23),i-=23;f(1<<i),l(1,1),f(2),v=d()}else l(0,t),l(1<<-n,0),v=d()+r.call("0",p);return v=p>0?h+((s=v.length)<=p?"0."+r.call("0",p-s)+v:v.slice(0,s-p)+"."+v.slice(s-p)):h+v}})},function(e,n,t){"use strict";var i=t(0),a=t(3),o=t(144),r=1..toPrecision;i(i.P+i.F*(a((function(){return"1"!==r.call(1,void 0)}))||!a((function(){r.call({})}))),"Number",{toPrecision:function(e){var n=o(this,"Number#toPrecision: incorrect invocation!");return void 0===e?r.call(n):r.call(n,e)}})},function(e,n,t){var i=t(0);i(i.S,"Number",{EPSILON:Math.pow(2,-52)})},function(e,n,t){var i=t(0),a=t(2).isFinite;i(i.S,"Number",{isFinite:function(e){return"number"==typeof e&&a(e)}})},function(e,n,t){var i=t(0);i(i.S,"Number",{isNaN:function(e){return e!=e}})},function(e,n,t){var i=t(0),a=t(145),o=Math.abs;i(i.S,"Number",{isSafeInteger:function(e){return a(e)&&o(e)<=9007199254740991}})},function(e,n,t){var i=t(0);i(i.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},function(e,n,t){var i=t(0);i(i.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},function(e,n,t){var i=t(0),a=t(143);i(i.S+i.F*(Number.parseFloat!=a),"Number",{parseFloat:a})},function(e,n,t){var i=t(0),a=t(142);i(i.S+i.F*(Number.parseInt!=a),"Number",{parseInt:a})},function(e,n,t){var i=t(0),a=t(146),o=Math.sqrt,r=Math.acosh;i(i.S+i.F*!(r&&710==Math.floor(r(Number.MAX_VALUE))&&r(1/0)==1/0),"Math",{acosh:function(e){return(e=+e)<1?NaN:e>94906265.62425156?Math.log(e)+Math.LN2:a(e-1+o(e-1)*o(e+1))}})},function(e,n,t){var i=t(0),a=Math.asinh;i(i.S+i.F*!(a&&1/a(0)>0),"Math",{asinh:function e(n){return isFinite(n=+n)&&0!=n?n<0?-e(-n):Math.log(n+Math.sqrt(n*n+1)):n}})},function(e,n,t){var i=t(0),a=Math.atanh;i(i.S+i.F*!(a&&1/a(-0)<0),"Math",{atanh:function(e){return 0==(e=+e)?e:Math.log((1+e)/(1-e))/2}})},function(e,n,t){var i=t(0),a=t(100);i(i.S,"Math",{cbrt:function(e){return a(e=+e)*Math.pow(Math.abs(e),1/3)}})},function(e,n,t){var i=t(0);i(i.S,"Math",{clz32:function(e){return(e>>>=0)?31-Math.floor(Math.log(e+.5)*Math.LOG2E):32}})},function(e,n,t){var i=t(0),a=Math.exp;i(i.S,"Math",{cosh:function(e){return(a(e=+e)+a(-e))/2}})},function(e,n,t){var i=t(0),a=t(101);i(i.S+i.F*(a!=Math.expm1),"Math",{expm1:a})},function(e,n,t){var i=t(0);i(i.S,"Math",{fround:t(147)})},function(e,n,t){var i=t(0),a=Math.abs;i(i.S,"Math",{hypot:function(e,n){for(var t,i,o=0,r=0,s=arguments.length,c=0;r<s;)c<(t=a(arguments[r++]))?(o=o*(i=c/t)*i+1,c=t):o+=t>0?(i=t/c)*i:t;return c===1/0?1/0:c*Math.sqrt(o)}})},function(e,n,t){var i=t(0),a=Math.imul;i(i.S+i.F*t(3)((function(){return-5!=a(4294967295,5)||2!=a.length})),"Math",{imul:function(e,n){var t=+e,i=+n,a=65535&t,o=65535&i;return 0|a*o+((65535&t>>>16)*o+a*(65535&i>>>16)<<16>>>0)}})},function(e,n,t){var i=t(0);i(i.S,"Math",{log10:function(e){return Math.log(e)*Math.LOG10E}})},function(e,n,t){var i=t(0);i(i.S,"Math",{log1p:t(146)})},function(e,n,t){var i=t(0);i(i.S,"Math",{log2:function(e){return Math.log(e)/Math.LN2}})},function(e,n,t){var i=t(0);i(i.S,"Math",{sign:t(100)})},function(e,n,t){var i=t(0),a=t(101),o=Math.exp;i(i.S+i.F*t(3)((function(){return-2e-17!=!Math.sinh(-2e-17)})),"Math",{sinh:function(e){return Math.abs(e=+e)<1?(a(e)-a(-e))/2:(o(e-1)-o(-e-1))*(Math.E/2)}})},function(e,n,t){var i=t(0),a=t(101),o=Math.exp;i(i.S,"Math",{tanh:function(e){var n=a(e=+e),t=a(-e);return n==1/0?1:t==1/0?-1:(n-t)/(o(e)+o(-e))}})},function(e,n,t){var i=t(0);i(i.S,"Math",{trunc:function(e){return(e>0?Math.floor:Math.ceil)(e)}})},function(e,n,t){var i=t(0),a=t(44),o=String.fromCharCode,r=String.fromCodePoint;i(i.S+i.F*(!!r&&1!=r.length),"String",{fromCodePoint:function(e){for(var n,t=[],i=arguments.length,r=0;i>r;){if(n=+arguments[r++],a(n,1114111)!==n)throw RangeError(n+" is not a valid code point");t.push(n<65536?o(n):o(55296+((n-=65536)>>10),n%1024+56320))}return t.join("")}})},function(e,n,t){var i=t(0),a=t(19),o=t(6);i(i.S,"String",{raw:function(e){for(var n=a(e.raw),t=o(n.length),i=arguments.length,r=[],s=0;t>s;)r.push(String(n[s++])),s<i&&r.push(String(arguments[s]));return r.join("")}})},function(e,n,t){"use strict";t(54)("trim",(function(e){return function(){return e(this,3)}}))},function(e,n,t){"use strict";var i=t(70)(!0);t(102)(String,"String",(function(e){this._t=String(e),this._i=0}),(function(){var e,n=this._t,t=this._i;return t>=n.length?{value:void 0,done:!0}:(e=i(n,t),this._i+=e.length,{value:e,done:!1})}))},function(e,n,t){"use strict";var i=t(0),a=t(70)(!1);i(i.P,"String",{codePointAt:function(e){return a(this,e)}})},function(e,n,t){"use strict";var i=t(0),a=t(6),o=t(104),r="".endsWith;i(i.P+i.F*t(105)("endsWith"),"String",{endsWith:function(e){var n=o(this,e,"endsWith"),t=arguments.length>1?arguments[1]:void 0,i=a(n.length),s=void 0===t?i:Math.min(a(t),i),c=String(e);return r?r.call(n,c,s):n.slice(s-c.length,s)===c}})},function(e,n,t){"use strict";var i=t(0),a=t(104);i(i.P+i.F*t(105)("includes"),"String",{includes:function(e){return!!~a(this,e,"includes").indexOf(e,arguments.length>1?arguments[1]:void 0)}})},function(e,n,t){var i=t(0);i(i.P,"String",{repeat:t(98)})},function(e,n,t){"use strict";var i=t(0),a=t(6),o=t(104),r="".startsWith;i(i.P+i.F*t(105)("startsWith"),"String",{startsWith:function(e){var n=o(this,e,"startsWith"),t=a(Math.min(arguments.length>1?arguments[1]:void 0,n.length)),i=String(e);return r?r.call(n,i,t):n.slice(t,t+i.length)===i}})},function(e,n,t){"use strict";t(17)("anchor",(function(e){return function(n){return e(this,"a","name",n)}}))},function(e,n,t){"use strict";t(17)("big",(function(e){return function(){return e(this,"big","","")}}))},function(e,n,t){"use strict";t(17)("blink",(function(e){return function(){return e(this,"blink","","")}}))},function(e,n,t){"use strict";t(17)("bold",(function(e){return function(){return e(this,"b","","")}}))},function(e,n,t){"use strict";t(17)("fixed",(function(e){return function(){return e(this,"tt","","")}}))},function(e,n,t){"use strict";t(17)("fontcolor",(function(e){return function(n){return e(this,"font","color",n)}}))},function(e,n,t){"use strict";t(17)("fontsize",(function(e){return function(n){return e(this,"font","size",n)}}))},function(e,n,t){"use strict";t(17)("italics",(function(e){return function(){return e(this,"i","","")}}))},function(e,n,t){"use strict";t(17)("link",(function(e){return function(n){return e(this,"a","href",n)}}))},function(e,n,t){"use strict";t(17)("small",(function(e){return function(){return e(this,"small","","")}}))},function(e,n,t){"use strict";t(17)("strike",(function(e){return function(){return e(this,"strike","","")}}))},function(e,n,t){"use strict";t(17)("sub",(function(e){return function(){return e(this,"sub","","")}}))},function(e,n,t){"use strict";t(17)("sup",(function(e){return function(){return e(this,"sup","","")}}))},function(e,n,t){var i=t(0);i(i.S,"Date",{now:function(){return(new Date).getTime()}})},function(e,n,t){"use strict";var i=t(0),a=t(9),o=t(29);i(i.P+i.F*t(3)((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})})),"Date",{toJSON:function(e){var n=a(this),t=o(n);return"number"!=typeof t||isFinite(t)?n.toISOString():null}})},function(e,n,t){"use strict";var i=t(3),a=Date.prototype.getTime,o=Date.prototype.toISOString,r=function(e){return e>9?e:"0"+e};e.exports=i((function(){return"0385-07-25T07:06:39.999Z"!=o.call(new Date(-5e13-1))}))||!i((function(){o.call(new Date(NaN))}))?function(){if(!isFinite(a.call(this)))throw RangeError("Invalid time value");var e=this,n=e.getUTCFullYear(),t=e.getUTCMilliseconds(),i=n<0?"-":n>9999?"+":"";return i+("00000"+Math.abs(n)).slice(i?-6:-4)+"-"+r(e.getUTCMonth()+1)+"-"+r(e.getUTCDate())+"T"+r(e.getUTCHours())+":"+r(e.getUTCMinutes())+":"+r(e.getUTCSeconds())+"."+(t>99?t:"0"+r(t))+"Z"}:o},function(e,n,t){var i=Date.prototype,a=i.toString,o=i.getTime;new Date(NaN)+""!="Invalid Date"&&t(15)(i,"toString",(function(){var e=o.call(this);return e==e?a.call(this):"Invalid Date"}))},function(e,n,t){var i=t(5)("toPrimitive"),a=Date.prototype;i in a||t(14)(a,i,t(274))},function(e,n,t){"use strict";var i=t(1),a=t(29);e.exports=function(e){if("string"!==e&&"number"!==e&&"default"!==e)throw TypeError("Incorrect hint");return a(i(this),"number"!=e)}},function(e,n,t){"use strict";var i=t(24),a=t(0),o=t(9),r=t(150),s=t(106),c=t(6),p=t(107),u=t(108);a(a.S+a.F*!t(72)((function(e){Array.from(e)})),"Array",{from:function(e){var n,t,a,l,f=o(e),d="function"==typeof this?this:Array,m=arguments.length,h=m>1?arguments[1]:void 0,v=void 0!==h,x=0,b=u(f);if(v&&(h=i(h,m>2?arguments[2]:void 0,2)),null==b||d==Array&&s(b))for(t=new d(n=c(f.length));n>x;x++)p(t,x,v?h(f[x],x):f[x]);else for(l=b.call(f),t=new d;!(a=l.next()).done;x++)p(t,x,v?r(l,h,[a.value,x],!0):a.value);return t.length=x,t}})},function(e,n,t){"use strict";var i=t(0),a=t(107);i(i.S+i.F*t(3)((function(){function e(){}return!(Array.of.call(e)instanceof e)})),"Array",{of:function(){for(var e=0,n=arguments.length,t=new("function"==typeof this?this:Array)(n);n>e;)a(t,e,arguments[e++]);return t.length=n,t}})},function(e,n,t){"use strict";var i=t(0),a=t(19),o=[].join;i(i.P+i.F*(t(59)!=Object||!t(27)(o)),"Array",{join:function(e){return o.call(a(this),void 0===e?",":e)}})},function(e,n,t){"use strict";var i=t(0),a=t(90),o=t(25),r=t(44),s=t(6),c=[].slice;i(i.P+i.F*t(3)((function(){a&&c.call(a)})),"Array",{slice:function(e,n){var t=s(this.length),i=o(this);if(n=void 0===n?t:n,"Array"==i)return c.call(this,e,n);for(var a=r(e,t),p=r(n,t),u=s(p-a),l=new Array(u),f=0;f<u;f++)l[f]="String"==i?this.charAt(a+f):this[a+f];return l}})},function(e,n,t){var i=t(4),a=t(68),o=t(5)("species");e.exports=function(e){var n;return a(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!a(n.prototype)||(n=void 0),i(n)&&null===(n=n[o])&&(n=void 0)),void 0===n?Array:n}},function(e,n,t){"use strict";var i=t(0),a=t(32)(1);i(i.P+i.F*!t(27)([].map,!0),"Array",{map:function(e){return a(this,e,arguments[1])}})},function(e,n,t){"use strict";var i=t(0),a=t(32)(3);i(i.P+i.F*!t(27)([].some,!0),"Array",{some:function(e){return a(this,e,arguments[1])}})},function(e,n,t){"use strict";var i=t(0),a=t(32)(4);i(i.P+i.F*!t(27)([].every,!0),"Array",{every:function(e){return a(this,e,arguments[1])}})},function(e,n,t){"use strict";var i=t(0),a=t(152);i(i.P+i.F*!t(27)([].reduce,!0),"Array",{reduce:function(e){return a(this,e,arguments.length,arguments[1],!1)}})},function(e,n,t){"use strict";var i=t(0),a=t(152);i(i.P+i.F*!t(27)([].reduceRight,!0),"Array",{reduceRight:function(e){return a(this,e,arguments.length,arguments[1],!0)}})},function(e,n,t){"use strict";var i=t(0),a=t(66)(!1),o=[].indexOf,r=!!o&&1/[1].indexOf(1,-0)<0;i(i.P+i.F*(r||!t(27)(o)),"Array",{indexOf:function(e){return r?o.apply(this,arguments)||0:a(this,e,arguments[1])}})},function(e,n,t){"use strict";var i=t(0),a=t(19),o=t(26),r=t(6),s=[].lastIndexOf,c=!!s&&1/[1].lastIndexOf(1,-0)<0;i(i.P+i.F*(c||!t(27)(s)),"Array",{lastIndexOf:function(e){if(c)return s.apply(this,arguments)||0;var n=a(this),t=r(n.length),i=t-1;for(arguments.length>1&&(i=Math.min(i,o(arguments[1]))),i<0&&(i=t+i);i>=0;i--)if(i in n&&n[i]===e)return i||0;return-1}})},function(e,n,t){var i=t(0);i(i.P,"Array",{copyWithin:t(153)}),t(40)("copyWithin")},function(e,n,t){var i=t(0);i(i.P,"Array",{fill:t(111)}),t(40)("fill")},function(e,n,t){"use strict";var i=t(0),a=t(32)(5),o=!0;"find"in[]&&Array(1).find((function(){o=!1})),i(i.P+i.F*o,"Array",{find:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}}),t(40)("find")},function(e,n,t){"use strict";var i=t(0),a=t(32)(6),o="findIndex",r=!0;o in[]&&Array(1)[o]((function(){r=!1})),i(i.P+i.F*r,"Array",{findIndex:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}}),t(40)(o)},function(e,n,t){t(47)("Array")},function(e,n,t){var i=t(2),a=t(97),o=t(8).f,r=t(46).f,s=t(71),c=t(61),p=i.RegExp,u=p,l=p.prototype,f=/a/g,d=/a/g,m=new p(f)!==f;if(t(7)&&(!m||t(3)((function(){return d[t(5)("match")]=!1,p(f)!=f||p(d)==d||"/a/i"!=p(f,"i")})))){p=function(e,n){var t=this instanceof p,i=s(e),o=void 0===n;return!t&&i&&e.constructor===p&&o?e:a(m?new u(i&&!o?e.source:e,n):u((i=e instanceof p)?e.source:e,i&&o?c.call(e):n),t?this:l,p)};for(var h=function(e){e in p||o(p,e,{configurable:!0,get:function(){return u[e]},set:function(n){u[e]=n}})},v=r(u),x=0;v.length>x;)h(v[x++]);l.constructor=p,p.prototype=l,t(15)(i,"RegExp",p)}t(47)("RegExp")},function(e,n,t){"use strict";t(156);var i=t(1),a=t(61),o=t(7),r=/./.toString,s=function(e){t(15)(RegExp.prototype,"toString",e,!0)};t(3)((function(){return"/a/b"!=r.call({source:"a",flags:"b"})}))?s((function(){var e=i(this);return"/".concat(e.source,"/","flags"in e?e.flags:!o&&e instanceof RegExp?a.call(e):void 0)})):"toString"!=r.name&&s((function(){return r.call(this)}))},function(e,n,t){"use strict";var i=t(1),a=t(6),o=t(114),r=t(73);t(74)("match",1,(function(e,n,t,s){return[function(t){var i=e(this),a=null==t?void 0:t[n];return void 0!==a?a.call(t,i):new RegExp(t)[n](String(i))},function(e){var n=s(t,e,this);if(n.done)return n.value;var c=i(e),p=String(this);if(!c.global)return r(c,p);var u=c.unicode;c.lastIndex=0;for(var l,f=[],d=0;null!==(l=r(c,p));){var m=String(l[0]);f[d]=m,""===m&&(c.lastIndex=o(p,a(c.lastIndex),u)),d++}return 0===d?null:f}]}))},function(e,n,t){"use strict";var i=t(1),a=t(9),o=t(6),r=t(26),s=t(114),c=t(73),p=Math.max,u=Math.min,l=Math.floor,f=/\$([$&`']|\d\d?|<[^>]*>)/g,d=/\$([$&`']|\d\d?)/g;t(74)("replace",2,(function(e,n,t,m){return[function(i,a){var o=e(this),r=null==i?void 0:i[n];return void 0!==r?r.call(i,o,a):t.call(String(o),i,a)},function(e,n){var a=m(t,e,this,n);if(a.done)return a.value;var l=i(e),f=String(this),d="function"==typeof n;d||(n=String(n));var v=l.global;if(v){var x=l.unicode;l.lastIndex=0}for(var b=[];;){var g=c(l,f);if(null===g)break;if(b.push(g),!v)break;""===String(g[0])&&(l.lastIndex=s(f,o(l.lastIndex),x))}for(var k,y="",w=0,S=0;S<b.length;S++){g=b[S];for(var _=String(g[0]),j=p(u(r(g.index),f.length),0),E=[],O=1;O<g.length;O++)E.push(void 0===(k=g[O])?k:String(k));var C=g.groups;if(d){var A=[_].concat(E,j,f);void 0!==C&&A.push(C);var P=String(n.apply(void 0,A))}else P=h(_,f,j,E,C,n);j>=w&&(y+=f.slice(w,j)+P,w=j+_.length)}return y+f.slice(w)}];function h(e,n,i,o,r,s){var c=i+e.length,p=o.length,u=d;return void 0!==r&&(r=a(r),u=f),t.call(s,u,(function(t,a){var s;switch(a.charAt(0)){case"$":return"$";case"&":return e;case"`":return n.slice(0,i);case"'":return n.slice(c);case"<":s=r[a.slice(1,-1)];break;default:var u=+a;if(0===u)return t;if(u>p){var f=l(u/10);return 0===f?t:f<=p?void 0===o[f-1]?a.charAt(1):o[f-1]+a.charAt(1):t}s=o[u-1]}return void 0===s?"":s}))}}))},function(e,n,t){"use strict";var i=t(1),a=t(139),o=t(73);t(74)("search",1,(function(e,n,t,r){return[function(t){var i=e(this),a=null==t?void 0:t[n];return void 0!==a?a.call(t,i):new RegExp(t)[n](String(i))},function(e){var n=r(t,e,this);if(n.done)return n.value;var s=i(e),c=String(this),p=s.lastIndex;a(p,0)||(s.lastIndex=0);var u=o(s,c);return a(s.lastIndex,p)||(s.lastIndex=p),null===u?-1:u.index}]}))},function(e,n,t){"use strict";var i=t(71),a=t(1),o=t(62),r=t(114),s=t(6),c=t(73),p=t(113),u=t(3),l=Math.min,f=[].push,d=!u((function(){RegExp(4294967295,"y")}));t(74)("split",2,(function(e,n,t,u){var m;return m="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,n){var a=String(this);if(void 0===e&&0===n)return[];if(!i(e))return t.call(a,e,n);for(var o,r,s,c=[],u=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),l=0,d=void 0===n?4294967295:n>>>0,m=new RegExp(e.source,u+"g");(o=p.call(m,a))&&!((r=m.lastIndex)>l&&(c.push(a.slice(l,o.index)),o.length>1&&o.index<a.length&&f.apply(c,o.slice(1)),s=o[0].length,l=r,c.length>=d));)m.lastIndex===o.index&&m.lastIndex++;return l===a.length?!s&&m.test("")||c.push(""):c.push(a.slice(l)),c.length>d?c.slice(0,d):c}:"0".split(void 0,0).length?function(e,n){return void 0===e&&0===n?[]:t.call(this,e,n)}:t,[function(t,i){var a=e(this),o=null==t?void 0:t[n];return void 0!==o?o.call(t,a,i):m.call(String(a),t,i)},function(e,n){var i=u(m,e,this,n,m!==t);if(i.done)return i.value;var p=a(e),f=String(this),h=o(p,RegExp),v=p.unicode,x=(p.ignoreCase?"i":"")+(p.multiline?"m":"")+(p.unicode?"u":"")+(d?"y":"g"),b=new h(d?p:"^(?:"+p.source+")",x),g=void 0===n?4294967295:n>>>0;if(0===g)return[];if(0===f.length)return null===c(b,f)?[f]:[];for(var k=0,y=0,w=[];y<f.length;){b.lastIndex=d?y:0;var S,_=c(b,d?f:f.slice(y));if(null===_||(S=l(s(b.lastIndex+(d?0:y)),f.length))===k)y=r(f,y,v);else{if(w.push(f.slice(k,y)),w.length===g)return w;for(var j=1;j<=_.length-1;j++)if(w.push(_[j]),w.length===g)return w;y=k=S}}return w.push(f.slice(k)),w}]}))},function(e,n,t){"use strict";var i=t(163),a=t(51);t(76)("WeakSet",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return i.def(a(this,"WeakSet"),e,!0)}},i,!1,!0)},function(e,n,t){"use strict";var i=t(0),a=t(77),o=t(118),r=t(1),s=t(44),c=t(6),p=t(4),u=t(2).ArrayBuffer,l=t(62),f=o.ArrayBuffer,d=o.DataView,m=a.ABV&&u.isView,h=f.prototype.slice,v=a.VIEW;i(i.G+i.W+i.F*(u!==f),{ArrayBuffer:f}),i(i.S+i.F*!a.CONSTR,"ArrayBuffer",{isView:function(e){return m&&m(e)||p(e)&&v in e}}),i(i.P+i.U+i.F*t(3)((function(){return!new f(2).slice(1,void 0).byteLength})),"ArrayBuffer",{slice:function(e,n){if(void 0!==h&&void 0===n)return h.call(r(this),e);for(var t=r(this).byteLength,i=s(e,t),a=s(void 0===n?t:n,t),o=new(l(this,f))(c(a-i)),p=new d(this),u=new d(o),m=0;i<a;)u.setUint8(m++,p.getUint8(i++));return o}}),t(47)("ArrayBuffer")},function(e,n,t){var i=t(0);i(i.G+i.W+i.F*!t(77).ABV,{DataView:t(118).DataView})},function(e,n,t){t(36)("Int8",1,(function(e){return function(n,t,i){return e(this,n,t,i)}}))},function(e,n,t){t(36)("Uint8",1,(function(e){return function(n,t,i){return e(this,n,t,i)}}))},function(e,n,t){t(36)("Uint8",1,(function(e){return function(n,t,i){return e(this,n,t,i)}}),!0)},function(e,n,t){t(36)("Int16",2,(function(e){return function(n,t,i){return e(this,n,t,i)}}))},function(e,n,t){t(36)("Uint16",2,(function(e){return function(n,t,i){return e(this,n,t,i)}}))},function(e,n,t){t(36)("Int32",4,(function(e){return function(n,t,i){return e(this,n,t,i)}}))},function(e,n,t){t(36)("Uint32",4,(function(e){return function(n,t,i){return e(this,n,t,i)}}))},function(e,n,t){t(36)("Float32",4,(function(e){return function(n,t,i){return e(this,n,t,i)}}))},function(e,n,t){t(36)("Float64",8,(function(e){return function(n,t,i){return e(this,n,t,i)}}))},function(e,n,t){var i=t(0),a=t(11),o=t(1),r=(t(2).Reflect||{}).apply,s=Function.apply;i(i.S+i.F*!t(3)((function(){r((function(){}))})),"Reflect",{apply:function(e,n,t){var i=a(e),c=o(t);return r?r(i,n,c):s.call(i,n,c)}})},function(e,n,t){var i=t(0),a=t(45),o=t(11),r=t(1),s=t(4),c=t(3),p=t(140),u=(t(2).Reflect||{}).construct,l=c((function(){function e(){}return!(u((function(){}),[],e)instanceof e)})),f=!c((function(){u((function(){}))}));i(i.S+i.F*(l||f),"Reflect",{construct:function(e,n){o(e),r(n);var t=arguments.length<3?e:o(arguments[2]);if(f&&!l)return u(e,n,t);if(e==t){switch(n.length){case 0:return new e;case 1:return new e(n[0]);case 2:return new e(n[0],n[1]);case 3:return new e(n[0],n[1],n[2]);case 4:return new e(n[0],n[1],n[2],n[3])}var i=[null];return i.push.apply(i,n),new(p.apply(e,i))}var c=t.prototype,d=a(s(c)?c:Object.prototype),m=Function.apply.call(e,d,n);return s(m)?m:d}})},function(e,n,t){var i=t(8),a=t(0),o=t(1),r=t(29);a(a.S+a.F*t(3)((function(){Reflect.defineProperty(i.f({},1,{value:1}),1,{value:2})})),"Reflect",{defineProperty:function(e,n,t){o(e),n=r(n,!0),o(t);try{return i.f(e,n,t),!0}catch(e){return!1}}})},function(e,n,t){var i=t(0),a=t(20).f,o=t(1);i(i.S,"Reflect",{deleteProperty:function(e,n){var t=a(o(e),n);return!(t&&!t.configurable)&&delete e[n]}})},function(e,n,t){"use strict";var i=t(0),a=t(1),o=function(e){this._t=a(e),this._i=0;var n,t=this._k=[];for(n in e)t.push(n)};t(103)(o,"Object",(function(){var e,n=this._k;do{if(this._i>=n.length)return{value:void 0,done:!0}}while(!((e=n[this._i++])in this._t));return{value:e,done:!1}})),i(i.S,"Reflect",{enumerate:function(e){return new o(e)}})},function(e,n,t){var i=t(20),a=t(21),o=t(18),r=t(0),s=t(4),c=t(1);r(r.S,"Reflect",{get:function e(n,t){var r,p,u=arguments.length<3?n:arguments[2];return c(n)===u?n[t]:(r=i.f(n,t))?o(r,"value")?r.value:void 0!==r.get?r.get.call(u):void 0:s(p=a(n))?e(p,t,u):void 0}})},function(e,n,t){var i=t(20),a=t(0),o=t(1);a(a.S,"Reflect",{getOwnPropertyDescriptor:function(e,n){return i.f(o(e),n)}})},function(e,n,t){var i=t(0),a=t(21),o=t(1);i(i.S,"Reflect",{getPrototypeOf:function(e){return a(o(e))}})},function(e,n,t){var i=t(0);i(i.S,"Reflect",{has:function(e,n){return n in e}})},function(e,n,t){var i=t(0),a=t(1),o=Object.isExtensible;i(i.S,"Reflect",{isExtensible:function(e){return a(e),!o||o(e)}})},function(e,n,t){var i=t(0);i(i.S,"Reflect",{ownKeys:t(165)})},function(e,n,t){var i=t(0),a=t(1),o=Object.preventExtensions;i(i.S,"Reflect",{preventExtensions:function(e){a(e);try{return o&&o(e),!0}catch(e){return!1}}})},function(e,n,t){var i=t(8),a=t(20),o=t(21),r=t(18),s=t(0),c=t(41),p=t(1),u=t(4);s(s.S,"Reflect",{set:function e(n,t,s){var l,f,d=arguments.length<4?n:arguments[3],m=a.f(p(n),t);if(!m){if(u(f=o(n)))return e(f,t,s,d);m=c(0)}if(r(m,"value")){if(!1===m.writable||!u(d))return!1;if(l=a.f(d,t)){if(l.get||l.set||!1===l.writable)return!1;l.value=s,i.f(d,t,l)}else i.f(d,t,c(0,s));return!0}return void 0!==m.set&&(m.set.call(d,s),!0)}})},function(e,n,t){var i=t(0),a=t(94);a&&i(i.S,"Reflect",{setPrototypeOf:function(e,n){a.check(e,n);try{return a.set(e,n),!0}catch(e){return!1}}})},function(e,n,t){"use strict";var i=t(0),a=t(66)(!0);i(i.P,"Array",{includes:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}}),t(40)("includes")},function(e,n,t){"use strict";var i=t(0),a=t(166),o=t(9),r=t(6),s=t(11),c=t(109);i(i.P,"Array",{flatMap:function(e){var n,t,i=o(this);return s(e),n=r(i.length),t=c(i,0),a(t,i,i,n,0,1,e,arguments[1]),t}}),t(40)("flatMap")},function(e,n,t){"use strict";var i=t(0),a=t(166),o=t(9),r=t(6),s=t(26),c=t(109);i(i.P,"Array",{flatten:function(){var e=arguments[0],n=o(this),t=r(n.length),i=c(n,0);return a(i,n,n,t,0,void 0===e?1:s(e)),i}}),t(40)("flatten")},function(e,n,t){"use strict";var i=t(0),a=t(70)(!0);i(i.P,"String",{at:function(e){return a(this,e)}})},function(e,n,t){"use strict";var i=t(0),a=t(167),o=t(75),r=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o);i(i.P+i.F*r,"String",{padStart:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0,!0)}})},function(e,n,t){"use strict";var i=t(0),a=t(167),o=t(75),r=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o);i(i.P+i.F*r,"String",{padEnd:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0,!1)}})},function(e,n,t){"use strict";t(54)("trimLeft",(function(e){return function(){return e(this,1)}}),"trimStart")},function(e,n,t){"use strict";t(54)("trimRight",(function(e){return function(){return e(this,2)}}),"trimEnd")},function(e,n,t){"use strict";var i=t(0),a=t(30),o=t(6),r=t(71),s=t(61),c=RegExp.prototype,p=function(e,n){this._r=e,this._s=n};t(103)(p,"RegExp String",(function(){var e=this._r.exec(this._s);return{value:e,done:null===e}})),i(i.P,"String",{matchAll:function(e){if(a(this),!r(e))throw TypeError(e+" is not a regexp!");var n=String(this),t="flags"in c?String(e.flags):s.call(e),i=new RegExp(e.source,~t.indexOf("g")?t:"g"+t);return i.lastIndex=o(e.lastIndex),new p(i,n)}})},function(e,n,t){t(87)("observable")},function(e,n,t){var i=t(0),a=t(169)(!1);i(i.S,"Object",{values:function(e){return a(e)}})},function(e,n,t){"use strict";var i=t(0),a=t(9),o=t(11),r=t(8);t(7)&&i(i.P+t(78),"Object",{__defineGetter__:function(e,n){r.f(a(this),e,{get:o(n),enumerable:!0,configurable:!0})}})},function(e,n,t){"use strict";var i=t(0),a=t(9),o=t(11),r=t(8);t(7)&&i(i.P+t(78),"Object",{__defineSetter__:function(e,n){r.f(a(this),e,{set:o(n),enumerable:!0,configurable:!0})}})},function(e,n,t){"use strict";var i=t(0),a=t(9),o=t(29),r=t(21),s=t(20).f;t(7)&&i(i.P+t(78),"Object",{__lookupGetter__:function(e){var n,t=a(this),i=o(e,!0);do{if(n=s(t,i))return n.get}while(t=r(t))}})},function(e,n,t){"use strict";var i=t(0),a=t(9),o=t(29),r=t(21),s=t(20).f;t(7)&&i(i.P+t(78),"Object",{__lookupSetter__:function(e){var n,t=a(this),i=o(e,!0);do{if(n=s(t,i))return n.set}while(t=r(t))}})},function(e,n,t){var i=t(0);i(i.P+i.R,"Map",{toJSON:t(170)("Map")})},function(e,n,t){var i=t(0);i(i.P+i.R,"Set",{toJSON:t(170)("Set")})},function(e,n,t){t(79)("Map")},function(e,n,t){t(79)("Set")},function(e,n,t){t(79)("WeakMap")},function(e,n,t){t(79)("WeakSet")},function(e,n,t){t(80)("Map")},function(e,n,t){t(80)("Set")},function(e,n,t){t(80)("WeakMap")},function(e,n,t){t(80)("WeakSet")},function(e,n,t){var i=t(0);i(i.G,{global:t(2)})},function(e,n,t){var i=t(0);i(i.S,"System",{global:t(2)})},function(e,n,t){var i=t(0),a=t(25);i(i.S,"Error",{isError:function(e){return"Error"===a(e)}})},function(e,n,t){var i=t(0);i(i.S,"Math",{clamp:function(e,n,t){return Math.min(t,Math.max(n,e))}})},function(e,n,t){var i=t(0);i(i.S,"Math",{DEG_PER_RAD:Math.PI/180})},function(e,n,t){var i=t(0),a=180/Math.PI;i(i.S,"Math",{degrees:function(e){return e*a}})},function(e,n,t){var i=t(0),a=t(172),o=t(147);i(i.S,"Math",{fscale:function(e,n,t,i,r){return o(a(e,n,t,i,r))}})},function(e,n,t){var i=t(0);i(i.S,"Math",{iaddh:function(e,n,t,i){var a=e>>>0,o=t>>>0;return(n>>>0)+(i>>>0)+((a&o|(a|o)&~(a+o>>>0))>>>31)|0}})},function(e,n,t){var i=t(0);i(i.S,"Math",{isubh:function(e,n,t,i){var a=e>>>0,o=t>>>0;return(n>>>0)-(i>>>0)-((~a&o|~(a^o)&a-o>>>0)>>>31)|0}})},function(e,n,t){var i=t(0);i(i.S,"Math",{imulh:function(e,n){var t=+e,i=+n,a=65535&t,o=65535&i,r=t>>16,s=i>>16,c=(r*o>>>0)+(a*o>>>16);return r*s+(c>>16)+((a*s>>>0)+(65535&c)>>16)}})},function(e,n,t){var i=t(0);i(i.S,"Math",{RAD_PER_DEG:180/Math.PI})},function(e,n,t){var i=t(0),a=Math.PI/180;i(i.S,"Math",{radians:function(e){return e*a}})},function(e,n,t){var i=t(0);i(i.S,"Math",{scale:t(172)})},function(e,n,t){var i=t(0);i(i.S,"Math",{umulh:function(e,n){var t=+e,i=+n,a=65535&t,o=65535&i,r=t>>>16,s=i>>>16,c=(r*o>>>0)+(a*o>>>16);return r*s+(c>>>16)+((a*s>>>0)+(65535&c)>>>16)}})},function(e,n,t){var i=t(0);i(i.S,"Math",{signbit:function(e){return(e=+e)!=e?e:0==e?1/e==1/0:e>0}})},function(e,n,t){"use strict";var i=t(0),a=t(23),o=t(2),r=t(62),s=t(158);i(i.P+i.R,"Promise",{finally:function(e){var n=r(this,a.Promise||o.Promise),t="function"==typeof e;return this.then(t?function(t){return s(n,e()).then((function(){return t}))}:e,t?function(t){return s(n,e()).then((function(){throw t}))}:e)}})},function(e,n,t){"use strict";var i=t(0),a=t(117),o=t(157);i(i.S,"Promise",{try:function(e){var n=a.f(this),t=o(e);return(t.e?n.reject:n.resolve)(t.v),n.promise}})},function(e,n,t){var i=t(37),a=t(1),o=i.key,r=i.set;i.exp({defineMetadata:function(e,n,t,i){r(e,n,a(t),o(i))}})},function(e,n,t){var i=t(37),a=t(1),o=i.key,r=i.map,s=i.store;i.exp({deleteMetadata:function(e,n){var t=arguments.length<3?void 0:o(arguments[2]),i=r(a(n),t,!1);if(void 0===i||!i.delete(e))return!1;if(i.size)return!0;var c=s.get(n);return c.delete(t),!!c.size||s.delete(n)}})},function(e,n,t){var i=t(37),a=t(1),o=t(21),r=i.has,s=i.get,c=i.key,p=function(e,n,t){if(r(e,n,t))return s(e,n,t);var i=o(n);return null!==i?p(e,i,t):void 0};i.exp({getMetadata:function(e,n){return p(e,a(n),arguments.length<3?void 0:c(arguments[2]))}})},function(e,n,t){var i=t(161),a=t(171),o=t(37),r=t(1),s=t(21),c=o.keys,p=o.key,u=function(e,n){var t=c(e,n),o=s(e);if(null===o)return t;var r=u(o,n);return r.length?t.length?a(new i(t.concat(r))):r:t};o.exp({getMetadataKeys:function(e){return u(r(e),arguments.length<2?void 0:p(arguments[1]))}})},function(e,n,t){var i=t(37),a=t(1),o=i.get,r=i.key;i.exp({getOwnMetadata:function(e,n){return o(e,a(n),arguments.length<3?void 0:r(arguments[2]))}})},function(e,n,t){var i=t(37),a=t(1),o=i.keys,r=i.key;i.exp({getOwnMetadataKeys:function(e){return o(a(e),arguments.length<2?void 0:r(arguments[1]))}})},function(e,n,t){var i=t(37),a=t(1),o=t(21),r=i.has,s=i.key,c=function(e,n,t){if(r(e,n,t))return!0;var i=o(n);return null!==i&&c(e,i,t)};i.exp({hasMetadata:function(e,n){return c(e,a(n),arguments.length<3?void 0:s(arguments[2]))}})},function(e,n,t){var i=t(37),a=t(1),o=i.has,r=i.key;i.exp({hasOwnMetadata:function(e,n){return o(e,a(n),arguments.length<3?void 0:r(arguments[2]))}})},function(e,n,t){var i=t(37),a=t(1),o=t(11),r=i.key,s=i.set;i.exp({metadata:function(e,n){return function(t,i){s(e,n,(void 0!==i?a:o)(t),r(i))}}})},function(e,n,t){var i=t(0),a=t(116)(),o=t(2).process,r="process"==t(25)(o);i(i.G,{asap:function(e){var n=r&&o.domain;a(n?n.bind(e):e)}})},function(e,n,t){"use strict";var i=t(0),a=t(2),o=t(23),r=t(116)(),s=t(5)("observable"),c=t(11),p=t(1),u=t(48),l=t(50),f=t(14),d=t(49),m=d.RETURN,h=function(e){return null==e?void 0:c(e)},v=function(e){var n=e._c;n&&(e._c=void 0,n())},x=function(e){return void 0===e._o},b=function(e){x(e)||(e._o=void 0,v(e))},g=function(e,n){p(e),this._c=void 0,this._o=e,e=new k(this);try{var t=n(e),i=t;null!=t&&("function"==typeof t.unsubscribe?t=function(){i.unsubscribe()}:c(t),this._c=t)}catch(n){return void e.error(n)}x(this)&&v(this)};g.prototype=l({},{unsubscribe:function(){b(this)}});var k=function(e){this._s=e};k.prototype=l({},{next:function(e){var n=this._s;if(!x(n)){var t=n._o;try{var i=h(t.next);if(i)return i.call(t,e)}catch(e){try{b(n)}finally{throw e}}}},error:function(e){var n=this._s;if(x(n))throw e;var t=n._o;n._o=void 0;try{var i=h(t.error);if(!i)throw e;e=i.call(t,e)}catch(e){try{v(n)}finally{throw e}}return v(n),e},complete:function(e){var n=this._s;if(!x(n)){var t=n._o;n._o=void 0;try{var i=h(t.complete);e=i?i.call(t,e):void 0}catch(e){try{v(n)}finally{throw e}}return v(n),e}}});var y=function(e){u(this,y,"Observable","_f")._f=c(e)};l(y.prototype,{subscribe:function(e){return new g(e,this._f)},forEach:function(e){var n=this;return new(o.Promise||a.Promise)((function(t,i){c(e);var a=n.subscribe({next:function(n){try{return e(n)}catch(e){i(e),a.unsubscribe()}},error:i,complete:t})}))}}),l(y,{from:function(e){var n="function"==typeof this?this:y,t=h(p(e)[s]);if(t){var i=p(t.call(e));return i.constructor===n?i:new n((function(e){return i.subscribe(e)}))}return new n((function(n){var t=!1;return r((function(){if(!t){try{if(d(e,!1,(function(e){if(n.next(e),t)return m}))===m)return}catch(e){if(t)throw e;return void n.error(e)}n.complete()}})),function(){t=!0}}))},of:function(){for(var e=0,n=arguments.length,t=new Array(n);e<n;)t[e]=arguments[e++];return new("function"==typeof this?this:y)((function(e){var n=!1;return r((function(){if(!n){for(var i=0;i<t.length;++i)if(e.next(t[i]),n)return;e.complete()}})),function(){n=!0}}))}}),f(y.prototype,s,(function(){return this})),i(i.G,{Observable:y}),t(47)("Observable")},function(e,n,t){var i=t(2),a=t(0),o=t(75),r=[].slice,s=/MSIE .\./.test(o),c=function(e){return function(n,t){var i=arguments.length>2,a=!!i&&r.call(arguments,2);return e(i?function(){("function"==typeof n?n:Function(n)).apply(this,a)}:n,t)}};a(a.G+a.B+a.F*s,{setTimeout:c(i.setTimeout),setInterval:c(i.setInterval)})},function(e,n,t){var i=t(0),a=t(115);i(i.G+i.B,{setImmediate:a.set,clearImmediate:a.clear})},function(e,n,t){for(var i=t(112),a=t(43),o=t(15),r=t(2),s=t(14),c=t(55),p=t(5),u=p("iterator"),l=p("toStringTag"),f=c.Array,d={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},m=a(d),h=0;h<m.length;h++){var v,x=m[h],b=d[x],g=r[x],k=g&&g.prototype;if(k&&(k[u]||s(k,u,f),k[l]||s(k,l,x),c[x]=f,b))for(v in i)k[v]||o(k,v,i[v],!0)}},function(e,n){!function(n){"use strict";var t=Object.prototype,i=t.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},o=a.iterator||"@@iterator",r=a.asyncIterator||"@@asyncIterator",s=a.toStringTag||"@@toStringTag",c="object"==typeof e,p=n.regeneratorRuntime;if(p)c&&(e.exports=p);else{(p=n.regeneratorRuntime=c?e.exports:{}).wrap=h;var u={},l={};l[o]=function(){return this};var f=Object.getPrototypeOf,d=f&&f(f(E([])));d&&d!==t&&i.call(d,o)&&(l=d);var m=g.prototype=x.prototype=Object.create(l);b.prototype=m.constructor=g,g.constructor=b,g[s]=b.displayName="GeneratorFunction",p.isGeneratorFunction=function(e){var n="function"==typeof e&&e.constructor;return!!n&&(n===b||"GeneratorFunction"===(n.displayName||n.name))},p.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,g):(e.__proto__=g,s in e||(e[s]="GeneratorFunction")),e.prototype=Object.create(m),e},p.awrap=function(e){return{__await:e}},k(y.prototype),y.prototype[r]=function(){return this},p.AsyncIterator=y,p.async=function(e,n,t,i){var a=new y(h(e,n,t,i));return p.isGeneratorFunction(n)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},k(m),m[s]="Generator",m[o]=function(){return this},m.toString=function(){return"[object Generator]"},p.keys=function(e){var n=[];for(var t in e)n.push(t);return n.reverse(),function t(){for(;n.length;){var i=n.pop();if(i in e)return t.value=i,t.done=!1,t}return t.done=!0,t}},p.values=E,j.prototype={constructor:j,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(_),!e)for(var n in this)"t"===n.charAt(0)&&i.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function t(t,i){return r.type="throw",r.arg=e,n.next=t,i&&(n.method="next",n.arg=void 0),!!i}for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],r=o.completion;if("root"===o.tryLoc)return t("end");if(o.tryLoc<=this.prev){var s=i.call(o,"catchLoc"),c=i.call(o,"finallyLoc");if(s&&c){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);if(this.prev<o.finallyLoc)return t(o.finallyLoc)}else if(s){if(this.prev<o.catchLoc)return t(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return t(o.finallyLoc)}}}},abrupt:function(e,n){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.tryLoc<=this.prev&&i.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var o=a;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=n&&n<=o.finallyLoc&&(o=null);var r=o?o.completion:{};return r.type=e,r.arg=n,o?(this.method="next",this.next=o.finallyLoc,u):this.complete(r)},complete:function(e,n){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&n&&(this.next=n),u},finish:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.finallyLoc===e)return this.complete(t.completion,t.afterLoc),_(t),u}},catch:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.tryLoc===e){var i=t.completion;if("throw"===i.type){var a=i.arg;_(t)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,t){return this.delegate={iterator:E(e),resultName:n,nextLoc:t},"next"===this.method&&(this.arg=void 0),u}}}function h(e,n,t,i){var a=n&&n.prototype instanceof x?n:x,o=Object.create(a.prototype),r=new j(i||[]);return o._invoke=function(e,n,t){var i="suspendedStart";return function(a,o){if("executing"===i)throw new Error("Generator is already running");if("completed"===i){if("throw"===a)throw o;return O()}for(t.method=a,t.arg=o;;){var r=t.delegate;if(r){var s=w(r,t);if(s){if(s===u)continue;return s}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===i)throw i="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);i="executing";var c=v(e,n,t);if("normal"===c.type){if(i=t.done?"completed":"suspendedYield",c.arg===u)continue;return{value:c.arg,done:t.done}}"throw"===c.type&&(i="completed",t.method="throw",t.arg=c.arg)}}}(e,t,r),o}function v(e,n,t){try{return{type:"normal",arg:e.call(n,t)}}catch(e){return{type:"throw",arg:e}}}function x(){}function b(){}function g(){}function k(e){["next","throw","return"].forEach((function(n){e[n]=function(e){return this._invoke(n,e)}}))}function y(e){function t(n,a,o,r){var s=v(e[n],e,a);if("throw"!==s.type){var c=s.arg,p=c.value;return p&&"object"==typeof p&&i.call(p,"__await")?Promise.resolve(p.__await).then((function(e){t("next",e,o,r)}),(function(e){t("throw",e,o,r)})):Promise.resolve(p).then((function(e){c.value=e,o(c)}),r)}r(s.arg)}var a;"object"==typeof n.process&&n.process.domain&&(t=n.process.domain.bind(t)),this._invoke=function(e,n){function i(){return new Promise((function(i,a){t(e,n,i,a)}))}return a=a?a.then(i,i):i()}}function w(e,n){var t=e.iterator[n.method];if(void 0===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=void 0,w(e,n),"throw"===n.method))return u;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var i=v(t,e.iterator,n.arg);if("throw"===i.type)return n.method="throw",n.arg=i.arg,n.delegate=null,u;var a=i.arg;return a?a.done?(n[e.resultName]=a.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=void 0),n.delegate=null,u):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,u)}function S(e){var n={tryLoc:e[0]};1 in e&&(n.catchLoc=e[1]),2 in e&&(n.finallyLoc=e[2],n.afterLoc=e[3]),this.tryEntries.push(n)}function _(e){var n=e.completion||{};n.type="normal",delete n.arg,e.completion=n}function j(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(S,this),this.reset(!0)}function E(e){if(e){var n=e[o];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var t=-1,a=function n(){for(;++t<e.length;)if(i.call(e,t))return n.value=e[t],n.done=!1,n;return n.value=void 0,n.done=!0,n};return a.next=a}}return{next:O}}function O(){return{value:void 0,done:!0}}}("object"==typeof global?global:"object"==typeof window?window:"object"==typeof self?self:this)},function(e,n,t){t(382),e.exports=t(23).RegExp.escape},function(e,n,t){var i=t(0),a=t(383)(/[\\^$*+?.()|[\]{}]/g,"\\$&");i(i.S,"RegExp",{escape:function(e){return a(e)}})},function(e,n){e.exports=function(e,n){var t=n===Object(n)?function(e){return n[e]}:n;return function(n){return String(n).replace(e,t)}}},function(e,n,t){"use strict";t(10);var i=t(12);Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n){var t={};return t.pinByHash=function(t,i){return(0,a.default)(e,n,t,i)},t.hashMetadata=function(t,i){return(0,o.default)(e,n,t,i)},t.pinFileToIPFS=function(t,i){return(0,r.default)(e,n,t,i)},t.pinFromFS=function(t,i){return(0,s.default)(e,n,t,i)},t.pinJSONToIPFS=function(t,i){return(0,c.default)(e,n,t,i)},t.pinJobs=function(t){return(0,p.default)(e,n,t)},t.unpin=function(t){return(0,u.default)(e,n,t)},t.testAuthentication=function(){return(0,l.default)(e,n)},t.pinList=function(t){return(0,f.default)(e,n,t)},t.getFilesByCount=function(t,i){return(0,d.default)(e,n,t,i)},t.userPinnedDataTotal=function(){return(0,m.default)(e,n)},t};var a=i(t(385)),o=i(t(437)),r=i(t(438)),s=i(t(449)),c=i(t(452)),p=i(t(453)),u=i(t(455)),l=i(t(456)),f=i(t(197)),d=i(t(458)),m=i(t(459));e.exports=n.default},function(e,n,t){"use strict";t(10);var i=t(12);Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n,t,i){if((0,r.validateApiKeys)(e,n),!t)throw new Error("hashToPin value is required for pinning by hash");if(!s.default.cid(t))throw new Error("hashToPin value is an invalid IPFS CID");var p="".concat(o.baseUrl,"/pinning/pinByHash"),u={hashToPin:t,pinataOptions:{}};i&&(i.pinataOptions&&(u.pinataOptions=i.pinataOptions),i.pinataMetadata&&((0,r.validateMetadata)(i.pinataMetadata),u.pinataMetadata=i.pinataMetadata));return new Promise((function(t,i){a.default.post(p,u,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&i(new Error("unknown server response while adding to pin queue: ".concat(e))),t(e.data)})).catch((function(e){var n=(0,c.handleError)(e);i(n)}))}))},t(16),t(22);var a=i(t(33)),o=t(34),r=t(28),s=i(t(63)),c=t(35);e.exports=n.default},function(e,n,t){"use strict";var i=t(13),a=t(173),o=t(387),r=t(182);function s(e){var n=new o(e),t=a(o.prototype.request,n);return i.extend(t,o.prototype,n),i.extend(t,n),t}var c=s(t(175));c.Axios=o,c.create=function(e){return s(r(c.defaults,e))},c.Cancel=t(183),c.CancelToken=t(410),c.isCancel=t(174),c.all=function(e){return Promise.all(e)},c.spread=t(411),c.isAxiosError=t(412),e.exports=c,e.exports.default=c},function(e,n,t){"use strict";var i=t(13),a=t(121),o=t(388),r=t(389),s=t(182);function c(e){this.defaults=e,this.interceptors={request:new o,response:new o}}c.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=s(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var n=[r,void 0],t=Promise.resolve(e);for(this.interceptors.request.forEach((function(e){n.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){n.push(e.fulfilled,e.rejected)}));n.length;)t=t.then(n.shift(),n.shift());return t},c.prototype.getUri=function(e){return e=s(this.defaults,e),a(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},i.forEach(["delete","get","head","options"],(function(e){c.prototype[e]=function(n,t){return this.request(s(t||{},{method:e,url:n,data:(t||{}).data}))}})),i.forEach(["post","put","patch"],(function(e){c.prototype[e]=function(n,t,i){return this.request(s(i||{},{method:e,url:n,data:t}))}})),e.exports=c},function(e,n,t){"use strict";var i=t(13);function a(){this.handlers=[]}a.prototype.use=function(e,n){return this.handlers.push({fulfilled:e,rejected:n}),this.handlers.length-1},a.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},a.prototype.forEach=function(e){i.forEach(this.handlers,(function(n){null!==n&&e(n)}))},e.exports=a},function(e,n,t){"use strict";var i=t(13),a=t(390),o=t(174),r=t(175);function s(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return s(e),e.headers=e.headers||{},e.data=a(e.data,e.headers,e.transformRequest),e.headers=i.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),i.forEach(["delete","get","head","post","put","patch","common"],(function(n){delete e.headers[n]})),(e.adapter||r.adapter)(e).then((function(n){return s(e),n.data=a(n.data,n.headers,e.transformResponse),n}),(function(n){return o(n)||(s(e),n&&n.response&&(n.response.data=a(n.response.data,n.response.headers,e.transformResponse))),Promise.reject(n)}))}},function(e,n,t){"use strict";var i=t(13);e.exports=function(e,n,t){return i.forEach(t,(function(t){e=t(e,n)})),e}},function(e,n,t){"use strict";var i=t(13);e.exports=function(e,n){i.forEach(e,(function(t,i){i!==n&&i.toUpperCase()===n.toUpperCase()&&(e[n]=t,delete e[i])}))}},function(e,n,t){"use strict";var i=t(13),a=t(176),o=t(393),r=t(121),s=t(178),c=t(396),p=t(397),u=t(122);e.exports=function(e){return new Promise((function(n,t){var l=e.data,f=e.headers;i.isFormData(l)&&delete f["Content-Type"];var d=new XMLHttpRequest;if(e.auth){var m=e.auth.username||"",h=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";f.Authorization="Basic "+btoa(m+":"+h)}var v=s(e.baseURL,e.url);if(d.open(e.method.toUpperCase(),r(v,e.params,e.paramsSerializer),!0),d.timeout=e.timeout,d.onreadystatechange=function(){if(d&&4===d.readyState&&(0!==d.status||d.responseURL&&0===d.responseURL.indexOf("file:"))){var i="getAllResponseHeaders"in d?c(d.getAllResponseHeaders()):null,o={data:e.responseType&&"text"!==e.responseType?d.response:d.responseText,status:d.status,statusText:d.statusText,headers:i,config:e,request:d};a(n,t,o),d=null}},d.onabort=function(){d&&(t(u("Request aborted",e,"ECONNABORTED",d)),d=null)},d.onerror=function(){t(u("Network Error",e,null,d)),d=null},d.ontimeout=function(){var n="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(n=e.timeoutErrorMessage),t(u(n,e,"ECONNABORTED",d)),d=null},i.isStandardBrowserEnv()){var x=(e.withCredentials||p(v))&&e.xsrfCookieName?o.read(e.xsrfCookieName):void 0;x&&(f[e.xsrfHeaderName]=x)}if("setRequestHeader"in d&&i.forEach(f,(function(e,n){void 0===l&&"content-type"===n.toLowerCase()?delete f[n]:d.setRequestHeader(n,e)})),i.isUndefined(e.withCredentials)||(d.withCredentials=!!e.withCredentials),e.responseType)try{d.responseType=e.responseType}catch(n){if("json"!==e.responseType)throw n}"function"==typeof e.onDownloadProgress&&d.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&d.upload&&d.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){d&&(d.abort(),t(e),d=null)})),l||(l=null),d.send(l)}))}},function(e,n,t){"use strict";var i=t(13);e.exports=i.isStandardBrowserEnv()?{write:function(e,n,t,a,o,r){var s=[];s.push(e+"="+encodeURIComponent(n)),i.isNumber(t)&&s.push("expires="+new Date(t).toGMTString()),i.isString(a)&&s.push("path="+a),i.isString(o)&&s.push("domain="+o),!0===r&&s.push("secure"),document.cookie=s.join("; ")},read:function(e){var n=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return n?decodeURIComponent(n[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(e,n,t){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,n,t){"use strict";e.exports=function(e,n){return n?e.replace(/\/+$/,"")+"/"+n.replace(/^\/+/,""):e}},function(e,n,t){"use strict";var i=t(13),a=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var n,t,o,r={};return e?(i.forEach(e.split("\n"),(function(e){if(o=e.indexOf(":"),n=i.trim(e.substr(0,o)).toLowerCase(),t=i.trim(e.substr(o+1)),n){if(r[n]&&a.indexOf(n)>=0)return;r[n]="set-cookie"===n?(r[n]?r[n]:[]).concat([t]):r[n]?r[n]+", "+t:t}})),r):r}},function(e,n,t){"use strict";var i=t(13);e.exports=i.isStandardBrowserEnv()?function(){var e,n=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");function a(e){var i=e;return n&&(t.setAttribute("href",i),i=t.href),t.setAttribute("href",i),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return e=a(window.location.href),function(n){var t=i.isString(n)?a(n):n;return t.protocol===e.protocol&&t.host===e.host}}():function(){return!0}},function(e,n,t){"use strict";var i=t(13),a=t(176),o=t(178),r=t(121),s=t(123),c=t(124),p=t(179).http,u=t(179).https,l=t(125),f=t(408),d=t(409),m=t(122),h=t(177),v=/https:?/;e.exports=function(e){return new Promise((function(n,t){var x=function(e){n(e)},b=function(e){t(e)},g=e.data,k=e.headers;if(k["User-Agent"]||k["user-agent"]||(k["User-Agent"]="axios/"+d.version),g&&!i.isStream(g)){if(Buffer.isBuffer(g));else if(i.isArrayBuffer(g))g=Buffer.from(new Uint8Array(g));else{if(!i.isString(g))return b(m("Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream",e));g=Buffer.from(g,"utf-8")}k["Content-Length"]=g.length}var y=void 0;e.auth&&(y=(e.auth.username||"")+":"+(e.auth.password||""));var w=o(e.baseURL,e.url),S=l.parse(w),_=S.protocol||"http:";if(!y&&S.auth){var j=S.auth.split(":");y=(j[0]||"")+":"+(j[1]||"")}y&&delete k.Authorization;var E=v.test(_),O=E?e.httpsAgent:e.httpAgent,C={path:r(S.path,e.params,e.paramsSerializer).replace(/^\?/,""),method:e.method.toUpperCase(),headers:k,agent:O,agents:{http:e.httpAgent,https:e.httpsAgent},auth:y};e.socketPath?C.socketPath=e.socketPath:(C.hostname=S.hostname,C.port=S.port);var A,P=e.proxy;if(!P&&!1!==P){var M=_.slice(0,-1)+"_proxy",F=process.env[M]||process.env[M.toUpperCase()];if(F){var B=l.parse(F),N=process.env.no_proxy||process.env.NO_PROXY,I=!0;if(N)I=!N.split(",").map((function(e){return e.trim()})).some((function(e){return!!e&&("*"===e||("."===e[0]&&S.hostname.substr(S.hostname.length-e.length)===e||S.hostname===e))}));if(I&&(P={host:B.hostname,port:B.port,protocol:B.protocol},B.auth)){var R=B.auth.split(":");P.auth={username:R[0],password:R[1]}}}}P&&(C.headers.host=S.hostname+(S.port?":"+S.port:""),function e(n,t,i){if(n.hostname=t.host,n.host=t.host,n.port=t.port,n.path=i,t.auth){var a=Buffer.from(t.auth.username+":"+t.auth.password,"utf8").toString("base64");n.headers["Proxy-Authorization"]="Basic "+a}n.beforeRedirect=function(n){n.headers.host=n.host,e(n,t,n.href)}}(C,P,_+"//"+S.hostname+(S.port?":"+S.port:"")+C.path));var T=E&&(!P||v.test(P.protocol));e.transport?A=e.transport:0===e.maxRedirects?A=T?c:s:(e.maxRedirects&&(C.maxRedirects=e.maxRedirects),A=T?u:p),e.maxBodyLength>-1&&(C.maxBodyLength=e.maxBodyLength);var z=A.request(C,(function(n){if(!z.aborted){var t=n,o=n.req||z;if(204!==n.statusCode&&"HEAD"!==o.method&&!1!==e.decompress)switch(n.headers["content-encoding"]){case"gzip":case"compress":case"deflate":t=t.pipe(f.createUnzip()),delete n.headers["content-encoding"]}var r={status:n.statusCode,statusText:n.statusMessage,headers:n.headers,config:e,request:o};if("stream"===e.responseType)r.data=t,a(x,b,r);else{var s=[];t.on("data",(function(n){s.push(n),e.maxContentLength>-1&&Buffer.concat(s).length>e.maxContentLength&&(t.destroy(),b(m("maxContentLength size of "+e.maxContentLength+" exceeded",e,null,o)))})),t.on("error",(function(n){z.aborted||b(h(n,e,null,o))})),t.on("end",(function(){var n=Buffer.concat(s);"arraybuffer"!==e.responseType&&(n=n.toString(e.responseEncoding),e.responseEncoding&&"utf8"!==e.responseEncoding||(n=i.stripBOM(n))),r.data=n,a(x,b,r)}))}}}));z.on("error",(function(n){z.aborted&&"ERR_FR_TOO_MANY_REDIRECTS"!==n.code||b(h(n,e,null,z))})),e.timeout&&z.setTimeout(e.timeout,(function(){z.abort(),b(m("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED",z))})),e.cancelToken&&e.cancelToken.promise.then((function(e){z.aborted||(z.abort(),b(e))})),i.isStream(g)?g.on("error",(function(n){b(h(n,e,null,z))})).pipe(z):z.end(g)}))}},function(e,n){e.exports=require("assert")},function(e,n,t){var i;try{i=t(401)("follow-redirects")}catch(e){i=function(){}}e.exports=i},function(e,n,t){"undefined"==typeof process||"renderer"===process.type||!0===process.browser||process.__nwjs?e.exports=t(402):e.exports=t(404)},function(e,n,t){n.formatArgs=function(n){if(n[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+n[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const t="color: "+this.color;n.splice(1,0,t,"color: inherit");let i=0,a=0;n[0].replace(/%[a-zA-Z%]/g,e=>{"%%"!==e&&(i++,"%c"===e&&(a=i))}),n.splice(a,0,t)},n.save=function(e){try{e?n.storage.setItem("debug",e):n.storage.removeItem("debug")}catch(e){}},n.load=function(){let e;try{e=n.storage.getItem("debug")}catch(e){}!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG);return e},n.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},n.storage=function(){try{return localStorage}catch(e){}}(),n.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),n.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],n.log=console.debug||console.log||(()=>{}),e.exports=t(180)(n);const{formatters:i}=e.exports;i.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},function(e,n){var t=1e3,i=6e4,a=36e5,o=24*a;function r(e,n,t){if(!(e<n))return e<1.5*n?Math.floor(e/n)+" "+t:Math.ceil(e/n)+" "+t+"s"}e.exports=function(e,n){n=n||{};var s,c=typeof e;if("string"===c&&e.length>0)return function(e){if((e=String(e)).length>100)return;var n=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(!n)return;var r=parseFloat(n[1]);switch((n[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*r;case"days":case"day":case"d":return r*o;case"hours":case"hour":case"hrs":case"hr":case"h":return r*a;case"minutes":case"minute":case"mins":case"min":case"m":return r*i;case"seconds":case"second":case"secs":case"sec":case"s":return r*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}(e);if("number"===c&&!1===isNaN(e))return n.long?r(s=e,o,"day")||r(s,a,"hour")||r(s,i,"minute")||r(s,t,"second")||s+" ms":function(e){if(e>=o)return Math.round(e/o)+"d";if(e>=a)return Math.round(e/a)+"h";if(e>=i)return Math.round(e/i)+"m";if(e>=t)return Math.round(e/t)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},function(e,n,t){const i=t(405),a=t(82);n.init=function(e){e.inspectOpts={};const t=Object.keys(n.inspectOpts);for(let i=0;i<t.length;i++)e.inspectOpts[t[i]]=n.inspectOpts[t[i]]},n.log=function(...e){return process.stderr.write(a.format(...e)+"\n")},n.formatArgs=function(t){const{namespace:i,useColors:a}=this;if(a){const n=this.color,a="[3"+(n<8?n:"8;5;"+n),o=`  ${a};1m${i} [0m`;t[0]=o+t[0].split("\n").join("\n"+o),t.push(a+"m+"+e.exports.humanize(this.diff)+"[0m")}else t[0]=function(){if(n.inspectOpts.hideDate)return"";return(new Date).toISOString()+" "}()+i+" "+t[0]},n.save=function(e){e?process.env.DEBUG=e:delete process.env.DEBUG},n.load=function(){return process.env.DEBUG},n.useColors=function(){return"colors"in n.inspectOpts?Boolean(n.inspectOpts.colors):i.isatty(process.stderr.fd)},n.destroy=a.deprecate(()=>{},"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."),n.colors=[6,2,3,4,5,1];try{const e=t(406);e&&(e.stderr||e).level>=2&&(n.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch(e){}n.inspectOpts=Object.keys(process.env).filter(e=>/^debug_/i.test(e)).reduce((e,n)=>{const t=n.substring(6).toLowerCase().replace(/_([a-z])/g,(e,n)=>n.toUpperCase());let i=process.env[n];return i=!!/^(yes|on|true|enabled)$/i.test(i)||!/^(no|off|false|disabled)$/i.test(i)&&("null"===i?null:Number(i)),e[t]=i,e},{}),e.exports=t(180)(n);const{formatters:o}=e.exports;o.o=function(e){return this.inspectOpts.colors=this.useColors,a.inspect(e,this.inspectOpts).split("\n").map(e=>e.trim()).join(" ")},o.O=function(e){return this.inspectOpts.colors=this.useColors,a.inspect(e,this.inspectOpts)}},function(e,n){e.exports=require("tty")},function(e,n,t){"use strict";const i=t(181),a=t(407),o=process.env;let r;function s(e){return function(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}(function(e){if(!1===r)return 0;if(a("color=16m")||a("color=full")||a("color=truecolor"))return 3;if(a("color=256"))return 2;if(e&&!e.isTTY&&!0!==r)return 0;const n=r?1:0;if("win32"===process.platform){const e=i.release().split(".");return Number(process.versions.node.split(".")[0])>=8&&Number(e[0])>=10&&Number(e[2])>=10586?Number(e[2])>=14931?3:2:1}if("CI"in o)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some(e=>e in o)||"codeship"===o.CI_NAME?1:n;if("TEAMCITY_VERSION"in o)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(o.TEAMCITY_VERSION)?1:0;if("truecolor"===o.COLORTERM)return 3;if("TERM_PROGRAM"in o){const e=parseInt((o.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(o.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(o.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(o.TERM)||"COLORTERM"in o?1:(o.TERM,n)}(e))}a("no-color")||a("no-colors")||a("color=false")?r=!1:(a("color")||a("colors")||a("color=true")||a("color=always"))&&(r=!0),"FORCE_COLOR"in o&&(r=0===o.FORCE_COLOR.length||0!==parseInt(o.FORCE_COLOR,10)),e.exports={supportsColor:s,stdout:s(process.stdout),stderr:s(process.stderr)}},function(e,n,t){"use strict";e.exports=(e,n)=>{n=n||process.argv;const t=e.startsWith("-")?"":1===e.length?"-":"--",i=n.indexOf(t+e),a=n.indexOf("--");return-1!==i&&(-1===a||i<a)}},function(e,n){e.exports=require("zlib")},function(e){e.exports=JSON.parse('{"_args":[["axios@0.21.1","/Users/rommelberrios/Documents/pinata/Pinata-SDK"]],"_from":"axios@0.21.1","_id":"axios@0.21.1","_inBundle":false,"_integrity":"sha512-dKQiRHxGD9PPRIUNIWvZhPTPpl1rf/OxTYKsqKUDjBwYylTvV7SjSHJb9ratfyzM6wCdLCOYLzs73qpg5c4iGA==","_location":"/axios","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"axios@0.21.1","name":"axios","escapedName":"axios","rawSpec":"0.21.1","saveSpec":null,"fetchSpec":"0.21.1"},"_requiredBy":["/"],"_resolved":"https://registry.npmjs.org/axios/-/axios-0.21.1.tgz","_spec":"0.21.1","_where":"/Users/rommelberrios/Documents/pinata/Pinata-SDK","author":{"name":"Matt Zabriskie"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"bugs":{"url":"https://github.com/axios/axios/issues"},"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}],"dependencies":{"follow-redirects":"^1.10.0"},"description":"Promise based HTTP client for the browser and node.js","devDependencies":{"bundlesize":"^0.17.0","coveralls":"^3.0.0","es6-promise":"^4.2.4","grunt":"^1.0.2","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^20.1.0","grunt-karma":"^2.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^1.0.18","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^1.3.0","karma-chrome-launcher":"^2.2.0","karma-coverage":"^1.1.1","karma-firefox-launcher":"^1.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-opera-launcher":"^1.0.0","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^1.2.0","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.7","karma-webpack":"^1.7.0","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","mocha":"^5.2.0","sinon":"^4.5.0","typescript":"^2.8.1","url-search-params":"^0.10.0","webpack":"^1.13.1","webpack-dev-server":"^1.14.1"},"homepage":"https://github.com/axios/axios","jsdelivr":"dist/axios.min.js","keywords":["xhr","http","ajax","promise","node"],"license":"MIT","main":"index.js","name":"axios","repository":{"type":"git","url":"git+https://github.com/axios/axios.git"},"scripts":{"build":"NODE_ENV=production grunt build","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","examples":"node ./examples/server.js","fix":"eslint --fix lib/**/*.js","postversion":"git push && git push --tags","preversion":"npm test","start":"node ./sandbox/server.js","test":"grunt test && bundlesize","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json"},"typings":"./index.d.ts","unpkg":"dist/axios.min.js","version":"0.21.1"}')},function(e,n,t){"use strict";var i=t(183);function a(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var n;this.promise=new Promise((function(e){n=e}));var t=this;e((function(e){t.reason||(t.reason=new i(e),n(t.reason))}))}a.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},a.source=function(){var e;return{token:new a((function(n){e=n})),cancel:e}},e.exports=a},function(e,n,t){"use strict";e.exports=function(e){return function(n){return e.apply(null,n)}}},function(e,n,t){"use strict";e.exports=function(e){return"object"==typeof e&&!0===e.isAxiosError}},function(e,n,t){var i=t(185),a=i.Buffer;function o(e,n){for(var t in e)n[t]=e[t]}function r(e,n,t){return a(e,n,t)}a.from&&a.alloc&&a.allocUnsafe&&a.allocUnsafeSlow?e.exports=i:(o(i,n),n.Buffer=r),r.prototype=Object.create(a.prototype),o(a,r),r.from=function(e,n,t){if("number"==typeof e)throw new TypeError("Argument must not be a number");return a(e,n,t)},r.alloc=function(e,n,t){if("number"!=typeof e)throw new TypeError("Argument must be a number");var i=a(e);return void 0!==n?"string"==typeof t?i.fill(n,t):i.fill(n):i.fill(0),i},r.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return a(e)},r.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return i.SlowBuffer(e)}},function(e,n,t){"use strict";n.names=Object.freeze({identity:0,sha1:17,"sha2-256":18,"sha2-512":19,"dbl-sha2-256":86,"sha3-224":23,"sha3-256":22,"sha3-384":21,"sha3-512":20,"shake-128":24,"shake-256":25,"keccak-224":26,"keccak-256":27,"keccak-384":28,"keccak-512":29,"murmur3-128":34,"murmur3-32":35,"blake2b-8":45569,"blake2b-16":45570,"blake2b-24":45571,"blake2b-32":45572,"blake2b-40":45573,"blake2b-48":45574,"blake2b-56":45575,"blake2b-64":45576,"blake2b-72":45577,"blake2b-80":45578,"blake2b-88":45579,"blake2b-96":45580,"blake2b-104":45581,"blake2b-112":45582,"blake2b-120":45583,"blake2b-128":45584,"blake2b-136":45585,"blake2b-144":45586,"blake2b-152":45587,"blake2b-160":45588,"blake2b-168":45589,"blake2b-176":45590,"blake2b-184":45591,"blake2b-192":45592,"blake2b-200":45593,"blake2b-208":45594,"blake2b-216":45595,"blake2b-224":45596,"blake2b-232":45597,"blake2b-240":45598,"blake2b-248":45599,"blake2b-256":45600,"blake2b-264":45601,"blake2b-272":45602,"blake2b-280":45603,"blake2b-288":45604,"blake2b-296":45605,"blake2b-304":45606,"blake2b-312":45607,"blake2b-320":45608,"blake2b-328":45609,"blake2b-336":45610,"blake2b-344":45611,"blake2b-352":45612,"blake2b-360":45613,"blake2b-368":45614,"blake2b-376":45615,"blake2b-384":45616,"blake2b-392":45617,"blake2b-400":45618,"blake2b-408":45619,"blake2b-416":45620,"blake2b-424":45621,"blake2b-432":45622,"blake2b-440":45623,"blake2b-448":45624,"blake2b-456":45625,"blake2b-464":45626,"blake2b-472":45627,"blake2b-480":45628,"blake2b-488":45629,"blake2b-496":45630,"blake2b-504":45631,"blake2b-512":45632,"blake2s-8":45633,"blake2s-16":45634,"blake2s-24":45635,"blake2s-32":45636,"blake2s-40":45637,"blake2s-48":45638,"blake2s-56":45639,"blake2s-64":45640,"blake2s-72":45641,"blake2s-80":45642,"blake2s-88":45643,"blake2s-96":45644,"blake2s-104":45645,"blake2s-112":45646,"blake2s-120":45647,"blake2s-128":45648,"blake2s-136":45649,"blake2s-144":45650,"blake2s-152":45651,"blake2s-160":45652,"blake2s-168":45653,"blake2s-176":45654,"blake2s-184":45655,"blake2s-192":45656,"blake2s-200":45657,"blake2s-208":45658,"blake2s-216":45659,"blake2s-224":45660,"blake2s-232":45661,"blake2s-240":45662,"blake2s-248":45663,"blake2s-256":45664,"Skein256-8":45825,"Skein256-16":45826,"Skein256-24":45827,"Skein256-32":45828,"Skein256-40":45829,"Skein256-48":45830,"Skein256-56":45831,"Skein256-64":45832,"Skein256-72":45833,"Skein256-80":45834,"Skein256-88":45835,"Skein256-96":45836,"Skein256-104":45837,"Skein256-112":45838,"Skein256-120":45839,"Skein256-128":45840,"Skein256-136":45841,"Skein256-144":45842,"Skein256-152":45843,"Skein256-160":45844,"Skein256-168":45845,"Skein256-176":45846,"Skein256-184":45847,"Skein256-192":45848,"Skein256-200":45849,"Skein256-208":45850,"Skein256-216":45851,"Skein256-224":45852,"Skein256-232":45853,"Skein256-240":45854,"Skein256-248":45855,"Skein256-256":45856,"Skein512-8":45857,"Skein512-16":45858,"Skein512-24":45859,"Skein512-32":45860,"Skein512-40":45861,"Skein512-48":45862,"Skein512-56":45863,"Skein512-64":45864,"Skein512-72":45865,"Skein512-80":45866,"Skein512-88":45867,"Skein512-96":45868,"Skein512-104":45869,"Skein512-112":45870,"Skein512-120":45871,"Skein512-128":45872,"Skein512-136":45873,"Skein512-144":45874,"Skein512-152":45875,"Skein512-160":45876,"Skein512-168":45877,"Skein512-176":45878,"Skein512-184":45879,"Skein512-192":45880,"Skein512-200":45881,"Skein512-208":45882,"Skein512-216":45883,"Skein512-224":45884,"Skein512-232":45885,"Skein512-240":45886,"Skein512-248":45887,"Skein512-256":45888,"Skein512-264":45889,"Skein512-272":45890,"Skein512-280":45891,"Skein512-288":45892,"Skein512-296":45893,"Skein512-304":45894,"Skein512-312":45895,"Skein512-320":45896,"Skein512-328":45897,"Skein512-336":45898,"Skein512-344":45899,"Skein512-352":45900,"Skein512-360":45901,"Skein512-368":45902,"Skein512-376":45903,"Skein512-384":45904,"Skein512-392":45905,"Skein512-400":45906,"Skein512-408":45907,"Skein512-416":45908,"Skein512-424":45909,"Skein512-432":45910,"Skein512-440":45911,"Skein512-448":45912,"Skein512-456":45913,"Skein512-464":45914,"Skein512-472":45915,"Skein512-480":45916,"Skein512-488":45917,"Skein512-496":45918,"Skein512-504":45919,"Skein512-512":45920,"Skein1024-8":45921,"Skein1024-16":45922,"Skein1024-24":45923,"Skein1024-32":45924,"Skein1024-40":45925,"Skein1024-48":45926,"Skein1024-56":45927,"Skein1024-64":45928,"Skein1024-72":45929,"Skein1024-80":45930,"Skein1024-88":45931,"Skein1024-96":45932,"Skein1024-104":45933,"Skein1024-112":45934,"Skein1024-120":45935,"Skein1024-128":45936,"Skein1024-136":45937,"Skein1024-144":45938,"Skein1024-152":45939,"Skein1024-160":45940,"Skein1024-168":45941,"Skein1024-176":45942,"Skein1024-184":45943,"Skein1024-192":45944,"Skein1024-200":45945,"Skein1024-208":45946,"Skein1024-216":45947,"Skein1024-224":45948,"Skein1024-232":45949,"Skein1024-240":45950,"Skein1024-248":45951,"Skein1024-256":45952,"Skein1024-264":45953,"Skein1024-272":45954,"Skein1024-280":45955,"Skein1024-288":45956,"Skein1024-296":45957,"Skein1024-304":45958,"Skein1024-312":45959,"Skein1024-320":45960,"Skein1024-328":45961,"Skein1024-336":45962,"Skein1024-344":45963,"Skein1024-352":45964,"Skein1024-360":45965,"Skein1024-368":45966,"Skein1024-376":45967,"Skein1024-384":45968,"Skein1024-392":45969,"Skein1024-400":45970,"Skein1024-408":45971,"Skein1024-416":45972,"Skein1024-424":45973,"Skein1024-432":45974,"Skein1024-440":45975,"Skein1024-448":45976,"Skein1024-456":45977,"Skein1024-464":45978,"Skein1024-472":45979,"Skein1024-480":45980,"Skein1024-488":45981,"Skein1024-496":45982,"Skein1024-504":45983,"Skein1024-512":45984,"Skein1024-520":45985,"Skein1024-528":45986,"Skein1024-536":45987,"Skein1024-544":45988,"Skein1024-552":45989,"Skein1024-560":45990,"Skein1024-568":45991,"Skein1024-576":45992,"Skein1024-584":45993,"Skein1024-592":45994,"Skein1024-600":45995,"Skein1024-608":45996,"Skein1024-616":45997,"Skein1024-624":45998,"Skein1024-632":45999,"Skein1024-640":46e3,"Skein1024-648":46001,"Skein1024-656":46002,"Skein1024-664":46003,"Skein1024-672":46004,"Skein1024-680":46005,"Skein1024-688":46006,"Skein1024-696":46007,"Skein1024-704":46008,"Skein1024-712":46009,"Skein1024-720":46010,"Skein1024-728":46011,"Skein1024-736":46012,"Skein1024-744":46013,"Skein1024-752":46014,"Skein1024-760":46015,"Skein1024-768":46016,"Skein1024-776":46017,"Skein1024-784":46018,"Skein1024-792":46019,"Skein1024-800":46020,"Skein1024-808":46021,"Skein1024-816":46022,"Skein1024-824":46023,"Skein1024-832":46024,"Skein1024-840":46025,"Skein1024-848":46026,"Skein1024-856":46027,"Skein1024-864":46028,"Skein1024-872":46029,"Skein1024-880":46030,"Skein1024-888":46031,"Skein1024-896":46032,"Skein1024-904":46033,"Skein1024-912":46034,"Skein1024-920":46035,"Skein1024-928":46036,"Skein1024-936":46037,"Skein1024-944":46038,"Skein1024-952":46039,"Skein1024-960":46040,"Skein1024-968":46041,"Skein1024-976":46042,"Skein1024-984":46043,"Skein1024-992":46044,"Skein1024-1000":46045,"Skein1024-1008":46046,"Skein1024-1016":46047,"Skein1024-1024":46048}),n.codes=Object.freeze({0:"identity",17:"sha1",18:"sha2-256",19:"sha2-512",86:"dbl-sha2-256",23:"sha3-224",22:"sha3-256",21:"sha3-384",20:"sha3-512",24:"shake-128",25:"shake-256",26:"keccak-224",27:"keccak-256",28:"keccak-384",29:"keccak-512",34:"murmur3-128",35:"murmur3-32",45569:"blake2b-8",45570:"blake2b-16",45571:"blake2b-24",45572:"blake2b-32",45573:"blake2b-40",45574:"blake2b-48",45575:"blake2b-56",45576:"blake2b-64",45577:"blake2b-72",45578:"blake2b-80",45579:"blake2b-88",45580:"blake2b-96",45581:"blake2b-104",45582:"blake2b-112",45583:"blake2b-120",45584:"blake2b-128",45585:"blake2b-136",45586:"blake2b-144",45587:"blake2b-152",45588:"blake2b-160",45589:"blake2b-168",45590:"blake2b-176",45591:"blake2b-184",45592:"blake2b-192",45593:"blake2b-200",45594:"blake2b-208",45595:"blake2b-216",45596:"blake2b-224",45597:"blake2b-232",45598:"blake2b-240",45599:"blake2b-248",45600:"blake2b-256",45601:"blake2b-264",45602:"blake2b-272",45603:"blake2b-280",45604:"blake2b-288",45605:"blake2b-296",45606:"blake2b-304",45607:"blake2b-312",45608:"blake2b-320",45609:"blake2b-328",45610:"blake2b-336",45611:"blake2b-344",45612:"blake2b-352",45613:"blake2b-360",45614:"blake2b-368",45615:"blake2b-376",45616:"blake2b-384",45617:"blake2b-392",45618:"blake2b-400",45619:"blake2b-408",45620:"blake2b-416",45621:"blake2b-424",45622:"blake2b-432",45623:"blake2b-440",45624:"blake2b-448",45625:"blake2b-456",45626:"blake2b-464",45627:"blake2b-472",45628:"blake2b-480",45629:"blake2b-488",45630:"blake2b-496",45631:"blake2b-504",45632:"blake2b-512",45633:"blake2s-8",45634:"blake2s-16",45635:"blake2s-24",45636:"blake2s-32",45637:"blake2s-40",45638:"blake2s-48",45639:"blake2s-56",45640:"blake2s-64",45641:"blake2s-72",45642:"blake2s-80",45643:"blake2s-88",45644:"blake2s-96",45645:"blake2s-104",45646:"blake2s-112",45647:"blake2s-120",45648:"blake2s-128",45649:"blake2s-136",45650:"blake2s-144",45651:"blake2s-152",45652:"blake2s-160",45653:"blake2s-168",45654:"blake2s-176",45655:"blake2s-184",45656:"blake2s-192",45657:"blake2s-200",45658:"blake2s-208",45659:"blake2s-216",45660:"blake2s-224",45661:"blake2s-232",45662:"blake2s-240",45663:"blake2s-248",45664:"blake2s-256",45825:"Skein256-8",45826:"Skein256-16",45827:"Skein256-24",45828:"Skein256-32",45829:"Skein256-40",45830:"Skein256-48",45831:"Skein256-56",45832:"Skein256-64",45833:"Skein256-72",45834:"Skein256-80",45835:"Skein256-88",45836:"Skein256-96",45837:"Skein256-104",45838:"Skein256-112",45839:"Skein256-120",45840:"Skein256-128",45841:"Skein256-136",45842:"Skein256-144",45843:"Skein256-152",45844:"Skein256-160",45845:"Skein256-168",45846:"Skein256-176",45847:"Skein256-184",45848:"Skein256-192",45849:"Skein256-200",45850:"Skein256-208",45851:"Skein256-216",45852:"Skein256-224",45853:"Skein256-232",45854:"Skein256-240",45855:"Skein256-248",45856:"Skein256-256",45857:"Skein512-8",45858:"Skein512-16",45859:"Skein512-24",45860:"Skein512-32",45861:"Skein512-40",45862:"Skein512-48",45863:"Skein512-56",45864:"Skein512-64",45865:"Skein512-72",45866:"Skein512-80",45867:"Skein512-88",45868:"Skein512-96",45869:"Skein512-104",45870:"Skein512-112",45871:"Skein512-120",45872:"Skein512-128",45873:"Skein512-136",45874:"Skein512-144",45875:"Skein512-152",45876:"Skein512-160",45877:"Skein512-168",45878:"Skein512-176",45879:"Skein512-184",45880:"Skein512-192",45881:"Skein512-200",45882:"Skein512-208",45883:"Skein512-216",45884:"Skein512-224",45885:"Skein512-232",45886:"Skein512-240",45887:"Skein512-248",45888:"Skein512-256",45889:"Skein512-264",45890:"Skein512-272",45891:"Skein512-280",45892:"Skein512-288",45893:"Skein512-296",45894:"Skein512-304",45895:"Skein512-312",45896:"Skein512-320",45897:"Skein512-328",45898:"Skein512-336",45899:"Skein512-344",45900:"Skein512-352",45901:"Skein512-360",45902:"Skein512-368",45903:"Skein512-376",45904:"Skein512-384",45905:"Skein512-392",45906:"Skein512-400",45907:"Skein512-408",45908:"Skein512-416",45909:"Skein512-424",45910:"Skein512-432",45911:"Skein512-440",45912:"Skein512-448",45913:"Skein512-456",45914:"Skein512-464",45915:"Skein512-472",45916:"Skein512-480",45917:"Skein512-488",45918:"Skein512-496",45919:"Skein512-504",45920:"Skein512-512",45921:"Skein1024-8",45922:"Skein1024-16",45923:"Skein1024-24",45924:"Skein1024-32",45925:"Skein1024-40",45926:"Skein1024-48",45927:"Skein1024-56",45928:"Skein1024-64",45929:"Skein1024-72",45930:"Skein1024-80",45931:"Skein1024-88",45932:"Skein1024-96",45933:"Skein1024-104",45934:"Skein1024-112",45935:"Skein1024-120",45936:"Skein1024-128",45937:"Skein1024-136",45938:"Skein1024-144",45939:"Skein1024-152",45940:"Skein1024-160",45941:"Skein1024-168",45942:"Skein1024-176",45943:"Skein1024-184",45944:"Skein1024-192",45945:"Skein1024-200",45946:"Skein1024-208",45947:"Skein1024-216",45948:"Skein1024-224",45949:"Skein1024-232",45950:"Skein1024-240",45951:"Skein1024-248",45952:"Skein1024-256",45953:"Skein1024-264",45954:"Skein1024-272",45955:"Skein1024-280",45956:"Skein1024-288",45957:"Skein1024-296",45958:"Skein1024-304",45959:"Skein1024-312",45960:"Skein1024-320",45961:"Skein1024-328",45962:"Skein1024-336",45963:"Skein1024-344",45964:"Skein1024-352",45965:"Skein1024-360",45966:"Skein1024-368",45967:"Skein1024-376",45968:"Skein1024-384",45969:"Skein1024-392",45970:"Skein1024-400",45971:"Skein1024-408",45972:"Skein1024-416",45973:"Skein1024-424",45974:"Skein1024-432",45975:"Skein1024-440",45976:"Skein1024-448",45977:"Skein1024-456",45978:"Skein1024-464",45979:"Skein1024-472",45980:"Skein1024-480",45981:"Skein1024-488",45982:"Skein1024-496",45983:"Skein1024-504",45984:"Skein1024-512",45985:"Skein1024-520",45986:"Skein1024-528",45987:"Skein1024-536",45988:"Skein1024-544",45989:"Skein1024-552",45990:"Skein1024-560",45991:"Skein1024-568",45992:"Skein1024-576",45993:"Skein1024-584",45994:"Skein1024-592",45995:"Skein1024-600",45996:"Skein1024-608",45997:"Skein1024-616",45998:"Skein1024-624",45999:"Skein1024-632",46e3:"Skein1024-640",46001:"Skein1024-648",46002:"Skein1024-656",46003:"Skein1024-664",46004:"Skein1024-672",46005:"Skein1024-680",46006:"Skein1024-688",46007:"Skein1024-696",46008:"Skein1024-704",46009:"Skein1024-712",46010:"Skein1024-720",46011:"Skein1024-728",46012:"Skein1024-736",46013:"Skein1024-744",46014:"Skein1024-752",46015:"Skein1024-760",46016:"Skein1024-768",46017:"Skein1024-776",46018:"Skein1024-784",46019:"Skein1024-792",46020:"Skein1024-800",46021:"Skein1024-808",46022:"Skein1024-816",46023:"Skein1024-824",46024:"Skein1024-832",46025:"Skein1024-840",46026:"Skein1024-848",46027:"Skein1024-856",46028:"Skein1024-864",46029:"Skein1024-872",46030:"Skein1024-880",46031:"Skein1024-888",46032:"Skein1024-896",46033:"Skein1024-904",46034:"Skein1024-912",46035:"Skein1024-920",46036:"Skein1024-928",46037:"Skein1024-936",46038:"Skein1024-944",46039:"Skein1024-952",46040:"Skein1024-960",46041:"Skein1024-968",46042:"Skein1024-976",46043:"Skein1024-984",46044:"Skein1024-992",46045:"Skein1024-1000",46046:"Skein1024-1008",46047:"Skein1024-1016",46048:"Skein1024-1024"}),n.defaultLengths=Object.freeze({17:20,18:32,19:64,86:32,23:28,22:32,21:48,20:64,24:32,25:64,26:28,27:32,28:48,29:64,34:32,45569:1,45570:2,45571:3,45572:4,45573:5,45574:6,45575:7,45576:8,45577:9,45578:10,45579:11,45580:12,45581:13,45582:14,45583:15,45584:16,45585:17,45586:18,45587:19,45588:20,45589:21,45590:22,45591:23,45592:24,45593:25,45594:26,45595:27,45596:28,45597:29,45598:30,45599:31,45600:32,45601:33,45602:34,45603:35,45604:36,45605:37,45606:38,45607:39,45608:40,45609:41,45610:42,45611:43,45612:44,45613:45,45614:46,45615:47,45616:48,45617:49,45618:50,45619:51,45620:52,45621:53,45622:54,45623:55,45624:56,45625:57,45626:58,45627:59,45628:60,45629:61,45630:62,45631:63,45632:64,45633:1,45634:2,45635:3,45636:4,45637:5,45638:6,45639:7,45640:8,45641:9,45642:10,45643:11,45644:12,45645:13,45646:14,45647:15,45648:16,45649:17,45650:18,45651:19,45652:20,45653:21,45654:22,45655:23,45656:24,45657:25,45658:26,45659:27,45660:28,45661:29,45662:30,45663:31,45664:32,45825:1,45826:2,45827:3,45828:4,45829:5,45830:6,45831:7,45832:8,45833:9,45834:10,45835:11,45836:12,45837:13,45838:14,45839:15,45840:16,45841:17,45842:18,45843:19,45844:20,45845:21,45846:22,45847:23,45848:24,45849:25,45850:26,45851:27,45852:28,45853:29,45854:30,45855:31,45856:32,45857:1,45858:2,45859:3,45860:4,45861:5,45862:6,45863:7,45864:8,45865:9,45866:10,45867:11,45868:12,45869:13,45870:14,45871:15,45872:16,45873:17,45874:18,45875:19,45876:20,45877:21,45878:22,45879:23,45880:24,45881:25,45882:26,45883:27,45884:28,45885:29,45886:30,45887:31,45888:32,45889:33,45890:34,45891:35,45892:36,45893:37,45894:38,45895:39,45896:40,45897:41,45898:42,45899:43,45900:44,45901:45,45902:46,45903:47,45904:48,45905:49,45906:50,45907:51,45908:52,45909:53,45910:54,45911:55,45912:56,45913:57,45914:58,45915:59,45916:60,45917:61,45918:62,45919:63,45920:64,45921:1,45922:2,45923:3,45924:4,45925:5,45926:6,45927:7,45928:8,45929:9,45930:10,45931:11,45932:12,45933:13,45934:14,45935:15,45936:16,45937:17,45938:18,45939:19,45940:20,45941:21,45942:22,45943:23,45944:24,45945:25,45946:26,45947:27,45948:28,45949:29,45950:30,45951:31,45952:32,45953:33,45954:34,45955:35,45956:36,45957:37,45958:38,45959:39,45960:40,45961:41,45962:42,45963:43,45964:44,45965:45,45966:46,45967:47,45968:48,45969:49,45970:50,45971:51,45972:52,45973:53,45974:54,45975:55,45976:56,45977:57,45978:58,45979:59,45980:60,45981:61,45982:62,45983:63,45984:64,45985:65,45986:66,45987:67,45988:68,45989:69,45990:70,45991:71,45992:72,45993:73,45994:74,45995:75,45996:76,45997:77,45998:78,45999:79,46e3:80,46001:81,46002:82,46003:83,46004:84,46005:85,46006:86,46007:87,46008:88,46009:89,46010:90,46011:91,46012:92,46013:93,46014:94,46015:95,46016:96,46017:97,46018:98,46019:99,46020:100,46021:101,46022:102,46023:103,46024:104,46025:105,46026:106,46027:107,46028:108,46029:109,46030:110,46031:111,46032:112,46033:113,46034:114,46035:115,46036:116,46037:117,46038:118,46039:119,46040:120,46041:121,46042:122,46043:123,46044:124,46045:125,46046:126,46047:127,46048:128})},function(e,n){e.exports=function e(n,i,a){i=i||[];var o=a=a||0;for(;n>=t;)i[a++]=255&n|128,n/=128;for(;-128&n;)i[a++]=255&n|128,n>>>=7;return i[a]=0|n,e.bytes=a-o+1,i};var t=Math.pow(2,31)},function(e,n){e.exports=function e(n,t){var i,a=0,o=0,r=t=t||0,s=n.length;do{if(r>=s)throw e.bytes=0,new RangeError("Could not decode varint");i=n[r++],a+=o<28?(127&i)<<o:(127&i)*Math.pow(2,o),o+=7}while(i>=128);return e.bytes=r-t,a}},function(e,n){var t=Math.pow(2,7),i=Math.pow(2,14),a=Math.pow(2,21),o=Math.pow(2,28),r=Math.pow(2,35),s=Math.pow(2,42),c=Math.pow(2,49),p=Math.pow(2,56),u=Math.pow(2,63);e.exports=function(e){return e<t?1:e<i?2:e<a?3:e<o?4:e<r?5:e<s?6:e<c?7:e<p?8:e<u?9:10}},function(e,n,t){"use strict";const i=t(419),a=t(184),o=t(420),r=t(421),s=t(422),c=[["base1","1","","1"],["base2","0",a,"01"],["base8","7",a,"01234567"],["base10","9",a,"0123456789"],["base16","f",o,"0123456789abcdef"],["base32","b",r,"abcdefghijklmnopqrstuvwxyz234567"],["base32pad","c",r,"abcdefghijklmnopqrstuvwxyz234567="],["base32hex","v",r,"0123456789abcdefghijklmnopqrstuv"],["base32hexpad","t",r,"0123456789abcdefghijklmnopqrstuv="],["base32z","h",r,"ybndrfg8ejkmcpqxot1uwisza345h769"],["base58flickr","Z",a,"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"],["base58btc","z",a,"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"],["base64","m",s,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"],["base64pad","M",s,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="],["base64url","u",s,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"],["base64urlpad","U",s,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_="]],p=c.reduce((e,n)=>(e[n[0]]=new i(n[0],n[1],n[2],n[3]),e),{}),u=c.reduce((e,n)=>(e[n[1]]=p[n[0]],e),{});e.exports={names:p,codes:u}},function(e,n,t){"use strict";e.exports=class{constructor(e,n,t,i){this.name=e,this.code=n,this.alphabet=i,t&&i&&(this.engine=t(i))}encode(e){return this.engine.encode(e)}decode(e){return this.engine.decode(e)}isImplemented(){return this.engine}}},function(e,n,t){"use strict";e.exports=function(e){return{encode:e=>"string"==typeof e?Buffer.from(e).toString("hex"):e.toString("hex"),decode(n){for(let t of n)if(e.indexOf(t)<0)throw new Error("invalid base16 character");return Buffer.from(n,"hex")}}}},function(e,n,t){"use strict";function i(e,n){let t=e.byteLength,i=new Uint8Array(e),a=n.indexOf("=")===n.length-1;a&&(n=n.substring(0,n.length-2));let o=0,r=0,s="";for(let e=0;e<t;e++)for(r=r<<8|i[e],o+=8;o>=5;)s+=n[r>>>o-5&31],o-=5;if(o>0&&(s+=n[r<<5-o&31]),a)for(;s.length%8!=0;)s+="=";return s}e.exports=function(e){return{encode:n=>i("string"==typeof n?Buffer.from(n):n,e),decode(n){for(let t of n)if(e.indexOf(t)<0)throw new Error("invalid base32 character");return function(e,n){let t=(e=e.replace(new RegExp("=","g"),"")).length,i=0,a=0,o=0,r=new Uint8Array(5*t/8|0);for(let s=0;s<t;s++)a=a<<5|n.indexOf(e[s]),i+=5,i>=8&&(r[o++]=a>>>i-8&255,i-=8);return r.buffer}(n,e)}}}},function(e,n,t){"use strict";e.exports=function(e){const n=e.indexOf("=")>-1,t=e.indexOf("-")>-1&&e.indexOf("_")>-1;return{encode(e){let i="";i="string"==typeof e?Buffer.from(e).toString("base64"):e.toString("base64"),t&&(i=i.replace(/\+/g,"-").replace(/\//g,"_"));const a=i.indexOf("=");return a>0&&!n&&(i=i.substring(0,a)),i},decode(n){for(let t of n)if(e.indexOf(t)<0)throw new Error("invalid base64 character");return Buffer.from(n,"base64")}}}},function(e,n,t){"use strict";const i=t(424),a=t(128),o=t(57);function r(e){const n=[],t=e.split("/").slice(1);if(1===t.length&&""===t[0])return[];for(let i=0;i<t.length;i++){const o=t[i],r=a(o);if(0!==r.size){if(i++,i>=t.length)throw x("invalid address: "+e);if(r.path){n.push([o,v(t.slice(i).join("/"))]);break}n.push([o,t[i]])}else n.push([o])}return n}function s(e){const n=[];return e.map(e=>{const t=b(e);n.push(t.name),e.length>1&&n.push(e[1])}),v(n.join("/"))}function c(e){return e.map(e=>{Array.isArray(e)||(e=[e]);const n=b(e);return e.length>1?[n.code,i.toBuffer(n.code,e[1])]:[n.code]})}function p(e){return e.map(e=>{const n=b(e);return e.length>1?[n.code,i.toString(n.code,e[1])]:[n.code]})}function u(e){return m(Buffer.concat(e.map(e=>{const n=b(e);let t=Buffer.from(o.encode(n.code));return e.length>1&&(t=Buffer.concat([t,e[1]])),t})))}function l(e,n){if(e.size>0)return e.size/8;if(0===e.size)return 0;return o.decode(n)+o.decode.bytes}function f(e){const n=[];let t=0;for(;t<e.length;){const i=o.decode(e,t),r=o.decode.bytes,s=l(a(i),e.slice(t+r));if(0===s){n.push([i]),t+=r;continue}const c=e.slice(t+r,t+r+s);if(t+=s+r,t>e.length)throw x("Invalid address buffer: "+e.toString("hex"));n.push([i,c])}return n}function d(e){return u(c(r(e=v(e))))}function m(e){const n=h(e);if(n)throw n;return Buffer.from(e)}function h(e){try{f(e)}catch(e){return e}}function v(e){return"/"+e.trim().split("/").filter(e=>e).join("/")}function x(e){return new Error("Error parsing address: "+e)}function b(e){return a(e[0])}e.exports={stringToStringTuples:r,stringTuplesToString:s,tuplesToStringTuples:p,stringTuplesToTuples:c,bufferToTuples:f,tuplesToBuffer:u,bufferToString:function(e){return s(p(f(e)))},stringToBuffer:d,fromString:function(e){return d(e)},fromBuffer:m,validateBuffer:h,isValidBuffer:function(e){return void 0===h(e)},cleanPath:v,ParseError:x,protoFromTuple:b,sizeForAddr:l}},function(e,n,t){"use strict";const i=t(425),a=t(426),o=t(128),r=t(83),s=t(129),c=t(434),p=t(57);function u(e,n){return n instanceof Buffer?u.toString(e,n):u.toBuffer(e,n)}function l(e){if(!a(e))throw new Error("invalid ip address");return i.toBuffer(e)}function f(e){const n=Buffer.alloc(2);return n.writeUInt16BE(e,0),n}function d(e){return e.readUInt16BE(0)}function m(e){const n=e.slice(0,e.length-2),t=e.slice(e.length-2);return c.encode(n).toLowerCase()+":"+d(t)}e.exports=u,u.toString=function(e,n){switch((e=o(e)).code){case 4:case 41:return function(e){const n=i.toString(e);if(!a(n))throw new Error("invalid ip address");return n}(n);case 6:case 273:case 33:case 132:return d(n);case 53:case 54:case 55:case 56:case 400:return function(e){const n=p.decode(e);if((e=e.slice(p.decode.bytes)).length!==n)throw new Error("inconsistent lengths");return e.toString()}(n);case 421:return function(e){const n=p.decode(e),t=e.slice(p.decode.bytes);if(t.length!==n)throw new Error("inconsistent lengths");return r.encode(t)}(n);case 444:case 445:return m(n);default:return n.toString("hex")}},u.toBuffer=function(e,n){switch((e=o(e)).code){case 4:case 41:return l(n);case 6:case 273:case 33:case 132:return f(parseInt(n,10));case 53:case 54:case 55:case 56:case 400:return function(e){const n=Buffer.from(e),t=Buffer.from(p.encode(n.length));return Buffer.concat([t,n])}(n);case 421:return function(e){const n=new s(e).multihash,t=Buffer.from(p.encode(n.length));return Buffer.concat([t,n])}(n);case 444:return function(e){const n=e.split(":");if(2!==n.length)throw new Error("failed to parse onion addr: "+n+" does not contain a port number");if(16!==n[0].length)throw new Error("failed to parse onion addr: "+n[0]+" not a Tor onion address.");const t=Buffer.from(c.decode.asBytes(n[0].toUpperCase())),i=parseInt(n[1],10);if(i<1||i>65536)throw new Error("Port number is not in range(1, 65536)");const a=f(i);return Buffer.concat([t,a])}(n);case 445:return function(e){const n=e.split(":");if(2!==n.length)throw new Error("failed to parse onion addr: "+n+" does not contain a port number");if(56!==n[0].length)throw new Error("failed to parse onion addr: "+n[0]+" not a Tor onion3 address.");const t=Buffer.from(c.decode.asBytes(n[0].toUpperCase())),i=parseInt(n[1],10);if(i<1||i>65536)throw new Error("Port number is not in range(1, 65536)");const a=f(i);return Buffer.concat([t,a])}(n);default:return Buffer.from(n,"hex")}}},function(e,n,t){"use strict";var i=n,a=t(185).Buffer,o=t(181);i.toBuffer=function(e,n,t){var i;if(t=~~t,this.isV4Format(e))i=n||new a(t+4),e.split(/\./g).map((function(e){i[t++]=255&parseInt(e,10)}));else if(this.isV6Format(e)){var o,r=e.split(":",8);for(o=0;o<r.length;o++){var s;this.isV4Format(r[o])&&(s=this.toBuffer(r[o]),r[o]=s.slice(0,2).toString("hex")),s&&++o<8&&r.splice(o,0,s.slice(2,4).toString("hex"))}if(""===r[0])for(;r.length<8;)r.unshift("0");else if(""===r[r.length-1])for(;r.length<8;)r.push("0");else if(r.length<8){for(o=0;o<r.length&&""!==r[o];o++);var c=[o,1];for(o=9-r.length;o>0;o--)c.push("0");r.splice.apply(r,c)}for(i=n||new a(t+16),o=0;o<r.length;o++){var p=parseInt(r[o],16);i[t++]=p>>8&255,i[t++]=255&p}}if(!i)throw Error("Invalid ip address: "+e);return i},i.toString=function(e,n,t){n=~~n;var i=[];if(4===(t=t||e.length-n)){for(var a=0;a<t;a++)i.push(e[n+a]);i=i.join(".")}else if(16===t){for(a=0;a<t;a+=2)i.push(e.readUInt16BE(n+a).toString(16));i=(i=(i=i.join(":")).replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3")).replace(/:{3,4}/,"::")}return i};var r=/^(\d{1,3}\.){3,3}\d{1,3}$/,s=/^(::)?(((\d{1,3}\.){3}(\d{1,3}){1})?([0-9a-f]){0,4}:{0,2}){1,8}(::)?$/i;function c(e){return e?e.toLowerCase():"ipv4"}i.isV4Format=function(e){return r.test(e)},i.isV6Format=function(e){return s.test(e)},i.fromPrefixLen=function(e,n){var t=4;"ipv6"===(n=e>32?"ipv6":c(n))&&(t=16);for(var o=new a(t),r=0,s=o.length;r<s;++r){var p=8;e<8&&(p=e),e-=p,o[r]=255&~(255>>p)}return i.toString(o)},i.mask=function(e,n){e=i.toBuffer(e),n=i.toBuffer(n);var t=new a(Math.max(e.length,n.length)),o=0;if(e.length===n.length)for(o=0;o<e.length;o++)t[o]=e[o]&n[o];else if(4===n.length)for(o=0;o<n.length;o++)t[o]=e[e.length-4+o]&n[o];else{for(o=0;o<t.length-6;o++)t[o]=0;for(t[10]=255,t[11]=255,o=0;o<e.length;o++)t[o+12]=e[o]&n[o+12];o+=12}for(;o<t.length;o++)t[o]=0;return i.toString(t)},i.cidr=function(e){var n=e.split("/"),t=n[0];if(2!==n.length)throw new Error("invalid CIDR subnet: "+t);var a=i.fromPrefixLen(parseInt(n[1],10));return i.mask(t,a)},i.subnet=function(e,n){for(var t=i.toLong(i.mask(e,n)),a=i.toBuffer(n),o=0,r=0;r<a.length;r++)if(255===a[r])o+=8;else for(var s=255&a[r];s;)s=s<<1&255,o++;var c=Math.pow(2,32-o);return{networkAddress:i.fromLong(t),firstAddress:c<=2?i.fromLong(t):i.fromLong(t+1),lastAddress:c<=2?i.fromLong(t+c-1):i.fromLong(t+c-2),broadcastAddress:i.fromLong(t+c-1),subnetMask:n,subnetMaskLength:o,numHosts:c<=2?c:c-2,length:c,contains:function(e){return t===i.toLong(i.mask(e,n))}}},i.cidrSubnet=function(e){var n=e.split("/"),t=n[0];if(2!==n.length)throw new Error("invalid CIDR subnet: "+t);var a=i.fromPrefixLen(parseInt(n[1],10));return i.subnet(t,a)},i.not=function(e){for(var n=i.toBuffer(e),t=0;t<n.length;t++)n[t]=255^n[t];return i.toString(n)},i.or=function(e,n){if(e=i.toBuffer(e),n=i.toBuffer(n),e.length===n.length){for(var t=0;t<e.length;++t)e[t]|=n[t];return i.toString(e)}var a=e,o=n;n.length>e.length&&(a=n,o=e);var r=a.length-o.length;for(t=r;t<a.length;++t)a[t]|=o[t-r];return i.toString(a)},i.isEqual=function(e,n){if(e=i.toBuffer(e),n=i.toBuffer(n),e.length===n.length){for(var t=0;t<e.length;t++)if(e[t]!==n[t])return!1;return!0}if(4===n.length){var a=n;n=e,e=a}for(t=0;t<10;t++)if(0!==n[t])return!1;var o=n.readUInt16BE(10);if(0!==o&&65535!==o)return!1;for(t=0;t<4;t++)if(e[t]!==n[t+12])return!1;return!0},i.isPrivate=function(e){return/^(::f{4}:)?10\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(e)||/^(::f{4}:)?192\.168\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(e)||/^(::f{4}:)?172\.(1[6-9]|2\d|30|31)\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(e)||/^(::f{4}:)?127\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(e)||/^(::f{4}:)?169\.254\.([0-9]{1,3})\.([0-9]{1,3})$/i.test(e)||/^f[cd][0-9a-f]{2}:/i.test(e)||/^fe80:/i.test(e)||/^::1$/.test(e)||/^::$/.test(e)},i.isPublic=function(e){return!i.isPrivate(e)},i.isLoopback=function(e){return/^(::f{4}:)?127\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})/.test(e)||/^fe80::1$/.test(e)||/^::1$/.test(e)||/^::$/.test(e)},i.loopback=function(e){if("ipv4"!==(e=c(e))&&"ipv6"!==e)throw new Error("family must be ipv4 or ipv6");return"ipv4"===e?"127.0.0.1":"fe80::1"},i.address=function(e,n){var t,a=o.networkInterfaces();if(n=c(n),e&&"private"!==e&&"public"!==e){var r=a[e].filter((function(e){return e.family.toLowerCase()===n}));if(0===r.length)return;return r[0].address}return(t=Object.keys(a).map((function(t){var o=a[t].filter((function(t){return t.family=t.family.toLowerCase(),t.family===n&&!i.isLoopback(t.address)&&(!e||("public"===e?i.isPrivate(t.address):i.isPublic(t.address)))}));return o.length?o[0].address:void 0})).filter(Boolean)).length?t[0]:i.loopback(n)},i.toLong=function(e){var n=0;return e.split(".").forEach((function(e){n<<=8,n+=parseInt(e)})),n>>>0},i.fromLong=function(e){return(e>>>24)+"."+(e>>16&255)+"."+(e>>8&255)+"."+(255&e)}},function(e,n,t){"use strict";const i=t(427),a=e=>i({exact:!0}).test(e);a.v4=e=>i.v4({exact:!0}).test(e),a.v6=e=>i.v6({exact:!0}).test(e),a.version=e=>a(e)?a.v4(e)?4:6:void 0,e.exports=a},function(e,n,t){"use strict";const i=e=>e&&e.includeBoundaries?"(?:(?<=\\s|^)(?=[a-fA-F\\d:])|(?<=[a-fA-F\\d:])(?=\\s|$))":"",a="(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}",o="[a-fA-F\\d]{1,4}",r=`\n(\n(?:${o}:){7}(?:${o}|:)|                                // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${o}:){6}(?:${a}|:${o}|:)|                         // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${o}:){5}(?::${a}|(:${o}){1,2}|:)|                 // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${o}:){4}(?:(:${o}){0,1}:${a}|(:${o}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${o}:){3}(?:(:${o}){0,2}:${a}|(:${o}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${o}:){2}(?:(:${o}){0,3}:${a}|(:${o}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${o}:){1}(?:(:${o}){0,4}:${a}|(:${o}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::((?::${o}){0,5}:${a}|(?::${o}){1,7}|:))           // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(%[0-9a-zA-Z]{1,})?                                           // %eth0            %1\n`.replace(/\s*\/\/.*$/gm,"").replace(/\n/g,"").trim(),s=e=>e&&e.exact?new RegExp(`(?:^${a}$)|(?:^${r}$)`):new RegExp(`(?:${i(e)}${a}${i(e)})|(?:${i(e)}${r}${i(e)})`,"g");s.v4=e=>e&&e.exact?new RegExp(`^${a}$`):new RegExp(`${i(e)}${a}${i(e)}`,"g"),s.v6=e=>e&&e.exact?new RegExp(`^${r}$`):new RegExp(`${i(e)}${r}${i(e)}`,"g"),e.exports=s},function(e,n,t){"use strict";const i=t(57),a=t(429),o=t(430),r=t(188);(n=e.exports).addPrefix=(e,n)=>{let t;if(Buffer.isBuffer(e))t=r.varintBufferEncode(e);else{if(!o[e])throw new Error("multicodec not recognized");t=o[e]}return Buffer.concat([t,n])},n.rmPrefix=e=>(i.decode(e),e.slice(i.decode.bytes)),n.getCodec=e=>{const n=i.decode(e),t=a.get(n);if(void 0===t)throw new Error(`Code ${n} not found`);return t},n.getName=e=>a.get(e),n.getNumber=e=>{const n=o[e];if(void 0===n)throw new Error("Codec `"+e+"` not found");return r.varintBufferDecode(n)[0]},n.getCode=e=>i.decode(e),n.getCodeVarint=e=>{const n=o[e];if(void 0===n)throw new Error("Codec `"+e+"` not found");return n},n.getVarint=e=>i.encode(e);const s=t(431);Object.assign(n,s),n.print=t(432)},function(e,n,t){"use strict";const i=t(64),a=new Map;for(const e in i){const n=i[e];a.set(n,e)}e.exports=Object.freeze(a)},function(e,n,t){"use strict";const i=t(64),a=t(188).varintEncode,o={};for(const e in i){const n=i[e];o[e]=a(n)}e.exports=Object.freeze(o)},function(e,n,t){"use strict";const i=t(64),a={};for(const[e,n]of Object.entries(i))a[e.toUpperCase().replace(/-/g,"_")]=n;e.exports=Object.freeze(a)},function(e,n,t){"use strict";const i=t(64),a={};for(const[e,n]of Object.entries(i))void 0===a[n]&&(a[n]=e);e.exports=Object.freeze(a)},function(e,n,t){"use strict";const i=t(127);var a={checkCIDComponents:function(e){if(null==e)return"null values are not valid CIDs";if(0!==e.version&&1!==e.version)return"Invalid version, must be a number equal to 1 or 0";if("string"!=typeof e.codec)return"codec must be string";if(0===e.version){if("dag-pb"!==e.codec)return"codec must be 'dag-pb' for CIDv0";if("base58btc"!==e.multibaseName)return"multibaseName must be 'base58btc' for CIDv0"}if(!Buffer.isBuffer(e.multihash))return"multihash must be a Buffer";try{i.validate(e.multihash)}catch(e){let n=e.message;return n||(n="Multihash validation failed"),n}}};e.exports=a},function(e,n,t){var i;
/*
 * [hi-base32]{@link https://github.com/emn178/hi-base32}
 *
 * @version 0.5.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2018
 * @license MIT
 */!function(){"use strict";var n="object"==typeof window?window:{};!n.HI_BASE32_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node&&(n=global);var a=!n.HI_BASE32_NO_COMMON_JS&&"object"==typeof e&&e.exports,o=t(435),r="ABCDEFGHIJKLMNOPQRSTUVWXYZ234567".split(""),s={A:0,B:1,C:2,D:3,E:4,F:5,G:6,H:7,I:8,J:9,K:10,L:11,M:12,N:13,O:14,P:15,Q:16,R:17,S:18,T:19,U:20,V:21,W:22,X:23,Y:24,Z:25,2:26,3:27,4:28,5:29,6:30,7:31},c=[0,0,0,0,0,0,0,0],p=function(e,n){n.length>10&&(n="..."+n.substr(-10));var t=new Error("Decoded data is not valid UTF-8. Maybe try base32.decode.asBytes()? Partial data after reading "+e+" bytes: "+n+" <-");throw t.position=e,t},u=function(e){if(!/^[A-Z2-7=]+$/.test(e))throw new Error("Invalid base32 characters");for(var n,t,i,a,o,r,c,p,u=[],l=0,f=(e=e.replace(/=/g,"")).length,d=0,m=f>>3<<3;d<m;)n=s[e.charAt(d++)],t=s[e.charAt(d++)],i=s[e.charAt(d++)],a=s[e.charAt(d++)],o=s[e.charAt(d++)],r=s[e.charAt(d++)],c=s[e.charAt(d++)],p=s[e.charAt(d++)],u[l++]=255&(n<<3|t>>>2),u[l++]=255&(t<<6|i<<1|a>>>4),u[l++]=255&(a<<4|o>>>1),u[l++]=255&(o<<7|r<<2|c>>>3),u[l++]=255&(c<<5|p);var h=f-m;return 2===h?(n=s[e.charAt(d++)],t=s[e.charAt(d++)],u[l++]=255&(n<<3|t>>>2)):4===h?(n=s[e.charAt(d++)],t=s[e.charAt(d++)],i=s[e.charAt(d++)],a=s[e.charAt(d++)],u[l++]=255&(n<<3|t>>>2),u[l++]=255&(t<<6|i<<1|a>>>4)):5===h?(n=s[e.charAt(d++)],t=s[e.charAt(d++)],i=s[e.charAt(d++)],a=s[e.charAt(d++)],o=s[e.charAt(d++)],u[l++]=255&(n<<3|t>>>2),u[l++]=255&(t<<6|i<<1|a>>>4),u[l++]=255&(a<<4|o>>>1)):7===h&&(n=s[e.charAt(d++)],t=s[e.charAt(d++)],i=s[e.charAt(d++)],a=s[e.charAt(d++)],o=s[e.charAt(d++)],r=s[e.charAt(d++)],c=s[e.charAt(d++)],u[l++]=255&(n<<3|t>>>2),u[l++]=255&(t<<6|i<<1|a>>>4),u[l++]=255&(a<<4|o>>>1),u[l++]=255&(o<<7|r<<2|c>>>3)),u},l=function(e,n){if(!n)return function(e){for(var n,t,i="",a=e.length,o=0,r=0;o<a;)if((n=e[o++])<=127)i+=String.fromCharCode(n);else{n>191&&n<=223?(t=31&n,r=1):n<=239?(t=15&n,r=2):n<=247?(t=7&n,r=3):p(o,i);for(var s=0;s<r;++s)((n=e[o++])<128||n>191)&&p(o,i),t<<=6,t+=63&n;t>=55296&&t<=57343&&p(o,i),t>1114111&&p(o,i),t<=65535?i+=String.fromCharCode(t):(t-=65536,i+=String.fromCharCode(55296+(t>>10)),i+=String.fromCharCode(56320+(1023&t)))}return i}(u(e));if(!/^[A-Z2-7=]+$/.test(e))throw new Error("Invalid base32 characters");var t,i,a,o,r,c,l,f,d="",m=e.indexOf("=");-1===m&&(m=e.length);for(var h=0,v=m>>3<<3;h<v;)t=s[e.charAt(h++)],i=s[e.charAt(h++)],a=s[e.charAt(h++)],o=s[e.charAt(h++)],r=s[e.charAt(h++)],c=s[e.charAt(h++)],l=s[e.charAt(h++)],f=s[e.charAt(h++)],d+=String.fromCharCode(255&(t<<3|i>>>2))+String.fromCharCode(255&(i<<6|a<<1|o>>>4))+String.fromCharCode(255&(o<<4|r>>>1))+String.fromCharCode(255&(r<<7|c<<2|l>>>3))+String.fromCharCode(255&(l<<5|f));var x=m-v;return 2===x?(t=s[e.charAt(h++)],i=s[e.charAt(h++)],d+=String.fromCharCode(255&(t<<3|i>>>2))):4===x?(t=s[e.charAt(h++)],i=s[e.charAt(h++)],a=s[e.charAt(h++)],o=s[e.charAt(h++)],d+=String.fromCharCode(255&(t<<3|i>>>2))+String.fromCharCode(255&(i<<6|a<<1|o>>>4))):5===x?(t=s[e.charAt(h++)],i=s[e.charAt(h++)],a=s[e.charAt(h++)],o=s[e.charAt(h++)],r=s[e.charAt(h++)],d+=String.fromCharCode(255&(t<<3|i>>>2))+String.fromCharCode(255&(i<<6|a<<1|o>>>4))+String.fromCharCode(255&(o<<4|r>>>1))):7===x&&(t=s[e.charAt(h++)],i=s[e.charAt(h++)],a=s[e.charAt(h++)],o=s[e.charAt(h++)],r=s[e.charAt(h++)],c=s[e.charAt(h++)],l=s[e.charAt(h++)],d+=String.fromCharCode(255&(t<<3|i>>>2))+String.fromCharCode(255&(i<<6|a<<1|o>>>4))+String.fromCharCode(255&(o<<4|r>>>1))+String.fromCharCode(255&(r<<7|c<<2|l>>>3))),d},f={encode:function(e,n){var t="string"!=typeof e;return t&&e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),t?function(e){for(var n,t,i,a,o,s="",c=e.length,p=0,u=5*parseInt(c/5);p<u;)n=e[p++],t=e[p++],i=e[p++],a=e[p++],o=e[p++],s+=r[n>>>3]+r[31&(n<<2|t>>>6)]+r[t>>>1&31]+r[31&(t<<4|i>>>4)]+r[31&(i<<1|a>>>7)]+r[a>>>2&31]+r[31&(a<<3|o>>>5)]+r[31&o];var l=c-u;return 1===l?(n=e[p],s+=r[n>>>3]+r[n<<2&31]+"======"):2===l?(n=e[p++],t=e[p],s+=r[n>>>3]+r[31&(n<<2|t>>>6)]+r[t>>>1&31]+r[t<<4&31]+"===="):3===l?(n=e[p++],t=e[p++],i=e[p],s+=r[n>>>3]+r[31&(n<<2|t>>>6)]+r[t>>>1&31]+r[31&(t<<4|i>>>4)]+r[i<<1&31]+"==="):4===l&&(n=e[p++],t=e[p++],i=e[p++],a=e[p],s+=r[n>>>3]+r[31&(n<<2|t>>>6)]+r[t>>>1&31]+r[31&(t<<4|i>>>4)]+r[31&(i<<1|a>>>7)]+r[a>>>2&31]+r[a<<3&31]+"="),s}(e):n?function(e){for(var n,t,i,a,o,s="",c=e.length,p=0,u=5*parseInt(c/5);p<u;)n=e.charCodeAt(p++),t=e.charCodeAt(p++),i=e.charCodeAt(p++),a=e.charCodeAt(p++),o=e.charCodeAt(p++),s+=r[n>>>3]+r[31&(n<<2|t>>>6)]+r[t>>>1&31]+r[31&(t<<4|i>>>4)]+r[31&(i<<1|a>>>7)]+r[a>>>2&31]+r[31&(a<<3|o>>>5)]+r[31&o];var l=c-u;return 1===l?(n=e.charCodeAt(p),s+=r[n>>>3]+r[n<<2&31]+"======"):2===l?(n=e.charCodeAt(p++),t=e.charCodeAt(p),s+=r[n>>>3]+r[31&(n<<2|t>>>6)]+r[t>>>1&31]+r[t<<4&31]+"===="):3===l?(n=e.charCodeAt(p++),t=e.charCodeAt(p++),i=e.charCodeAt(p),s+=r[n>>>3]+r[31&(n<<2|t>>>6)]+r[t>>>1&31]+r[31&(t<<4|i>>>4)]+r[i<<1&31]+"==="):4===l&&(n=e.charCodeAt(p++),t=e.charCodeAt(p++),i=e.charCodeAt(p++),a=e.charCodeAt(p),s+=r[n>>>3]+r[31&(n<<2|t>>>6)]+r[t>>>1&31]+r[31&(t<<4|i>>>4)]+r[31&(i<<1|a>>>7)]+r[a>>>2&31]+r[a<<3&31]+"="),s}(e):function(e){var n,t,i,a,o,s,p,u=!1,l="",f=0,d=0,m=e.length;do{for(c[0]=c[5],c[1]=c[6],c[2]=c[7],p=d;f<m&&p<5;++f)(s=e.charCodeAt(f))<128?c[p++]=s:s<2048?(c[p++]=192|s>>6,c[p++]=128|63&s):s<55296||s>=57344?(c[p++]=224|s>>12,c[p++]=128|s>>6&63,c[p++]=128|63&s):(s=65536+((1023&s)<<10|1023&e.charCodeAt(++f)),c[p++]=240|s>>18,c[p++]=128|s>>12&63,c[p++]=128|s>>6&63,c[p++]=128|63&s);p-d,d=p-5,f===m&&++f,f>m&&p<6&&(u=!0),n=c[0],p>4?(t=c[1],i=c[2],a=c[3],o=c[4],l+=r[n>>>3]+r[31&(n<<2|t>>>6)]+r[t>>>1&31]+r[31&(t<<4|i>>>4)]+r[31&(i<<1|a>>>7)]+r[a>>>2&31]+r[31&(a<<3|o>>>5)]+r[31&o]):1===p?l+=r[n>>>3]+r[n<<2&31]+"======":2===p?(t=c[1],l+=r[n>>>3]+r[31&(n<<2|t>>>6)]+r[t>>>1&31]+r[t<<4&31]+"===="):3===p?(t=c[1],i=c[2],l+=r[n>>>3]+r[31&(n<<2|t>>>6)]+r[t>>>1&31]+r[31&(t<<4|i>>>4)]+r[i<<1&31]+"==="):(t=c[1],i=c[2],a=c[3],l+=r[n>>>3]+r[31&(n<<2|t>>>6)]+r[t>>>1&31]+r[31&(t<<4|i>>>4)]+r[31&(i<<1|a>>>7)]+r[a>>>2&31]+r[a<<3&31]+"=")}while(!u);return l}(e)},decode:l};l.asBytes=u,a?e.exports=f:(n.base32=f,o&&(void 0===(i=function(){return f}.call(f,t,f,e))||(e.exports=i)))}()},function(e,n){(function(n){e.exports=n}).call(this,{})},function(e,n,t){"use strict";const i=t(187),a=C("dns4"),o=C("dns6"),r=O(C("dns"),C("dnsaddr"),a,o),s=O(C("ip4"),C("ip6")),c=O(E(s,C("tcp")),E(r,C("tcp"))),p=E(s,C("udp")),u=E(p,C("utp")),l=O(E(c,C("ws")),E(r,C("ws"))),f=O(E(c,C("wss")),E(r,C("wss"))),d=O(E(c,C("http")),E(s,C("http")),E(r,C("http"))),m=O(E(c,C("https")),E(s,C("https")),E(r,C("https"))),h=O(E(l,C("p2p-webrtc-star"),C("p2p")),E(f,C("p2p-webrtc-star"),C("p2p")),E(l,C("p2p-webrtc-star")),E(f,C("p2p-webrtc-star"))),v=O(E(l,C("p2p-websocket-star"),C("p2p")),E(f,C("p2p-websocket-star"),C("p2p")),E(l,C("p2p-websocket-star")),E(f,C("p2p-websocket-star"))),x=O(E(d,C("p2p-webrtc-direct")),E(m,C("p2p-webrtc-direct"))),b=O(l,f,d,m,h,x,c,u),g=O(E(b,C("p2p-stardust"),C("p2p")),E(b,C("p2p-stardust"))),k=O(E(b,C("p2p")),h,C("p2p")),y=O(E(k,C("p2p-circuit"),k),E(k,C("p2p-circuit")),E(C("p2p-circuit"),k),E(b,C("p2p-circuit")),E(C("p2p-circuit"),b),C("p2p-circuit")),w=()=>O(E(y,w),y),S=w(),_=O(E(S,k,S),E(k,S),E(S,k),S,k);function j(e){return function(n){if(!i.isMultiaddr(n))try{n=i(n)}catch(e){return!1}const t=e(n.protoNames());return null!==t&&0===t.length}}function E(){const e=Array.from(arguments);function n(n){return n.length<e.length?null:(e.some(e=>{if(null===(n="function"==typeof e?e().partialMatch(n):e.partialMatch(n)))return!0}),n)}return{toString:function(){return"{ "+e.join(" ")+" }"},input:e,matches:j(n),partialMatch:n}}function O(){const e=Array.from(arguments);function n(n){let t=null;return e.some(e=>{const i="function"==typeof e?e().partialMatch(n):e.partialMatch(n);if(i)return t=i,!0}),t}const t={toString:function(){return"{ "+e.join(" ")+" }"},input:e,matches:j(n),partialMatch:n};return t}function C(e){const n=e;return{toString:function(){return n},matches:function(e){if("string"==typeof e)try{e=i(e)}catch(e){return!1}const t=e.protoNames();return 1===t.length&&t[0]===n},partialMatch:function(e){return 0===e.length?null:e[0]===n?e.slice(1):null}}}n.DNS=r,n.DNS4=a,n.DNS6=o,n.IP=s,n.TCP=c,n.UDP=p,n.UTP=u,n.HTTP=d,n.HTTPS=m,n.WebSockets=l,n.WebSocketsSecure=f,n.WebSocketStar=v,n.WebRTCStar=h,n.WebRTCDirect=x,n.Reliable=b,n.Stardust=g,n.Circuit=S,n.P2P=_,n.IPFS=_},function(e,n,t){"use strict";t(10);var i=t(12);Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n,t,i){if((0,r.validateApiKeys)(e,n),!t)throw new Error("ipfsPinHash value is required for changing the pin policy of a pin");if(!s.default.cid(t))throw new Error("ipfsPinHash value is an invalid IPFS CID");if(!i)throw new Error("no metadata object provided");(0,r.validateMetadata)(i);var p="".concat(o.baseUrl,"/pinning/hashMetadata"),u={ipfsPinHash:t};i.name&&(u.name=i.name);i.keyvalues&&(u.keyvalues=i.keyvalues);return new Promise((function(t,i){a.default.put(p,u,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&i(new Error("unknown server response while changing metadata for hash: ".concat(e))),t(e.data)})).catch((function(e){var n=(0,c.handleError)(e);i(n)}))}))},t(69),t(16),t(22);var a=i(t(33)),o=t(34),r=t(28),s=i(t(63)),c=t(35);e.exports=n.default},function(e,n,t){"use strict";t(10);var i=t(12);Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n,t,i){return(0,c.validateApiKeys)(e,n),new Promise((function(u,l){var f=new r.default;f.append("file",t);var d="".concat(o.baseUrl,"/pinning/pinFileToIPFS");t instanceof s.default.Readable||t instanceof r.default||l(new Error("readStream is not a readable stream or form data")),i&&(i.pinataMetadata&&((0,c.validateMetadata)(i.pinataMetadata),f.append("pinataMetadata",JSON.stringify(i.pinataMetadata))),i.pinataOptions&&((0,c.validatePinataOptions)(i.pinataOptions),f.append("pinataOptions",JSON.stringify(i.pinataOptions)))),a.default.post(d,t instanceof r.default?t:f,{withCredentials:!0,maxContentLength:"Infinity",maxBodyLength:"Infinity",headers:{"Content-type":"multipart/form-data; boundary= ".concat(f._boundary),pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&l(new Error("unknown server response while pinning File to IPFS: ".concat(e))),u(e.data)})).catch((function(e){var n=(0,p.handleError)(e);l(n)}))}))},t(16),t(22);var a=i(t(33)),o=t(34),r=i(t(190)),s=i(t(81)),c=t(28),p=t(35);e.exports=n.default},function(e,n,t){var i=t(82),a=t(81).Stream,o=t(440);function r(){this.writable=!1,this.readable=!0,this.dataSize=0,this.maxDataSize=2097152,this.pauseStreams=!0,this._released=!1,this._streams=[],this._currentStream=null,this._insideLoop=!1,this._pendingNext=!1}e.exports=r,i.inherits(r,a),r.create=function(e){var n=new this;for(var t in e=e||{})n[t]=e[t];return n},r.isStreamLike=function(e){return"function"!=typeof e&&"string"!=typeof e&&"boolean"!=typeof e&&"number"!=typeof e&&!Buffer.isBuffer(e)},r.prototype.append=function(e){if(r.isStreamLike(e)){if(!(e instanceof o)){var n=o.create(e,{maxDataSize:1/0,pauseStream:this.pauseStreams});e.on("data",this._checkDataSize.bind(this)),e=n}this._handleErrors(e),this.pauseStreams&&e.pause()}return this._streams.push(e),this},r.prototype.pipe=function(e,n){return a.prototype.pipe.call(this,e,n),this.resume(),e},r.prototype._getNext=function(){if(this._currentStream=null,this._insideLoop)this._pendingNext=!0;else{this._insideLoop=!0;try{do{this._pendingNext=!1,this._realGetNext()}while(this._pendingNext)}finally{this._insideLoop=!1}}},r.prototype._realGetNext=function(){var e=this._streams.shift();void 0!==e?"function"==typeof e?e(function(e){r.isStreamLike(e)&&(e.on("data",this._checkDataSize.bind(this)),this._handleErrors(e)),this._pipeNext(e)}.bind(this)):this._pipeNext(e):this.end()},r.prototype._pipeNext=function(e){if(this._currentStream=e,r.isStreamLike(e))return e.on("end",this._getNext.bind(this)),void e.pipe(this,{end:!1});var n=e;this.write(n),this._getNext()},r.prototype._handleErrors=function(e){var n=this;e.on("error",(function(e){n._emitError(e)}))},r.prototype.write=function(e){this.emit("data",e)},r.prototype.pause=function(){this.pauseStreams&&(this.pauseStreams&&this._currentStream&&"function"==typeof this._currentStream.pause&&this._currentStream.pause(),this.emit("pause"))},r.prototype.resume=function(){this._released||(this._released=!0,this.writable=!0,this._getNext()),this.pauseStreams&&this._currentStream&&"function"==typeof this._currentStream.resume&&this._currentStream.resume(),this.emit("resume")},r.prototype.end=function(){this._reset(),this.emit("end")},r.prototype.destroy=function(){this._reset(),this.emit("close")},r.prototype._reset=function(){this.writable=!1,this._streams=[],this._currentStream=null},r.prototype._checkDataSize=function(){if(this._updateDataSize(),!(this.dataSize<=this.maxDataSize)){var e="DelayedStream#maxDataSize of "+this.maxDataSize+" bytes exceeded.";this._emitError(new Error(e))}},r.prototype._updateDataSize=function(){this.dataSize=0;var e=this;this._streams.forEach((function(n){n.dataSize&&(e.dataSize+=n.dataSize)})),this._currentStream&&this._currentStream.dataSize&&(this.dataSize+=this._currentStream.dataSize)},r.prototype._emitError=function(e){this._reset(),this.emit("error",e)}},function(e,n,t){var i=t(81).Stream,a=t(82);function o(){this.source=null,this.dataSize=0,this.maxDataSize=1048576,this.pauseStream=!0,this._maxDataSizeExceeded=!1,this._released=!1,this._bufferedEvents=[]}e.exports=o,a.inherits(o,i),o.create=function(e,n){var t=new this;for(var i in n=n||{})t[i]=n[i];t.source=e;var a=e.emit;return e.emit=function(){return t._handleEmit(arguments),a.apply(e,arguments)},e.on("error",(function(){})),t.pauseStream&&e.pause(),t},Object.defineProperty(o.prototype,"readable",{configurable:!0,enumerable:!0,get:function(){return this.source.readable}}),o.prototype.setEncoding=function(){return this.source.setEncoding.apply(this.source,arguments)},o.prototype.resume=function(){this._released||this.release(),this.source.resume()},o.prototype.pause=function(){this.source.pause()},o.prototype.release=function(){this._released=!0,this._bufferedEvents.forEach(function(e){this.emit.apply(this,e)}.bind(this)),this._bufferedEvents=[]},o.prototype.pipe=function(){var e=i.prototype.pipe.apply(this,arguments);return this.resume(),e},o.prototype._handleEmit=function(e){this._released?this.emit.apply(this,e):("data"===e[0]&&(this.dataSize+=e[1].length,this._checkIfMaxDataSizeExceeded()),this._bufferedEvents.push(e))},o.prototype._checkIfMaxDataSizeExceeded=function(){if(!(this._maxDataSizeExceeded||this.dataSize<=this.maxDataSize)){this._maxDataSizeExceeded=!0;var e="DelayedStream#maxDataSize of "+this.maxDataSize+" bytes exceeded.";this.emit("error",new Error(e))}}},function(e,n,t){"use strict";
/*!
 * mime-types
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i,a,o,r=t(442),s=t(84).extname,c=/^\s*([^;\s]*)(?:;|\s|$)/,p=/^text\//i;function u(e){if(!e||"string"!=typeof e)return!1;var n=c.exec(e),t=n&&r[n[1].toLowerCase()];return t&&t.charset?t.charset:!(!n||!p.test(n[1]))&&"UTF-8"}n.charset=u,n.charsets={lookup:u},n.contentType=function(e){if(!e||"string"!=typeof e)return!1;var t=-1===e.indexOf("/")?n.lookup(e):e;if(!t)return!1;if(-1===t.indexOf("charset")){var i=n.charset(t);i&&(t+="; charset="+i.toLowerCase())}return t},n.extension=function(e){if(!e||"string"!=typeof e)return!1;var t=c.exec(e),i=t&&n.extensions[t[1].toLowerCase()];if(!i||!i.length)return!1;return i[0]},n.extensions=Object.create(null),n.lookup=function(e){if(!e||"string"!=typeof e)return!1;var t=s("x."+e).toLowerCase().substr(1);if(!t)return!1;return n.types[t]||!1},n.types=Object.create(null),i=n.extensions,a=n.types,o=["nginx","apache",void 0,"iana"],Object.keys(r).forEach((function(e){var n=r[e],t=n.extensions;if(t&&t.length){i[e]=t;for(var s=0;s<t.length;s++){var c=t[s];if(a[c]){var p=o.indexOf(r[a[c]].source),u=o.indexOf(n.source);if("application/octet-stream"!==a[c]&&(p>u||p===u&&"application/"===a[c].substr(0,12)))continue}a[c]=e}}}))},function(e,n,t){
/*!
 * mime-db
 * Copyright(c) 2014 Jonathan Ong
 * MIT Licensed
 */
e.exports=t(443)},function(e){e.exports=JSON.parse('{"application/1d-interleaved-parityfec":{"source":"iana"},"application/3gpdash-qoe-report+xml":{"source":"iana","compressible":true},"application/3gpp-ims+xml":{"source":"iana","compressible":true},"application/a2l":{"source":"iana"},"application/activemessage":{"source":"iana"},"application/activity+json":{"source":"iana","compressible":true},"application/alto-costmap+json":{"source":"iana","compressible":true},"application/alto-costmapfilter+json":{"source":"iana","compressible":true},"application/alto-directory+json":{"source":"iana","compressible":true},"application/alto-endpointcost+json":{"source":"iana","compressible":true},"application/alto-endpointcostparams+json":{"source":"iana","compressible":true},"application/alto-endpointprop+json":{"source":"iana","compressible":true},"application/alto-endpointpropparams+json":{"source":"iana","compressible":true},"application/alto-error+json":{"source":"iana","compressible":true},"application/alto-networkmap+json":{"source":"iana","compressible":true},"application/alto-networkmapfilter+json":{"source":"iana","compressible":true},"application/aml":{"source":"iana"},"application/andrew-inset":{"source":"iana","extensions":["ez"]},"application/applefile":{"source":"iana"},"application/applixware":{"source":"apache","extensions":["aw"]},"application/atf":{"source":"iana"},"application/atfx":{"source":"iana"},"application/atom+xml":{"source":"iana","compressible":true,"extensions":["atom"]},"application/atomcat+xml":{"source":"iana","compressible":true,"extensions":["atomcat"]},"application/atomdeleted+xml":{"source":"iana","compressible":true,"extensions":["atomdeleted"]},"application/atomicmail":{"source":"iana"},"application/atomsvc+xml":{"source":"iana","compressible":true,"extensions":["atomsvc"]},"application/atsc-dwd+xml":{"source":"iana","compressible":true,"extensions":["dwd"]},"application/atsc-held+xml":{"source":"iana","compressible":true,"extensions":["held"]},"application/atsc-rdt+json":{"source":"iana","compressible":true},"application/atsc-rsat+xml":{"source":"iana","compressible":true,"extensions":["rsat"]},"application/atxml":{"source":"iana"},"application/auth-policy+xml":{"source":"iana","compressible":true},"application/bacnet-xdd+zip":{"source":"iana","compressible":false},"application/batch-smtp":{"source":"iana"},"application/bdoc":{"compressible":false,"extensions":["bdoc"]},"application/beep+xml":{"source":"iana","compressible":true},"application/calendar+json":{"source":"iana","compressible":true},"application/calendar+xml":{"source":"iana","compressible":true,"extensions":["xcs"]},"application/call-completion":{"source":"iana"},"application/cals-1840":{"source":"iana"},"application/cbor":{"source":"iana"},"application/cbor-seq":{"source":"iana"},"application/cccex":{"source":"iana"},"application/ccmp+xml":{"source":"iana","compressible":true},"application/ccxml+xml":{"source":"iana","compressible":true,"extensions":["ccxml"]},"application/cdfx+xml":{"source":"iana","compressible":true,"extensions":["cdfx"]},"application/cdmi-capability":{"source":"iana","extensions":["cdmia"]},"application/cdmi-container":{"source":"iana","extensions":["cdmic"]},"application/cdmi-domain":{"source":"iana","extensions":["cdmid"]},"application/cdmi-object":{"source":"iana","extensions":["cdmio"]},"application/cdmi-queue":{"source":"iana","extensions":["cdmiq"]},"application/cdni":{"source":"iana"},"application/cea":{"source":"iana"},"application/cea-2018+xml":{"source":"iana","compressible":true},"application/cellml+xml":{"source":"iana","compressible":true},"application/cfw":{"source":"iana"},"application/clue+xml":{"source":"iana","compressible":true},"application/clue_info+xml":{"source":"iana","compressible":true},"application/cms":{"source":"iana"},"application/cnrp+xml":{"source":"iana","compressible":true},"application/coap-group+json":{"source":"iana","compressible":true},"application/coap-payload":{"source":"iana"},"application/commonground":{"source":"iana"},"application/conference-info+xml":{"source":"iana","compressible":true},"application/cose":{"source":"iana"},"application/cose-key":{"source":"iana"},"application/cose-key-set":{"source":"iana"},"application/cpl+xml":{"source":"iana","compressible":true},"application/csrattrs":{"source":"iana"},"application/csta+xml":{"source":"iana","compressible":true},"application/cstadata+xml":{"source":"iana","compressible":true},"application/csvm+json":{"source":"iana","compressible":true},"application/cu-seeme":{"source":"apache","extensions":["cu"]},"application/cwt":{"source":"iana"},"application/cybercash":{"source":"iana"},"application/dart":{"compressible":true},"application/dash+xml":{"source":"iana","compressible":true,"extensions":["mpd"]},"application/dashdelta":{"source":"iana"},"application/davmount+xml":{"source":"iana","compressible":true,"extensions":["davmount"]},"application/dca-rft":{"source":"iana"},"application/dcd":{"source":"iana"},"application/dec-dx":{"source":"iana"},"application/dialog-info+xml":{"source":"iana","compressible":true},"application/dicom":{"source":"iana"},"application/dicom+json":{"source":"iana","compressible":true},"application/dicom+xml":{"source":"iana","compressible":true},"application/dii":{"source":"iana"},"application/dit":{"source":"iana"},"application/dns":{"source":"iana"},"application/dns+json":{"source":"iana","compressible":true},"application/dns-message":{"source":"iana"},"application/docbook+xml":{"source":"apache","compressible":true,"extensions":["dbk"]},"application/dskpp+xml":{"source":"iana","compressible":true},"application/dssc+der":{"source":"iana","extensions":["dssc"]},"application/dssc+xml":{"source":"iana","compressible":true,"extensions":["xdssc"]},"application/dvcs":{"source":"iana"},"application/ecmascript":{"source":"iana","compressible":true,"extensions":["ecma","es"]},"application/edi-consent":{"source":"iana"},"application/edi-x12":{"source":"iana","compressible":false},"application/edifact":{"source":"iana","compressible":false},"application/efi":{"source":"iana"},"application/emergencycalldata.comment+xml":{"source":"iana","compressible":true},"application/emergencycalldata.control+xml":{"source":"iana","compressible":true},"application/emergencycalldata.deviceinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.ecall.msd":{"source":"iana"},"application/emergencycalldata.providerinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.serviceinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.subscriberinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.veds+xml":{"source":"iana","compressible":true},"application/emma+xml":{"source":"iana","compressible":true,"extensions":["emma"]},"application/emotionml+xml":{"source":"iana","compressible":true,"extensions":["emotionml"]},"application/encaprtp":{"source":"iana"},"application/epp+xml":{"source":"iana","compressible":true},"application/epub+zip":{"source":"iana","compressible":false,"extensions":["epub"]},"application/eshop":{"source":"iana"},"application/exi":{"source":"iana","extensions":["exi"]},"application/expect-ct-report+json":{"source":"iana","compressible":true},"application/fastinfoset":{"source":"iana"},"application/fastsoap":{"source":"iana"},"application/fdt+xml":{"source":"iana","compressible":true,"extensions":["fdt"]},"application/fhir+json":{"source":"iana","compressible":true},"application/fhir+xml":{"source":"iana","compressible":true},"application/fido.trusted-apps+json":{"compressible":true},"application/fits":{"source":"iana"},"application/flexfec":{"source":"iana"},"application/font-sfnt":{"source":"iana"},"application/font-tdpfr":{"source":"iana","extensions":["pfr"]},"application/font-woff":{"source":"iana","compressible":false},"application/framework-attributes+xml":{"source":"iana","compressible":true},"application/geo+json":{"source":"iana","compressible":true,"extensions":["geojson"]},"application/geo+json-seq":{"source":"iana"},"application/geopackage+sqlite3":{"source":"iana"},"application/geoxacml+xml":{"source":"iana","compressible":true},"application/gltf-buffer":{"source":"iana"},"application/gml+xml":{"source":"iana","compressible":true,"extensions":["gml"]},"application/gpx+xml":{"source":"apache","compressible":true,"extensions":["gpx"]},"application/gxf":{"source":"apache","extensions":["gxf"]},"application/gzip":{"source":"iana","compressible":false,"extensions":["gz"]},"application/h224":{"source":"iana"},"application/held+xml":{"source":"iana","compressible":true},"application/hjson":{"extensions":["hjson"]},"application/http":{"source":"iana"},"application/hyperstudio":{"source":"iana","extensions":["stk"]},"application/ibe-key-request+xml":{"source":"iana","compressible":true},"application/ibe-pkg-reply+xml":{"source":"iana","compressible":true},"application/ibe-pp-data":{"source":"iana"},"application/iges":{"source":"iana"},"application/im-iscomposing+xml":{"source":"iana","compressible":true},"application/index":{"source":"iana"},"application/index.cmd":{"source":"iana"},"application/index.obj":{"source":"iana"},"application/index.response":{"source":"iana"},"application/index.vnd":{"source":"iana"},"application/inkml+xml":{"source":"iana","compressible":true,"extensions":["ink","inkml"]},"application/iotp":{"source":"iana"},"application/ipfix":{"source":"iana","extensions":["ipfix"]},"application/ipp":{"source":"iana"},"application/isup":{"source":"iana"},"application/its+xml":{"source":"iana","compressible":true,"extensions":["its"]},"application/java-archive":{"source":"apache","compressible":false,"extensions":["jar","war","ear"]},"application/java-serialized-object":{"source":"apache","compressible":false,"extensions":["ser"]},"application/java-vm":{"source":"apache","compressible":false,"extensions":["class"]},"application/javascript":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["js","mjs"]},"application/jf2feed+json":{"source":"iana","compressible":true},"application/jose":{"source":"iana"},"application/jose+json":{"source":"iana","compressible":true},"application/jrd+json":{"source":"iana","compressible":true},"application/json":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["json","map"]},"application/json-patch+json":{"source":"iana","compressible":true},"application/json-seq":{"source":"iana"},"application/json5":{"extensions":["json5"]},"application/jsonml+json":{"source":"apache","compressible":true,"extensions":["jsonml"]},"application/jwk+json":{"source":"iana","compressible":true},"application/jwk-set+json":{"source":"iana","compressible":true},"application/jwt":{"source":"iana"},"application/kpml-request+xml":{"source":"iana","compressible":true},"application/kpml-response+xml":{"source":"iana","compressible":true},"application/ld+json":{"source":"iana","compressible":true,"extensions":["jsonld"]},"application/lgr+xml":{"source":"iana","compressible":true,"extensions":["lgr"]},"application/link-format":{"source":"iana"},"application/load-control+xml":{"source":"iana","compressible":true},"application/lost+xml":{"source":"iana","compressible":true,"extensions":["lostxml"]},"application/lostsync+xml":{"source":"iana","compressible":true},"application/lxf":{"source":"iana"},"application/mac-binhex40":{"source":"iana","extensions":["hqx"]},"application/mac-compactpro":{"source":"apache","extensions":["cpt"]},"application/macwriteii":{"source":"iana"},"application/mads+xml":{"source":"iana","compressible":true,"extensions":["mads"]},"application/manifest+json":{"charset":"UTF-8","compressible":true,"extensions":["webmanifest"]},"application/marc":{"source":"iana","extensions":["mrc"]},"application/marcxml+xml":{"source":"iana","compressible":true,"extensions":["mrcx"]},"application/mathematica":{"source":"iana","extensions":["ma","nb","mb"]},"application/mathml+xml":{"source":"iana","compressible":true,"extensions":["mathml"]},"application/mathml-content+xml":{"source":"iana","compressible":true},"application/mathml-presentation+xml":{"source":"iana","compressible":true},"application/mbms-associated-procedure-description+xml":{"source":"iana","compressible":true},"application/mbms-deregister+xml":{"source":"iana","compressible":true},"application/mbms-envelope+xml":{"source":"iana","compressible":true},"application/mbms-msk+xml":{"source":"iana","compressible":true},"application/mbms-msk-response+xml":{"source":"iana","compressible":true},"application/mbms-protection-description+xml":{"source":"iana","compressible":true},"application/mbms-reception-report+xml":{"source":"iana","compressible":true},"application/mbms-register+xml":{"source":"iana","compressible":true},"application/mbms-register-response+xml":{"source":"iana","compressible":true},"application/mbms-schedule+xml":{"source":"iana","compressible":true},"application/mbms-user-service-description+xml":{"source":"iana","compressible":true},"application/mbox":{"source":"iana","extensions":["mbox"]},"application/media-policy-dataset+xml":{"source":"iana","compressible":true},"application/media_control+xml":{"source":"iana","compressible":true},"application/mediaservercontrol+xml":{"source":"iana","compressible":true,"extensions":["mscml"]},"application/merge-patch+json":{"source":"iana","compressible":true},"application/metalink+xml":{"source":"apache","compressible":true,"extensions":["metalink"]},"application/metalink4+xml":{"source":"iana","compressible":true,"extensions":["meta4"]},"application/mets+xml":{"source":"iana","compressible":true,"extensions":["mets"]},"application/mf4":{"source":"iana"},"application/mikey":{"source":"iana"},"application/mipc":{"source":"iana"},"application/mmt-aei+xml":{"source":"iana","compressible":true,"extensions":["maei"]},"application/mmt-usd+xml":{"source":"iana","compressible":true,"extensions":["musd"]},"application/mods+xml":{"source":"iana","compressible":true,"extensions":["mods"]},"application/moss-keys":{"source":"iana"},"application/moss-signature":{"source":"iana"},"application/mosskey-data":{"source":"iana"},"application/mosskey-request":{"source":"iana"},"application/mp21":{"source":"iana","extensions":["m21","mp21"]},"application/mp4":{"source":"iana","extensions":["mp4s","m4p"]},"application/mpeg4-generic":{"source":"iana"},"application/mpeg4-iod":{"source":"iana"},"application/mpeg4-iod-xmt":{"source":"iana"},"application/mrb-consumer+xml":{"source":"iana","compressible":true,"extensions":["xdf"]},"application/mrb-publish+xml":{"source":"iana","compressible":true,"extensions":["xdf"]},"application/msc-ivr+xml":{"source":"iana","compressible":true},"application/msc-mixer+xml":{"source":"iana","compressible":true},"application/msword":{"source":"iana","compressible":false,"extensions":["doc","dot"]},"application/mud+json":{"source":"iana","compressible":true},"application/multipart-core":{"source":"iana"},"application/mxf":{"source":"iana","extensions":["mxf"]},"application/n-quads":{"source":"iana","extensions":["nq"]},"application/n-triples":{"source":"iana","extensions":["nt"]},"application/nasdata":{"source":"iana"},"application/news-checkgroups":{"source":"iana"},"application/news-groupinfo":{"source":"iana"},"application/news-transmission":{"source":"iana"},"application/nlsml+xml":{"source":"iana","compressible":true},"application/node":{"source":"iana"},"application/nss":{"source":"iana"},"application/ocsp-request":{"source":"iana"},"application/ocsp-response":{"source":"iana"},"application/octet-stream":{"source":"iana","compressible":false,"extensions":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/oda":{"source":"iana","extensions":["oda"]},"application/odm+xml":{"source":"iana","compressible":true},"application/odx":{"source":"iana"},"application/oebps-package+xml":{"source":"iana","compressible":true,"extensions":["opf"]},"application/ogg":{"source":"iana","compressible":false,"extensions":["ogx"]},"application/omdoc+xml":{"source":"apache","compressible":true,"extensions":["omdoc"]},"application/onenote":{"source":"apache","extensions":["onetoc","onetoc2","onetmp","onepkg"]},"application/oscore":{"source":"iana"},"application/oxps":{"source":"iana","extensions":["oxps"]},"application/p2p-overlay+xml":{"source":"iana","compressible":true,"extensions":["relo"]},"application/parityfec":{"source":"iana"},"application/passport":{"source":"iana"},"application/patch-ops-error+xml":{"source":"iana","compressible":true,"extensions":["xer"]},"application/pdf":{"source":"iana","compressible":false,"extensions":["pdf"]},"application/pdx":{"source":"iana"},"application/pem-certificate-chain":{"source":"iana"},"application/pgp-encrypted":{"source":"iana","compressible":false,"extensions":["pgp"]},"application/pgp-keys":{"source":"iana"},"application/pgp-signature":{"source":"iana","extensions":["asc","sig"]},"application/pics-rules":{"source":"apache","extensions":["prf"]},"application/pidf+xml":{"source":"iana","compressible":true},"application/pidf-diff+xml":{"source":"iana","compressible":true},"application/pkcs10":{"source":"iana","extensions":["p10"]},"application/pkcs12":{"source":"iana"},"application/pkcs7-mime":{"source":"iana","extensions":["p7m","p7c"]},"application/pkcs7-signature":{"source":"iana","extensions":["p7s"]},"application/pkcs8":{"source":"iana","extensions":["p8"]},"application/pkcs8-encrypted":{"source":"iana"},"application/pkix-attr-cert":{"source":"iana","extensions":["ac"]},"application/pkix-cert":{"source":"iana","extensions":["cer"]},"application/pkix-crl":{"source":"iana","extensions":["crl"]},"application/pkix-pkipath":{"source":"iana","extensions":["pkipath"]},"application/pkixcmp":{"source":"iana","extensions":["pki"]},"application/pls+xml":{"source":"iana","compressible":true,"extensions":["pls"]},"application/poc-settings+xml":{"source":"iana","compressible":true},"application/postscript":{"source":"iana","compressible":true,"extensions":["ai","eps","ps"]},"application/ppsp-tracker+json":{"source":"iana","compressible":true},"application/problem+json":{"source":"iana","compressible":true},"application/problem+xml":{"source":"iana","compressible":true},"application/provenance+xml":{"source":"iana","compressible":true,"extensions":["provx"]},"application/prs.alvestrand.titrax-sheet":{"source":"iana"},"application/prs.cww":{"source":"iana","extensions":["cww"]},"application/prs.hpub+zip":{"source":"iana","compressible":false},"application/prs.nprend":{"source":"iana"},"application/prs.plucker":{"source":"iana"},"application/prs.rdf-xml-crypt":{"source":"iana"},"application/prs.xsf+xml":{"source":"iana","compressible":true},"application/pskc+xml":{"source":"iana","compressible":true,"extensions":["pskcxml"]},"application/qsig":{"source":"iana"},"application/raml+yaml":{"compressible":true,"extensions":["raml"]},"application/raptorfec":{"source":"iana"},"application/rdap+json":{"source":"iana","compressible":true},"application/rdf+xml":{"source":"iana","compressible":true,"extensions":["rdf","owl"]},"application/reginfo+xml":{"source":"iana","compressible":true,"extensions":["rif"]},"application/relax-ng-compact-syntax":{"source":"iana","extensions":["rnc"]},"application/remote-printing":{"source":"iana"},"application/reputon+json":{"source":"iana","compressible":true},"application/resource-lists+xml":{"source":"iana","compressible":true,"extensions":["rl"]},"application/resource-lists-diff+xml":{"source":"iana","compressible":true,"extensions":["rld"]},"application/rfc+xml":{"source":"iana","compressible":true},"application/riscos":{"source":"iana"},"application/rlmi+xml":{"source":"iana","compressible":true},"application/rls-services+xml":{"source":"iana","compressible":true,"extensions":["rs"]},"application/route-apd+xml":{"source":"iana","compressible":true,"extensions":["rapd"]},"application/route-s-tsid+xml":{"source":"iana","compressible":true,"extensions":["sls"]},"application/route-usd+xml":{"source":"iana","compressible":true,"extensions":["rusd"]},"application/rpki-ghostbusters":{"source":"iana","extensions":["gbr"]},"application/rpki-manifest":{"source":"iana","extensions":["mft"]},"application/rpki-publication":{"source":"iana"},"application/rpki-roa":{"source":"iana","extensions":["roa"]},"application/rpki-updown":{"source":"iana"},"application/rsd+xml":{"source":"apache","compressible":true,"extensions":["rsd"]},"application/rss+xml":{"source":"apache","compressible":true,"extensions":["rss"]},"application/rtf":{"source":"iana","compressible":true,"extensions":["rtf"]},"application/rtploopback":{"source":"iana"},"application/rtx":{"source":"iana"},"application/samlassertion+xml":{"source":"iana","compressible":true},"application/samlmetadata+xml":{"source":"iana","compressible":true},"application/sbml+xml":{"source":"iana","compressible":true,"extensions":["sbml"]},"application/scaip+xml":{"source":"iana","compressible":true},"application/scim+json":{"source":"iana","compressible":true},"application/scvp-cv-request":{"source":"iana","extensions":["scq"]},"application/scvp-cv-response":{"source":"iana","extensions":["scs"]},"application/scvp-vp-request":{"source":"iana","extensions":["spq"]},"application/scvp-vp-response":{"source":"iana","extensions":["spp"]},"application/sdp":{"source":"iana","extensions":["sdp"]},"application/secevent+jwt":{"source":"iana"},"application/senml+cbor":{"source":"iana"},"application/senml+json":{"source":"iana","compressible":true},"application/senml+xml":{"source":"iana","compressible":true,"extensions":["senmlx"]},"application/senml-exi":{"source":"iana"},"application/sensml+cbor":{"source":"iana"},"application/sensml+json":{"source":"iana","compressible":true},"application/sensml+xml":{"source":"iana","compressible":true,"extensions":["sensmlx"]},"application/sensml-exi":{"source":"iana"},"application/sep+xml":{"source":"iana","compressible":true},"application/sep-exi":{"source":"iana"},"application/session-info":{"source":"iana"},"application/set-payment":{"source":"iana"},"application/set-payment-initiation":{"source":"iana","extensions":["setpay"]},"application/set-registration":{"source":"iana"},"application/set-registration-initiation":{"source":"iana","extensions":["setreg"]},"application/sgml":{"source":"iana"},"application/sgml-open-catalog":{"source":"iana"},"application/shf+xml":{"source":"iana","compressible":true,"extensions":["shf"]},"application/sieve":{"source":"iana","extensions":["siv","sieve"]},"application/simple-filter+xml":{"source":"iana","compressible":true},"application/simple-message-summary":{"source":"iana"},"application/simplesymbolcontainer":{"source":"iana"},"application/sipc":{"source":"iana"},"application/slate":{"source":"iana"},"application/smil":{"source":"iana"},"application/smil+xml":{"source":"iana","compressible":true,"extensions":["smi","smil"]},"application/smpte336m":{"source":"iana"},"application/soap+fastinfoset":{"source":"iana"},"application/soap+xml":{"source":"iana","compressible":true},"application/sparql-query":{"source":"iana","extensions":["rq"]},"application/sparql-results+xml":{"source":"iana","compressible":true,"extensions":["srx"]},"application/spirits-event+xml":{"source":"iana","compressible":true},"application/sql":{"source":"iana"},"application/srgs":{"source":"iana","extensions":["gram"]},"application/srgs+xml":{"source":"iana","compressible":true,"extensions":["grxml"]},"application/sru+xml":{"source":"iana","compressible":true,"extensions":["sru"]},"application/ssdl+xml":{"source":"apache","compressible":true,"extensions":["ssdl"]},"application/ssml+xml":{"source":"iana","compressible":true,"extensions":["ssml"]},"application/stix+json":{"source":"iana","compressible":true},"application/swid+xml":{"source":"iana","compressible":true,"extensions":["swidtag"]},"application/tamp-apex-update":{"source":"iana"},"application/tamp-apex-update-confirm":{"source":"iana"},"application/tamp-community-update":{"source":"iana"},"application/tamp-community-update-confirm":{"source":"iana"},"application/tamp-error":{"source":"iana"},"application/tamp-sequence-adjust":{"source":"iana"},"application/tamp-sequence-adjust-confirm":{"source":"iana"},"application/tamp-status-query":{"source":"iana"},"application/tamp-status-response":{"source":"iana"},"application/tamp-update":{"source":"iana"},"application/tamp-update-confirm":{"source":"iana"},"application/tar":{"compressible":true},"application/taxii+json":{"source":"iana","compressible":true},"application/tei+xml":{"source":"iana","compressible":true,"extensions":["tei","teicorpus"]},"application/tetra_isi":{"source":"iana"},"application/thraud+xml":{"source":"iana","compressible":true,"extensions":["tfi"]},"application/timestamp-query":{"source":"iana"},"application/timestamp-reply":{"source":"iana"},"application/timestamped-data":{"source":"iana","extensions":["tsd"]},"application/tlsrpt+gzip":{"source":"iana"},"application/tlsrpt+json":{"source":"iana","compressible":true},"application/tnauthlist":{"source":"iana"},"application/toml":{"compressible":true,"extensions":["toml"]},"application/trickle-ice-sdpfrag":{"source":"iana"},"application/trig":{"source":"iana"},"application/ttml+xml":{"source":"iana","compressible":true,"extensions":["ttml"]},"application/tve-trigger":{"source":"iana"},"application/tzif":{"source":"iana"},"application/tzif-leap":{"source":"iana"},"application/ulpfec":{"source":"iana"},"application/urc-grpsheet+xml":{"source":"iana","compressible":true},"application/urc-ressheet+xml":{"source":"iana","compressible":true,"extensions":["rsheet"]},"application/urc-targetdesc+xml":{"source":"iana","compressible":true},"application/urc-uisocketdesc+xml":{"source":"iana","compressible":true},"application/vcard+json":{"source":"iana","compressible":true},"application/vcard+xml":{"source":"iana","compressible":true},"application/vemmi":{"source":"iana"},"application/vividence.scriptfile":{"source":"apache"},"application/vnd.1000minds.decision-model+xml":{"source":"iana","compressible":true,"extensions":["1km"]},"application/vnd.3gpp-prose+xml":{"source":"iana","compressible":true},"application/vnd.3gpp-prose-pc3ch+xml":{"source":"iana","compressible":true},"application/vnd.3gpp-v2x-local-service-information":{"source":"iana"},"application/vnd.3gpp.access-transfer-events+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.bsf+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.gmop+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mc-signalling-ear":{"source":"iana"},"application/vnd.3gpp.mcdata-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-payload":{"source":"iana"},"application/vnd.3gpp.mcdata-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-signalling":{"source":"iana"},"application/vnd.3gpp.mcdata-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-floor-request+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-location-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-mbms-usage-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-signed+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-ue-init-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-affiliation-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-location-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-mbms-usage-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-transmission-request+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mid-call+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.pic-bw-large":{"source":"iana","extensions":["plb"]},"application/vnd.3gpp.pic-bw-small":{"source":"iana","extensions":["psb"]},"application/vnd.3gpp.pic-bw-var":{"source":"iana","extensions":["pvb"]},"application/vnd.3gpp.sms":{"source":"iana"},"application/vnd.3gpp.sms+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.srvcc-ext+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.srvcc-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.state-and-event-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.ussd+xml":{"source":"iana","compressible":true},"application/vnd.3gpp2.bcmcsinfo+xml":{"source":"iana","compressible":true},"application/vnd.3gpp2.sms":{"source":"iana"},"application/vnd.3gpp2.tcap":{"source":"iana","extensions":["tcap"]},"application/vnd.3lightssoftware.imagescal":{"source":"iana"},"application/vnd.3m.post-it-notes":{"source":"iana","extensions":["pwn"]},"application/vnd.accpac.simply.aso":{"source":"iana","extensions":["aso"]},"application/vnd.accpac.simply.imp":{"source":"iana","extensions":["imp"]},"application/vnd.acucobol":{"source":"iana","extensions":["acu"]},"application/vnd.acucorp":{"source":"iana","extensions":["atc","acutc"]},"application/vnd.adobe.air-application-installer-package+zip":{"source":"apache","compressible":false,"extensions":["air"]},"application/vnd.adobe.flash.movie":{"source":"iana"},"application/vnd.adobe.formscentral.fcdt":{"source":"iana","extensions":["fcdt"]},"application/vnd.adobe.fxp":{"source":"iana","extensions":["fxp","fxpl"]},"application/vnd.adobe.partial-upload":{"source":"iana"},"application/vnd.adobe.xdp+xml":{"source":"iana","compressible":true,"extensions":["xdp"]},"application/vnd.adobe.xfdf":{"source":"iana","extensions":["xfdf"]},"application/vnd.aether.imp":{"source":"iana"},"application/vnd.afpc.afplinedata":{"source":"iana"},"application/vnd.afpc.afplinedata-pagedef":{"source":"iana"},"application/vnd.afpc.foca-charset":{"source":"iana"},"application/vnd.afpc.foca-codedfont":{"source":"iana"},"application/vnd.afpc.foca-codepage":{"source":"iana"},"application/vnd.afpc.modca":{"source":"iana"},"application/vnd.afpc.modca-formdef":{"source":"iana"},"application/vnd.afpc.modca-mediummap":{"source":"iana"},"application/vnd.afpc.modca-objectcontainer":{"source":"iana"},"application/vnd.afpc.modca-overlay":{"source":"iana"},"application/vnd.afpc.modca-pagesegment":{"source":"iana"},"application/vnd.ah-barcode":{"source":"iana"},"application/vnd.ahead.space":{"source":"iana","extensions":["ahead"]},"application/vnd.airzip.filesecure.azf":{"source":"iana","extensions":["azf"]},"application/vnd.airzip.filesecure.azs":{"source":"iana","extensions":["azs"]},"application/vnd.amadeus+json":{"source":"iana","compressible":true},"application/vnd.amazon.ebook":{"source":"apache","extensions":["azw"]},"application/vnd.amazon.mobi8-ebook":{"source":"iana"},"application/vnd.americandynamics.acc":{"source":"iana","extensions":["acc"]},"application/vnd.amiga.ami":{"source":"iana","extensions":["ami"]},"application/vnd.amundsen.maze+xml":{"source":"iana","compressible":true},"application/vnd.android.ota":{"source":"iana"},"application/vnd.android.package-archive":{"source":"apache","compressible":false,"extensions":["apk"]},"application/vnd.anki":{"source":"iana"},"application/vnd.anser-web-certificate-issue-initiation":{"source":"iana","extensions":["cii"]},"application/vnd.anser-web-funds-transfer-initiation":{"source":"apache","extensions":["fti"]},"application/vnd.antix.game-component":{"source":"iana","extensions":["atx"]},"application/vnd.apache.thrift.binary":{"source":"iana"},"application/vnd.apache.thrift.compact":{"source":"iana"},"application/vnd.apache.thrift.json":{"source":"iana"},"application/vnd.api+json":{"source":"iana","compressible":true},"application/vnd.aplextor.warrp+json":{"source":"iana","compressible":true},"application/vnd.apothekende.reservation+json":{"source":"iana","compressible":true},"application/vnd.apple.installer+xml":{"source":"iana","compressible":true,"extensions":["mpkg"]},"application/vnd.apple.keynote":{"source":"iana","extensions":["keynote"]},"application/vnd.apple.mpegurl":{"source":"iana","extensions":["m3u8"]},"application/vnd.apple.numbers":{"source":"iana","extensions":["numbers"]},"application/vnd.apple.pages":{"source":"iana","extensions":["pages"]},"application/vnd.apple.pkpass":{"compressible":false,"extensions":["pkpass"]},"application/vnd.arastra.swi":{"source":"iana"},"application/vnd.aristanetworks.swi":{"source":"iana","extensions":["swi"]},"application/vnd.artisan+json":{"source":"iana","compressible":true},"application/vnd.artsquare":{"source":"iana"},"application/vnd.astraea-software.iota":{"source":"iana","extensions":["iota"]},"application/vnd.audiograph":{"source":"iana","extensions":["aep"]},"application/vnd.autopackage":{"source":"iana"},"application/vnd.avalon+json":{"source":"iana","compressible":true},"application/vnd.avistar+xml":{"source":"iana","compressible":true},"application/vnd.balsamiq.bmml+xml":{"source":"iana","compressible":true,"extensions":["bmml"]},"application/vnd.balsamiq.bmpr":{"source":"iana"},"application/vnd.banana-accounting":{"source":"iana"},"application/vnd.bbf.usp.error":{"source":"iana"},"application/vnd.bbf.usp.msg":{"source":"iana"},"application/vnd.bbf.usp.msg+json":{"source":"iana","compressible":true},"application/vnd.bekitzur-stech+json":{"source":"iana","compressible":true},"application/vnd.bint.med-content":{"source":"iana"},"application/vnd.biopax.rdf+xml":{"source":"iana","compressible":true},"application/vnd.blink-idb-value-wrapper":{"source":"iana"},"application/vnd.blueice.multipass":{"source":"iana","extensions":["mpm"]},"application/vnd.bluetooth.ep.oob":{"source":"iana"},"application/vnd.bluetooth.le.oob":{"source":"iana"},"application/vnd.bmi":{"source":"iana","extensions":["bmi"]},"application/vnd.bpf":{"source":"iana"},"application/vnd.bpf3":{"source":"iana"},"application/vnd.businessobjects":{"source":"iana","extensions":["rep"]},"application/vnd.byu.uapi+json":{"source":"iana","compressible":true},"application/vnd.cab-jscript":{"source":"iana"},"application/vnd.canon-cpdl":{"source":"iana"},"application/vnd.canon-lips":{"source":"iana"},"application/vnd.capasystems-pg+json":{"source":"iana","compressible":true},"application/vnd.cendio.thinlinc.clientconf":{"source":"iana"},"application/vnd.century-systems.tcp_stream":{"source":"iana"},"application/vnd.chemdraw+xml":{"source":"iana","compressible":true,"extensions":["cdxml"]},"application/vnd.chess-pgn":{"source":"iana"},"application/vnd.chipnuts.karaoke-mmd":{"source":"iana","extensions":["mmd"]},"application/vnd.ciedi":{"source":"iana"},"application/vnd.cinderella":{"source":"iana","extensions":["cdy"]},"application/vnd.cirpack.isdn-ext":{"source":"iana"},"application/vnd.citationstyles.style+xml":{"source":"iana","compressible":true,"extensions":["csl"]},"application/vnd.claymore":{"source":"iana","extensions":["cla"]},"application/vnd.cloanto.rp9":{"source":"iana","extensions":["rp9"]},"application/vnd.clonk.c4group":{"source":"iana","extensions":["c4g","c4d","c4f","c4p","c4u"]},"application/vnd.cluetrust.cartomobile-config":{"source":"iana","extensions":["c11amc"]},"application/vnd.cluetrust.cartomobile-config-pkg":{"source":"iana","extensions":["c11amz"]},"application/vnd.coffeescript":{"source":"iana"},"application/vnd.collabio.xodocuments.document":{"source":"iana"},"application/vnd.collabio.xodocuments.document-template":{"source":"iana"},"application/vnd.collabio.xodocuments.presentation":{"source":"iana"},"application/vnd.collabio.xodocuments.presentation-template":{"source":"iana"},"application/vnd.collabio.xodocuments.spreadsheet":{"source":"iana"},"application/vnd.collabio.xodocuments.spreadsheet-template":{"source":"iana"},"application/vnd.collection+json":{"source":"iana","compressible":true},"application/vnd.collection.doc+json":{"source":"iana","compressible":true},"application/vnd.collection.next+json":{"source":"iana","compressible":true},"application/vnd.comicbook+zip":{"source":"iana","compressible":false},"application/vnd.comicbook-rar":{"source":"iana"},"application/vnd.commerce-battelle":{"source":"iana"},"application/vnd.commonspace":{"source":"iana","extensions":["csp"]},"application/vnd.contact.cmsg":{"source":"iana","extensions":["cdbcmsg"]},"application/vnd.coreos.ignition+json":{"source":"iana","compressible":true},"application/vnd.cosmocaller":{"source":"iana","extensions":["cmc"]},"application/vnd.crick.clicker":{"source":"iana","extensions":["clkx"]},"application/vnd.crick.clicker.keyboard":{"source":"iana","extensions":["clkk"]},"application/vnd.crick.clicker.palette":{"source":"iana","extensions":["clkp"]},"application/vnd.crick.clicker.template":{"source":"iana","extensions":["clkt"]},"application/vnd.crick.clicker.wordbank":{"source":"iana","extensions":["clkw"]},"application/vnd.criticaltools.wbs+xml":{"source":"iana","compressible":true,"extensions":["wbs"]},"application/vnd.cryptii.pipe+json":{"source":"iana","compressible":true},"application/vnd.crypto-shade-file":{"source":"iana"},"application/vnd.ctc-posml":{"source":"iana","extensions":["pml"]},"application/vnd.ctct.ws+xml":{"source":"iana","compressible":true},"application/vnd.cups-pdf":{"source":"iana"},"application/vnd.cups-postscript":{"source":"iana"},"application/vnd.cups-ppd":{"source":"iana","extensions":["ppd"]},"application/vnd.cups-raster":{"source":"iana"},"application/vnd.cups-raw":{"source":"iana"},"application/vnd.curl":{"source":"iana"},"application/vnd.curl.car":{"source":"apache","extensions":["car"]},"application/vnd.curl.pcurl":{"source":"apache","extensions":["pcurl"]},"application/vnd.cyan.dean.root+xml":{"source":"iana","compressible":true},"application/vnd.cybank":{"source":"iana"},"application/vnd.d2l.coursepackage1p0+zip":{"source":"iana","compressible":false},"application/vnd.dart":{"source":"iana","compressible":true,"extensions":["dart"]},"application/vnd.data-vision.rdz":{"source":"iana","extensions":["rdz"]},"application/vnd.datapackage+json":{"source":"iana","compressible":true},"application/vnd.dataresource+json":{"source":"iana","compressible":true},"application/vnd.debian.binary-package":{"source":"iana"},"application/vnd.dece.data":{"source":"iana","extensions":["uvf","uvvf","uvd","uvvd"]},"application/vnd.dece.ttml+xml":{"source":"iana","compressible":true,"extensions":["uvt","uvvt"]},"application/vnd.dece.unspecified":{"source":"iana","extensions":["uvx","uvvx"]},"application/vnd.dece.zip":{"source":"iana","extensions":["uvz","uvvz"]},"application/vnd.denovo.fcselayout-link":{"source":"iana","extensions":["fe_launch"]},"application/vnd.desmume.movie":{"source":"iana"},"application/vnd.dir-bi.plate-dl-nosuffix":{"source":"iana"},"application/vnd.dm.delegation+xml":{"source":"iana","compressible":true},"application/vnd.dna":{"source":"iana","extensions":["dna"]},"application/vnd.document+json":{"source":"iana","compressible":true},"application/vnd.dolby.mlp":{"source":"apache","extensions":["mlp"]},"application/vnd.dolby.mobile.1":{"source":"iana"},"application/vnd.dolby.mobile.2":{"source":"iana"},"application/vnd.doremir.scorecloud-binary-document":{"source":"iana"},"application/vnd.dpgraph":{"source":"iana","extensions":["dpg"]},"application/vnd.dreamfactory":{"source":"iana","extensions":["dfac"]},"application/vnd.drive+json":{"source":"iana","compressible":true},"application/vnd.ds-keypoint":{"source":"apache","extensions":["kpxx"]},"application/vnd.dtg.local":{"source":"iana"},"application/vnd.dtg.local.flash":{"source":"iana"},"application/vnd.dtg.local.html":{"source":"iana"},"application/vnd.dvb.ait":{"source":"iana","extensions":["ait"]},"application/vnd.dvb.dvbj":{"source":"iana"},"application/vnd.dvb.esgcontainer":{"source":"iana"},"application/vnd.dvb.ipdcdftnotifaccess":{"source":"iana"},"application/vnd.dvb.ipdcesgaccess":{"source":"iana"},"application/vnd.dvb.ipdcesgaccess2":{"source":"iana"},"application/vnd.dvb.ipdcesgpdd":{"source":"iana"},"application/vnd.dvb.ipdcroaming":{"source":"iana"},"application/vnd.dvb.iptv.alfec-base":{"source":"iana"},"application/vnd.dvb.iptv.alfec-enhancement":{"source":"iana"},"application/vnd.dvb.notif-aggregate-root+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-container+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-generic+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-msglist+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-registration-request+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-registration-response+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-init+xml":{"source":"iana","compressible":true},"application/vnd.dvb.pfr":{"source":"iana"},"application/vnd.dvb.service":{"source":"iana","extensions":["svc"]},"application/vnd.dxr":{"source":"iana"},"application/vnd.dynageo":{"source":"iana","extensions":["geo"]},"application/vnd.dzr":{"source":"iana"},"application/vnd.easykaraoke.cdgdownload":{"source":"iana"},"application/vnd.ecdis-update":{"source":"iana"},"application/vnd.ecip.rlp":{"source":"iana"},"application/vnd.ecowin.chart":{"source":"iana","extensions":["mag"]},"application/vnd.ecowin.filerequest":{"source":"iana"},"application/vnd.ecowin.fileupdate":{"source":"iana"},"application/vnd.ecowin.series":{"source":"iana"},"application/vnd.ecowin.seriesrequest":{"source":"iana"},"application/vnd.ecowin.seriesupdate":{"source":"iana"},"application/vnd.efi.img":{"source":"iana"},"application/vnd.efi.iso":{"source":"iana"},"application/vnd.emclient.accessrequest+xml":{"source":"iana","compressible":true},"application/vnd.enliven":{"source":"iana","extensions":["nml"]},"application/vnd.enphase.envoy":{"source":"iana"},"application/vnd.eprints.data+xml":{"source":"iana","compressible":true},"application/vnd.epson.esf":{"source":"iana","extensions":["esf"]},"application/vnd.epson.msf":{"source":"iana","extensions":["msf"]},"application/vnd.epson.quickanime":{"source":"iana","extensions":["qam"]},"application/vnd.epson.salt":{"source":"iana","extensions":["slt"]},"application/vnd.epson.ssf":{"source":"iana","extensions":["ssf"]},"application/vnd.ericsson.quickcall":{"source":"iana"},"application/vnd.espass-espass+zip":{"source":"iana","compressible":false},"application/vnd.eszigno3+xml":{"source":"iana","compressible":true,"extensions":["es3","et3"]},"application/vnd.etsi.aoc+xml":{"source":"iana","compressible":true},"application/vnd.etsi.asic-e+zip":{"source":"iana","compressible":false},"application/vnd.etsi.asic-s+zip":{"source":"iana","compressible":false},"application/vnd.etsi.cug+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvcommand+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvdiscovery+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvprofile+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-bc+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-cod+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-npvr+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvservice+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsync+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvueprofile+xml":{"source":"iana","compressible":true},"application/vnd.etsi.mcid+xml":{"source":"iana","compressible":true},"application/vnd.etsi.mheg5":{"source":"iana"},"application/vnd.etsi.overload-control-policy-dataset+xml":{"source":"iana","compressible":true},"application/vnd.etsi.pstn+xml":{"source":"iana","compressible":true},"application/vnd.etsi.sci+xml":{"source":"iana","compressible":true},"application/vnd.etsi.simservs+xml":{"source":"iana","compressible":true},"application/vnd.etsi.timestamp-token":{"source":"iana"},"application/vnd.etsi.tsl+xml":{"source":"iana","compressible":true},"application/vnd.etsi.tsl.der":{"source":"iana"},"application/vnd.eudora.data":{"source":"iana"},"application/vnd.evolv.ecig.profile":{"source":"iana"},"application/vnd.evolv.ecig.settings":{"source":"iana"},"application/vnd.evolv.ecig.theme":{"source":"iana"},"application/vnd.exstream-empower+zip":{"source":"iana","compressible":false},"application/vnd.exstream-package":{"source":"iana"},"application/vnd.ezpix-album":{"source":"iana","extensions":["ez2"]},"application/vnd.ezpix-package":{"source":"iana","extensions":["ez3"]},"application/vnd.f-secure.mobile":{"source":"iana"},"application/vnd.fastcopy-disk-image":{"source":"iana"},"application/vnd.fdf":{"source":"iana","extensions":["fdf"]},"application/vnd.fdsn.mseed":{"source":"iana","extensions":["mseed"]},"application/vnd.fdsn.seed":{"source":"iana","extensions":["seed","dataless"]},"application/vnd.ffsns":{"source":"iana"},"application/vnd.ficlab.flb+zip":{"source":"iana","compressible":false},"application/vnd.filmit.zfc":{"source":"iana"},"application/vnd.fints":{"source":"iana"},"application/vnd.firemonkeys.cloudcell":{"source":"iana"},"application/vnd.flographit":{"source":"iana","extensions":["gph"]},"application/vnd.fluxtime.clip":{"source":"iana","extensions":["ftc"]},"application/vnd.font-fontforge-sfd":{"source":"iana"},"application/vnd.framemaker":{"source":"iana","extensions":["fm","frame","maker","book"]},"application/vnd.frogans.fnc":{"source":"iana","extensions":["fnc"]},"application/vnd.frogans.ltf":{"source":"iana","extensions":["ltf"]},"application/vnd.fsc.weblaunch":{"source":"iana","extensions":["fsc"]},"application/vnd.fujitsu.oasys":{"source":"iana","extensions":["oas"]},"application/vnd.fujitsu.oasys2":{"source":"iana","extensions":["oa2"]},"application/vnd.fujitsu.oasys3":{"source":"iana","extensions":["oa3"]},"application/vnd.fujitsu.oasysgp":{"source":"iana","extensions":["fg5"]},"application/vnd.fujitsu.oasysprs":{"source":"iana","extensions":["bh2"]},"application/vnd.fujixerox.art-ex":{"source":"iana"},"application/vnd.fujixerox.art4":{"source":"iana"},"application/vnd.fujixerox.ddd":{"source":"iana","extensions":["ddd"]},"application/vnd.fujixerox.docuworks":{"source":"iana","extensions":["xdw"]},"application/vnd.fujixerox.docuworks.binder":{"source":"iana","extensions":["xbd"]},"application/vnd.fujixerox.docuworks.container":{"source":"iana"},"application/vnd.fujixerox.hbpl":{"source":"iana"},"application/vnd.fut-misnet":{"source":"iana"},"application/vnd.futoin+cbor":{"source":"iana"},"application/vnd.futoin+json":{"source":"iana","compressible":true},"application/vnd.fuzzysheet":{"source":"iana","extensions":["fzs"]},"application/vnd.genomatix.tuxedo":{"source":"iana","extensions":["txd"]},"application/vnd.gentics.grd+json":{"source":"iana","compressible":true},"application/vnd.geo+json":{"source":"iana","compressible":true},"application/vnd.geocube+xml":{"source":"iana","compressible":true},"application/vnd.geogebra.file":{"source":"iana","extensions":["ggb"]},"application/vnd.geogebra.tool":{"source":"iana","extensions":["ggt"]},"application/vnd.geometry-explorer":{"source":"iana","extensions":["gex","gre"]},"application/vnd.geonext":{"source":"iana","extensions":["gxt"]},"application/vnd.geoplan":{"source":"iana","extensions":["g2w"]},"application/vnd.geospace":{"source":"iana","extensions":["g3w"]},"application/vnd.gerber":{"source":"iana"},"application/vnd.globalplatform.card-content-mgt":{"source":"iana"},"application/vnd.globalplatform.card-content-mgt-response":{"source":"iana"},"application/vnd.gmx":{"source":"iana","extensions":["gmx"]},"application/vnd.google-apps.document":{"compressible":false,"extensions":["gdoc"]},"application/vnd.google-apps.presentation":{"compressible":false,"extensions":["gslides"]},"application/vnd.google-apps.spreadsheet":{"compressible":false,"extensions":["gsheet"]},"application/vnd.google-earth.kml+xml":{"source":"iana","compressible":true,"extensions":["kml"]},"application/vnd.google-earth.kmz":{"source":"iana","compressible":false,"extensions":["kmz"]},"application/vnd.gov.sk.e-form+xml":{"source":"iana","compressible":true},"application/vnd.gov.sk.e-form+zip":{"source":"iana","compressible":false},"application/vnd.gov.sk.xmldatacontainer+xml":{"source":"iana","compressible":true},"application/vnd.grafeq":{"source":"iana","extensions":["gqf","gqs"]},"application/vnd.gridmp":{"source":"iana"},"application/vnd.groove-account":{"source":"iana","extensions":["gac"]},"application/vnd.groove-help":{"source":"iana","extensions":["ghf"]},"application/vnd.groove-identity-message":{"source":"iana","extensions":["gim"]},"application/vnd.groove-injector":{"source":"iana","extensions":["grv"]},"application/vnd.groove-tool-message":{"source":"iana","extensions":["gtm"]},"application/vnd.groove-tool-template":{"source":"iana","extensions":["tpl"]},"application/vnd.groove-vcard":{"source":"iana","extensions":["vcg"]},"application/vnd.hal+json":{"source":"iana","compressible":true},"application/vnd.hal+xml":{"source":"iana","compressible":true,"extensions":["hal"]},"application/vnd.handheld-entertainment+xml":{"source":"iana","compressible":true,"extensions":["zmm"]},"application/vnd.hbci":{"source":"iana","extensions":["hbci"]},"application/vnd.hc+json":{"source":"iana","compressible":true},"application/vnd.hcl-bireports":{"source":"iana"},"application/vnd.hdt":{"source":"iana"},"application/vnd.heroku+json":{"source":"iana","compressible":true},"application/vnd.hhe.lesson-player":{"source":"iana","extensions":["les"]},"application/vnd.hp-hpgl":{"source":"iana","extensions":["hpgl"]},"application/vnd.hp-hpid":{"source":"iana","extensions":["hpid"]},"application/vnd.hp-hps":{"source":"iana","extensions":["hps"]},"application/vnd.hp-jlyt":{"source":"iana","extensions":["jlt"]},"application/vnd.hp-pcl":{"source":"iana","extensions":["pcl"]},"application/vnd.hp-pclxl":{"source":"iana","extensions":["pclxl"]},"application/vnd.httphone":{"source":"iana"},"application/vnd.hydrostatix.sof-data":{"source":"iana","extensions":["sfd-hdstx"]},"application/vnd.hyper+json":{"source":"iana","compressible":true},"application/vnd.hyper-item+json":{"source":"iana","compressible":true},"application/vnd.hyperdrive+json":{"source":"iana","compressible":true},"application/vnd.hzn-3d-crossword":{"source":"iana"},"application/vnd.ibm.afplinedata":{"source":"iana"},"application/vnd.ibm.electronic-media":{"source":"iana"},"application/vnd.ibm.minipay":{"source":"iana","extensions":["mpy"]},"application/vnd.ibm.modcap":{"source":"iana","extensions":["afp","listafp","list3820"]},"application/vnd.ibm.rights-management":{"source":"iana","extensions":["irm"]},"application/vnd.ibm.secure-container":{"source":"iana","extensions":["sc"]},"application/vnd.iccprofile":{"source":"iana","extensions":["icc","icm"]},"application/vnd.ieee.1905":{"source":"iana"},"application/vnd.igloader":{"source":"iana","extensions":["igl"]},"application/vnd.imagemeter.folder+zip":{"source":"iana","compressible":false},"application/vnd.imagemeter.image+zip":{"source":"iana","compressible":false},"application/vnd.immervision-ivp":{"source":"iana","extensions":["ivp"]},"application/vnd.immervision-ivu":{"source":"iana","extensions":["ivu"]},"application/vnd.ims.imsccv1p1":{"source":"iana"},"application/vnd.ims.imsccv1p2":{"source":"iana"},"application/vnd.ims.imsccv1p3":{"source":"iana"},"application/vnd.ims.lis.v2.result+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolconsumerprofile+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolproxy+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolproxy.id+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolsettings+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolsettings.simple+json":{"source":"iana","compressible":true},"application/vnd.informedcontrol.rms+xml":{"source":"iana","compressible":true},"application/vnd.informix-visionary":{"source":"iana"},"application/vnd.infotech.project":{"source":"iana"},"application/vnd.infotech.project+xml":{"source":"iana","compressible":true},"application/vnd.innopath.wamp.notification":{"source":"iana"},"application/vnd.insors.igm":{"source":"iana","extensions":["igm"]},"application/vnd.intercon.formnet":{"source":"iana","extensions":["xpw","xpx"]},"application/vnd.intergeo":{"source":"iana","extensions":["i2g"]},"application/vnd.intertrust.digibox":{"source":"iana"},"application/vnd.intertrust.nncp":{"source":"iana"},"application/vnd.intu.qbo":{"source":"iana","extensions":["qbo"]},"application/vnd.intu.qfx":{"source":"iana","extensions":["qfx"]},"application/vnd.iptc.g2.catalogitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.conceptitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.knowledgeitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.newsitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.newsmessage+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.packageitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.planningitem+xml":{"source":"iana","compressible":true},"application/vnd.ipunplugged.rcprofile":{"source":"iana","extensions":["rcprofile"]},"application/vnd.irepository.package+xml":{"source":"iana","compressible":true,"extensions":["irp"]},"application/vnd.is-xpr":{"source":"iana","extensions":["xpr"]},"application/vnd.isac.fcs":{"source":"iana","extensions":["fcs"]},"application/vnd.iso11783-10+zip":{"source":"iana","compressible":false},"application/vnd.jam":{"source":"iana","extensions":["jam"]},"application/vnd.japannet-directory-service":{"source":"iana"},"application/vnd.japannet-jpnstore-wakeup":{"source":"iana"},"application/vnd.japannet-payment-wakeup":{"source":"iana"},"application/vnd.japannet-registration":{"source":"iana"},"application/vnd.japannet-registration-wakeup":{"source":"iana"},"application/vnd.japannet-setstore-wakeup":{"source":"iana"},"application/vnd.japannet-verification":{"source":"iana"},"application/vnd.japannet-verification-wakeup":{"source":"iana"},"application/vnd.jcp.javame.midlet-rms":{"source":"iana","extensions":["rms"]},"application/vnd.jisp":{"source":"iana","extensions":["jisp"]},"application/vnd.joost.joda-archive":{"source":"iana","extensions":["joda"]},"application/vnd.jsk.isdn-ngn":{"source":"iana"},"application/vnd.kahootz":{"source":"iana","extensions":["ktz","ktr"]},"application/vnd.kde.karbon":{"source":"iana","extensions":["karbon"]},"application/vnd.kde.kchart":{"source":"iana","extensions":["chrt"]},"application/vnd.kde.kformula":{"source":"iana","extensions":["kfo"]},"application/vnd.kde.kivio":{"source":"iana","extensions":["flw"]},"application/vnd.kde.kontour":{"source":"iana","extensions":["kon"]},"application/vnd.kde.kpresenter":{"source":"iana","extensions":["kpr","kpt"]},"application/vnd.kde.kspread":{"source":"iana","extensions":["ksp"]},"application/vnd.kde.kword":{"source":"iana","extensions":["kwd","kwt"]},"application/vnd.kenameaapp":{"source":"iana","extensions":["htke"]},"application/vnd.kidspiration":{"source":"iana","extensions":["kia"]},"application/vnd.kinar":{"source":"iana","extensions":["kne","knp"]},"application/vnd.koan":{"source":"iana","extensions":["skp","skd","skt","skm"]},"application/vnd.kodak-descriptor":{"source":"iana","extensions":["sse"]},"application/vnd.las":{"source":"iana"},"application/vnd.las.las+json":{"source":"iana","compressible":true},"application/vnd.las.las+xml":{"source":"iana","compressible":true,"extensions":["lasxml"]},"application/vnd.laszip":{"source":"iana"},"application/vnd.leap+json":{"source":"iana","compressible":true},"application/vnd.liberty-request+xml":{"source":"iana","compressible":true},"application/vnd.llamagraphics.life-balance.desktop":{"source":"iana","extensions":["lbd"]},"application/vnd.llamagraphics.life-balance.exchange+xml":{"source":"iana","compressible":true,"extensions":["lbe"]},"application/vnd.logipipe.circuit+zip":{"source":"iana","compressible":false},"application/vnd.loom":{"source":"iana"},"application/vnd.lotus-1-2-3":{"source":"iana","extensions":["123"]},"application/vnd.lotus-approach":{"source":"iana","extensions":["apr"]},"application/vnd.lotus-freelance":{"source":"iana","extensions":["pre"]},"application/vnd.lotus-notes":{"source":"iana","extensions":["nsf"]},"application/vnd.lotus-organizer":{"source":"iana","extensions":["org"]},"application/vnd.lotus-screencam":{"source":"iana","extensions":["scm"]},"application/vnd.lotus-wordpro":{"source":"iana","extensions":["lwp"]},"application/vnd.macports.portpkg":{"source":"iana","extensions":["portpkg"]},"application/vnd.mapbox-vector-tile":{"source":"iana"},"application/vnd.marlin.drm.actiontoken+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.conftoken+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.license+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.mdcf":{"source":"iana"},"application/vnd.mason+json":{"source":"iana","compressible":true},"application/vnd.maxmind.maxmind-db":{"source":"iana"},"application/vnd.mcd":{"source":"iana","extensions":["mcd"]},"application/vnd.medcalcdata":{"source":"iana","extensions":["mc1"]},"application/vnd.mediastation.cdkey":{"source":"iana","extensions":["cdkey"]},"application/vnd.meridian-slingshot":{"source":"iana"},"application/vnd.mfer":{"source":"iana","extensions":["mwf"]},"application/vnd.mfmp":{"source":"iana","extensions":["mfm"]},"application/vnd.micro+json":{"source":"iana","compressible":true},"application/vnd.micrografx.flo":{"source":"iana","extensions":["flo"]},"application/vnd.micrografx.igx":{"source":"iana","extensions":["igx"]},"application/vnd.microsoft.portable-executable":{"source":"iana"},"application/vnd.microsoft.windows.thumbnail-cache":{"source":"iana"},"application/vnd.miele+json":{"source":"iana","compressible":true},"application/vnd.mif":{"source":"iana","extensions":["mif"]},"application/vnd.minisoft-hp3000-save":{"source":"iana"},"application/vnd.mitsubishi.misty-guard.trustweb":{"source":"iana"},"application/vnd.mobius.daf":{"source":"iana","extensions":["daf"]},"application/vnd.mobius.dis":{"source":"iana","extensions":["dis"]},"application/vnd.mobius.mbk":{"source":"iana","extensions":["mbk"]},"application/vnd.mobius.mqy":{"source":"iana","extensions":["mqy"]},"application/vnd.mobius.msl":{"source":"iana","extensions":["msl"]},"application/vnd.mobius.plc":{"source":"iana","extensions":["plc"]},"application/vnd.mobius.txf":{"source":"iana","extensions":["txf"]},"application/vnd.mophun.application":{"source":"iana","extensions":["mpn"]},"application/vnd.mophun.certificate":{"source":"iana","extensions":["mpc"]},"application/vnd.motorola.flexsuite":{"source":"iana"},"application/vnd.motorola.flexsuite.adsi":{"source":"iana"},"application/vnd.motorola.flexsuite.fis":{"source":"iana"},"application/vnd.motorola.flexsuite.gotap":{"source":"iana"},"application/vnd.motorola.flexsuite.kmr":{"source":"iana"},"application/vnd.motorola.flexsuite.ttc":{"source":"iana"},"application/vnd.motorola.flexsuite.wem":{"source":"iana"},"application/vnd.motorola.iprm":{"source":"iana"},"application/vnd.mozilla.xul+xml":{"source":"iana","compressible":true,"extensions":["xul"]},"application/vnd.ms-3mfdocument":{"source":"iana"},"application/vnd.ms-artgalry":{"source":"iana","extensions":["cil"]},"application/vnd.ms-asf":{"source":"iana"},"application/vnd.ms-cab-compressed":{"source":"iana","extensions":["cab"]},"application/vnd.ms-color.iccprofile":{"source":"apache"},"application/vnd.ms-excel":{"source":"iana","compressible":false,"extensions":["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-excel.addin.macroenabled.12":{"source":"iana","extensions":["xlam"]},"application/vnd.ms-excel.sheet.binary.macroenabled.12":{"source":"iana","extensions":["xlsb"]},"application/vnd.ms-excel.sheet.macroenabled.12":{"source":"iana","extensions":["xlsm"]},"application/vnd.ms-excel.template.macroenabled.12":{"source":"iana","extensions":["xltm"]},"application/vnd.ms-fontobject":{"source":"iana","compressible":true,"extensions":["eot"]},"application/vnd.ms-htmlhelp":{"source":"iana","extensions":["chm"]},"application/vnd.ms-ims":{"source":"iana","extensions":["ims"]},"application/vnd.ms-lrm":{"source":"iana","extensions":["lrm"]},"application/vnd.ms-office.activex+xml":{"source":"iana","compressible":true},"application/vnd.ms-officetheme":{"source":"iana","extensions":["thmx"]},"application/vnd.ms-opentype":{"source":"apache","compressible":true},"application/vnd.ms-outlook":{"compressible":false,"extensions":["msg"]},"application/vnd.ms-package.obfuscated-opentype":{"source":"apache"},"application/vnd.ms-pki.seccat":{"source":"apache","extensions":["cat"]},"application/vnd.ms-pki.stl":{"source":"apache","extensions":["stl"]},"application/vnd.ms-playready.initiator+xml":{"source":"iana","compressible":true},"application/vnd.ms-powerpoint":{"source":"iana","compressible":false,"extensions":["ppt","pps","pot"]},"application/vnd.ms-powerpoint.addin.macroenabled.12":{"source":"iana","extensions":["ppam"]},"application/vnd.ms-powerpoint.presentation.macroenabled.12":{"source":"iana","extensions":["pptm"]},"application/vnd.ms-powerpoint.slide.macroenabled.12":{"source":"iana","extensions":["sldm"]},"application/vnd.ms-powerpoint.slideshow.macroenabled.12":{"source":"iana","extensions":["ppsm"]},"application/vnd.ms-powerpoint.template.macroenabled.12":{"source":"iana","extensions":["potm"]},"application/vnd.ms-printdevicecapabilities+xml":{"source":"iana","compressible":true},"application/vnd.ms-printing.printticket+xml":{"source":"apache","compressible":true},"application/vnd.ms-printschematicket+xml":{"source":"iana","compressible":true},"application/vnd.ms-project":{"source":"iana","extensions":["mpp","mpt"]},"application/vnd.ms-tnef":{"source":"iana"},"application/vnd.ms-windows.devicepairing":{"source":"iana"},"application/vnd.ms-windows.nwprinting.oob":{"source":"iana"},"application/vnd.ms-windows.printerpairing":{"source":"iana"},"application/vnd.ms-windows.wsd.oob":{"source":"iana"},"application/vnd.ms-wmdrm.lic-chlg-req":{"source":"iana"},"application/vnd.ms-wmdrm.lic-resp":{"source":"iana"},"application/vnd.ms-wmdrm.meter-chlg-req":{"source":"iana"},"application/vnd.ms-wmdrm.meter-resp":{"source":"iana"},"application/vnd.ms-word.document.macroenabled.12":{"source":"iana","extensions":["docm"]},"application/vnd.ms-word.template.macroenabled.12":{"source":"iana","extensions":["dotm"]},"application/vnd.ms-works":{"source":"iana","extensions":["wps","wks","wcm","wdb"]},"application/vnd.ms-wpl":{"source":"iana","extensions":["wpl"]},"application/vnd.ms-xpsdocument":{"source":"iana","compressible":false,"extensions":["xps"]},"application/vnd.msa-disk-image":{"source":"iana"},"application/vnd.mseq":{"source":"iana","extensions":["mseq"]},"application/vnd.msign":{"source":"iana"},"application/vnd.multiad.creator":{"source":"iana"},"application/vnd.multiad.creator.cif":{"source":"iana"},"application/vnd.music-niff":{"source":"iana"},"application/vnd.musician":{"source":"iana","extensions":["mus"]},"application/vnd.muvee.style":{"source":"iana","extensions":["msty"]},"application/vnd.mynfc":{"source":"iana","extensions":["taglet"]},"application/vnd.ncd.control":{"source":"iana"},"application/vnd.ncd.reference":{"source":"iana"},"application/vnd.nearst.inv+json":{"source":"iana","compressible":true},"application/vnd.nervana":{"source":"iana"},"application/vnd.netfpx":{"source":"iana"},"application/vnd.neurolanguage.nlu":{"source":"iana","extensions":["nlu"]},"application/vnd.nimn":{"source":"iana"},"application/vnd.nintendo.nitro.rom":{"source":"iana"},"application/vnd.nintendo.snes.rom":{"source":"iana"},"application/vnd.nitf":{"source":"iana","extensions":["ntf","nitf"]},"application/vnd.noblenet-directory":{"source":"iana","extensions":["nnd"]},"application/vnd.noblenet-sealer":{"source":"iana","extensions":["nns"]},"application/vnd.noblenet-web":{"source":"iana","extensions":["nnw"]},"application/vnd.nokia.catalogs":{"source":"iana"},"application/vnd.nokia.conml+wbxml":{"source":"iana"},"application/vnd.nokia.conml+xml":{"source":"iana","compressible":true},"application/vnd.nokia.iptv.config+xml":{"source":"iana","compressible":true},"application/vnd.nokia.isds-radio-presets":{"source":"iana"},"application/vnd.nokia.landmark+wbxml":{"source":"iana"},"application/vnd.nokia.landmark+xml":{"source":"iana","compressible":true},"application/vnd.nokia.landmarkcollection+xml":{"source":"iana","compressible":true},"application/vnd.nokia.n-gage.ac+xml":{"source":"iana","compressible":true,"extensions":["ac"]},"application/vnd.nokia.n-gage.data":{"source":"iana","extensions":["ngdat"]},"application/vnd.nokia.n-gage.symbian.install":{"source":"iana","extensions":["n-gage"]},"application/vnd.nokia.ncd":{"source":"iana"},"application/vnd.nokia.pcd+wbxml":{"source":"iana"},"application/vnd.nokia.pcd+xml":{"source":"iana","compressible":true},"application/vnd.nokia.radio-preset":{"source":"iana","extensions":["rpst"]},"application/vnd.nokia.radio-presets":{"source":"iana","extensions":["rpss"]},"application/vnd.novadigm.edm":{"source":"iana","extensions":["edm"]},"application/vnd.novadigm.edx":{"source":"iana","extensions":["edx"]},"application/vnd.novadigm.ext":{"source":"iana","extensions":["ext"]},"application/vnd.ntt-local.content-share":{"source":"iana"},"application/vnd.ntt-local.file-transfer":{"source":"iana"},"application/vnd.ntt-local.ogw_remote-access":{"source":"iana"},"application/vnd.ntt-local.sip-ta_remote":{"source":"iana"},"application/vnd.ntt-local.sip-ta_tcp_stream":{"source":"iana"},"application/vnd.oasis.opendocument.chart":{"source":"iana","extensions":["odc"]},"application/vnd.oasis.opendocument.chart-template":{"source":"iana","extensions":["otc"]},"application/vnd.oasis.opendocument.database":{"source":"iana","extensions":["odb"]},"application/vnd.oasis.opendocument.formula":{"source":"iana","extensions":["odf"]},"application/vnd.oasis.opendocument.formula-template":{"source":"iana","extensions":["odft"]},"application/vnd.oasis.opendocument.graphics":{"source":"iana","compressible":false,"extensions":["odg"]},"application/vnd.oasis.opendocument.graphics-template":{"source":"iana","extensions":["otg"]},"application/vnd.oasis.opendocument.image":{"source":"iana","extensions":["odi"]},"application/vnd.oasis.opendocument.image-template":{"source":"iana","extensions":["oti"]},"application/vnd.oasis.opendocument.presentation":{"source":"iana","compressible":false,"extensions":["odp"]},"application/vnd.oasis.opendocument.presentation-template":{"source":"iana","extensions":["otp"]},"application/vnd.oasis.opendocument.spreadsheet":{"source":"iana","compressible":false,"extensions":["ods"]},"application/vnd.oasis.opendocument.spreadsheet-template":{"source":"iana","extensions":["ots"]},"application/vnd.oasis.opendocument.text":{"source":"iana","compressible":false,"extensions":["odt"]},"application/vnd.oasis.opendocument.text-master":{"source":"iana","extensions":["odm"]},"application/vnd.oasis.opendocument.text-template":{"source":"iana","extensions":["ott"]},"application/vnd.oasis.opendocument.text-web":{"source":"iana","extensions":["oth"]},"application/vnd.obn":{"source":"iana"},"application/vnd.ocf+cbor":{"source":"iana"},"application/vnd.oftn.l10n+json":{"source":"iana","compressible":true},"application/vnd.oipf.contentaccessdownload+xml":{"source":"iana","compressible":true},"application/vnd.oipf.contentaccessstreaming+xml":{"source":"iana","compressible":true},"application/vnd.oipf.cspg-hexbinary":{"source":"iana"},"application/vnd.oipf.dae.svg+xml":{"source":"iana","compressible":true},"application/vnd.oipf.dae.xhtml+xml":{"source":"iana","compressible":true},"application/vnd.oipf.mippvcontrolmessage+xml":{"source":"iana","compressible":true},"application/vnd.oipf.pae.gem":{"source":"iana"},"application/vnd.oipf.spdiscovery+xml":{"source":"iana","compressible":true},"application/vnd.oipf.spdlist+xml":{"source":"iana","compressible":true},"application/vnd.oipf.ueprofile+xml":{"source":"iana","compressible":true},"application/vnd.oipf.userprofile+xml":{"source":"iana","compressible":true},"application/vnd.olpc-sugar":{"source":"iana","extensions":["xo"]},"application/vnd.oma-scws-config":{"source":"iana"},"application/vnd.oma-scws-http-request":{"source":"iana"},"application/vnd.oma-scws-http-response":{"source":"iana"},"application/vnd.oma.bcast.associated-procedure-parameter+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.drm-trigger+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.imd+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.ltkm":{"source":"iana"},"application/vnd.oma.bcast.notification+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.provisioningtrigger":{"source":"iana"},"application/vnd.oma.bcast.sgboot":{"source":"iana"},"application/vnd.oma.bcast.sgdd+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.sgdu":{"source":"iana"},"application/vnd.oma.bcast.simple-symbol-container":{"source":"iana"},"application/vnd.oma.bcast.smartcard-trigger+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.sprov+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.stkm":{"source":"iana"},"application/vnd.oma.cab-address-book+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-feature-handler+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-pcc+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-subs-invite+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-user-prefs+xml":{"source":"iana","compressible":true},"application/vnd.oma.dcd":{"source":"iana"},"application/vnd.oma.dcdc":{"source":"iana"},"application/vnd.oma.dd2+xml":{"source":"iana","compressible":true,"extensions":["dd2"]},"application/vnd.oma.drm.risd+xml":{"source":"iana","compressible":true},"application/vnd.oma.group-usage-list+xml":{"source":"iana","compressible":true},"application/vnd.oma.lwm2m+json":{"source":"iana","compressible":true},"application/vnd.oma.lwm2m+tlv":{"source":"iana"},"application/vnd.oma.pal+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.detailed-progress-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.final-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.groups+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.invocation-descriptor+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.optimized-progress-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.push":{"source":"iana"},"application/vnd.oma.scidm.messages+xml":{"source":"iana","compressible":true},"application/vnd.oma.xcap-directory+xml":{"source":"iana","compressible":true},"application/vnd.omads-email+xml":{"source":"iana","compressible":true},"application/vnd.omads-file+xml":{"source":"iana","compressible":true},"application/vnd.omads-folder+xml":{"source":"iana","compressible":true},"application/vnd.omaloc-supl-init":{"source":"iana"},"application/vnd.onepager":{"source":"iana"},"application/vnd.onepagertamp":{"source":"iana"},"application/vnd.onepagertamx":{"source":"iana"},"application/vnd.onepagertat":{"source":"iana"},"application/vnd.onepagertatp":{"source":"iana"},"application/vnd.onepagertatx":{"source":"iana"},"application/vnd.openblox.game+xml":{"source":"iana","compressible":true,"extensions":["obgx"]},"application/vnd.openblox.game-binary":{"source":"iana"},"application/vnd.openeye.oeb":{"source":"iana"},"application/vnd.openofficeorg.extension":{"source":"apache","extensions":["oxt"]},"application/vnd.openstreetmap.data+xml":{"source":"iana","compressible":true,"extensions":["osm"]},"application/vnd.openxmlformats-officedocument.custom-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.customxmlproperties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawing+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.chart+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.extended-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{"source":"iana","compressible":false,"extensions":["pptx"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slide":{"source":"iana","extensions":["sldx"]},"application/vnd.openxmlformats-officedocument.presentationml.slide+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slideshow":{"source":"iana","extensions":["ppsx"]},"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.tags+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.template":{"source":"iana","extensions":["potx"]},"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{"source":"iana","compressible":false,"extensions":["xlsx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.template":{"source":"iana","extensions":["xltx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.theme+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.themeoverride+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.vmldrawing":{"source":"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{"source":"iana","compressible":false,"extensions":["docx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.template":{"source":"iana","extensions":["dotx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.core-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.relationships+xml":{"source":"iana","compressible":true},"application/vnd.oracle.resource+json":{"source":"iana","compressible":true},"application/vnd.orange.indata":{"source":"iana"},"application/vnd.osa.netdeploy":{"source":"iana"},"application/vnd.osgeo.mapguide.package":{"source":"iana","extensions":["mgp"]},"application/vnd.osgi.bundle":{"source":"iana"},"application/vnd.osgi.dp":{"source":"iana","extensions":["dp"]},"application/vnd.osgi.subsystem":{"source":"iana","extensions":["esa"]},"application/vnd.otps.ct-kip+xml":{"source":"iana","compressible":true},"application/vnd.oxli.countgraph":{"source":"iana"},"application/vnd.pagerduty+json":{"source":"iana","compressible":true},"application/vnd.palm":{"source":"iana","extensions":["pdb","pqa","oprc"]},"application/vnd.panoply":{"source":"iana"},"application/vnd.paos.xml":{"source":"iana"},"application/vnd.patentdive":{"source":"iana"},"application/vnd.patientecommsdoc":{"source":"iana"},"application/vnd.pawaafile":{"source":"iana","extensions":["paw"]},"application/vnd.pcos":{"source":"iana"},"application/vnd.pg.format":{"source":"iana","extensions":["str"]},"application/vnd.pg.osasli":{"source":"iana","extensions":["ei6"]},"application/vnd.piaccess.application-licence":{"source":"iana"},"application/vnd.picsel":{"source":"iana","extensions":["efif"]},"application/vnd.pmi.widget":{"source":"iana","extensions":["wg"]},"application/vnd.poc.group-advertisement+xml":{"source":"iana","compressible":true},"application/vnd.pocketlearn":{"source":"iana","extensions":["plf"]},"application/vnd.powerbuilder6":{"source":"iana","extensions":["pbd"]},"application/vnd.powerbuilder6-s":{"source":"iana"},"application/vnd.powerbuilder7":{"source":"iana"},"application/vnd.powerbuilder7-s":{"source":"iana"},"application/vnd.powerbuilder75":{"source":"iana"},"application/vnd.powerbuilder75-s":{"source":"iana"},"application/vnd.preminet":{"source":"iana"},"application/vnd.previewsystems.box":{"source":"iana","extensions":["box"]},"application/vnd.proteus.magazine":{"source":"iana","extensions":["mgz"]},"application/vnd.psfs":{"source":"iana"},"application/vnd.publishare-delta-tree":{"source":"iana","extensions":["qps"]},"application/vnd.pvi.ptid1":{"source":"iana","extensions":["ptid"]},"application/vnd.pwg-multiplexed":{"source":"iana"},"application/vnd.pwg-xhtml-print+xml":{"source":"iana","compressible":true},"application/vnd.qualcomm.brew-app-res":{"source":"iana"},"application/vnd.quarantainenet":{"source":"iana"},"application/vnd.quark.quarkxpress":{"source":"iana","extensions":["qxd","qxt","qwd","qwt","qxl","qxb"]},"application/vnd.quobject-quoxdocument":{"source":"iana"},"application/vnd.radisys.moml+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-conf+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-conn+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-dialog+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-stream+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-conf+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-base+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-fax-detect+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-fax-sendrecv+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-group+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-speech+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-transform+xml":{"source":"iana","compressible":true},"application/vnd.rainstor.data":{"source":"iana"},"application/vnd.rapid":{"source":"iana"},"application/vnd.rar":{"source":"iana"},"application/vnd.realvnc.bed":{"source":"iana","extensions":["bed"]},"application/vnd.recordare.musicxml":{"source":"iana","extensions":["mxl"]},"application/vnd.recordare.musicxml+xml":{"source":"iana","compressible":true,"extensions":["musicxml"]},"application/vnd.renlearn.rlprint":{"source":"iana"},"application/vnd.restful+json":{"source":"iana","compressible":true},"application/vnd.rig.cryptonote":{"source":"iana","extensions":["cryptonote"]},"application/vnd.rim.cod":{"source":"apache","extensions":["cod"]},"application/vnd.rn-realmedia":{"source":"apache","extensions":["rm"]},"application/vnd.rn-realmedia-vbr":{"source":"apache","extensions":["rmvb"]},"application/vnd.route66.link66+xml":{"source":"iana","compressible":true,"extensions":["link66"]},"application/vnd.rs-274x":{"source":"iana"},"application/vnd.ruckus.download":{"source":"iana"},"application/vnd.s3sms":{"source":"iana"},"application/vnd.sailingtracker.track":{"source":"iana","extensions":["st"]},"application/vnd.sbm.cid":{"source":"iana"},"application/vnd.sbm.mid2":{"source":"iana"},"application/vnd.scribus":{"source":"iana"},"application/vnd.sealed.3df":{"source":"iana"},"application/vnd.sealed.csf":{"source":"iana"},"application/vnd.sealed.doc":{"source":"iana"},"application/vnd.sealed.eml":{"source":"iana"},"application/vnd.sealed.mht":{"source":"iana"},"application/vnd.sealed.net":{"source":"iana"},"application/vnd.sealed.ppt":{"source":"iana"},"application/vnd.sealed.tiff":{"source":"iana"},"application/vnd.sealed.xls":{"source":"iana"},"application/vnd.sealedmedia.softseal.html":{"source":"iana"},"application/vnd.sealedmedia.softseal.pdf":{"source":"iana"},"application/vnd.seemail":{"source":"iana","extensions":["see"]},"application/vnd.sema":{"source":"iana","extensions":["sema"]},"application/vnd.semd":{"source":"iana","extensions":["semd"]},"application/vnd.semf":{"source":"iana","extensions":["semf"]},"application/vnd.shade-save-file":{"source":"iana"},"application/vnd.shana.informed.formdata":{"source":"iana","extensions":["ifm"]},"application/vnd.shana.informed.formtemplate":{"source":"iana","extensions":["itp"]},"application/vnd.shana.informed.interchange":{"source":"iana","extensions":["iif"]},"application/vnd.shana.informed.package":{"source":"iana","extensions":["ipk"]},"application/vnd.shootproof+json":{"source":"iana","compressible":true},"application/vnd.shopkick+json":{"source":"iana","compressible":true},"application/vnd.sigrok.session":{"source":"iana"},"application/vnd.simtech-mindmapper":{"source":"iana","extensions":["twd","twds"]},"application/vnd.siren+json":{"source":"iana","compressible":true},"application/vnd.smaf":{"source":"iana","extensions":["mmf"]},"application/vnd.smart.notebook":{"source":"iana"},"application/vnd.smart.teacher":{"source":"iana","extensions":["teacher"]},"application/vnd.software602.filler.form+xml":{"source":"iana","compressible":true,"extensions":["fo"]},"application/vnd.software602.filler.form-xml-zip":{"source":"iana"},"application/vnd.solent.sdkm+xml":{"source":"iana","compressible":true,"extensions":["sdkm","sdkd"]},"application/vnd.spotfire.dxp":{"source":"iana","extensions":["dxp"]},"application/vnd.spotfire.sfs":{"source":"iana","extensions":["sfs"]},"application/vnd.sqlite3":{"source":"iana"},"application/vnd.sss-cod":{"source":"iana"},"application/vnd.sss-dtf":{"source":"iana"},"application/vnd.sss-ntf":{"source":"iana"},"application/vnd.stardivision.calc":{"source":"apache","extensions":["sdc"]},"application/vnd.stardivision.draw":{"source":"apache","extensions":["sda"]},"application/vnd.stardivision.impress":{"source":"apache","extensions":["sdd"]},"application/vnd.stardivision.math":{"source":"apache","extensions":["smf"]},"application/vnd.stardivision.writer":{"source":"apache","extensions":["sdw","vor"]},"application/vnd.stardivision.writer-global":{"source":"apache","extensions":["sgl"]},"application/vnd.stepmania.package":{"source":"iana","extensions":["smzip"]},"application/vnd.stepmania.stepchart":{"source":"iana","extensions":["sm"]},"application/vnd.street-stream":{"source":"iana"},"application/vnd.sun.wadl+xml":{"source":"iana","compressible":true,"extensions":["wadl"]},"application/vnd.sun.xml.calc":{"source":"apache","extensions":["sxc"]},"application/vnd.sun.xml.calc.template":{"source":"apache","extensions":["stc"]},"application/vnd.sun.xml.draw":{"source":"apache","extensions":["sxd"]},"application/vnd.sun.xml.draw.template":{"source":"apache","extensions":["std"]},"application/vnd.sun.xml.impress":{"source":"apache","extensions":["sxi"]},"application/vnd.sun.xml.impress.template":{"source":"apache","extensions":["sti"]},"application/vnd.sun.xml.math":{"source":"apache","extensions":["sxm"]},"application/vnd.sun.xml.writer":{"source":"apache","extensions":["sxw"]},"application/vnd.sun.xml.writer.global":{"source":"apache","extensions":["sxg"]},"application/vnd.sun.xml.writer.template":{"source":"apache","extensions":["stw"]},"application/vnd.sus-calendar":{"source":"iana","extensions":["sus","susp"]},"application/vnd.svd":{"source":"iana","extensions":["svd"]},"application/vnd.swiftview-ics":{"source":"iana"},"application/vnd.symbian.install":{"source":"apache","extensions":["sis","sisx"]},"application/vnd.syncml+xml":{"source":"iana","compressible":true,"extensions":["xsm"]},"application/vnd.syncml.dm+wbxml":{"source":"iana","extensions":["bdm"]},"application/vnd.syncml.dm+xml":{"source":"iana","compressible":true,"extensions":["xdm"]},"application/vnd.syncml.dm.notification":{"source":"iana"},"application/vnd.syncml.dmddf+wbxml":{"source":"iana"},"application/vnd.syncml.dmddf+xml":{"source":"iana","compressible":true,"extensions":["ddf"]},"application/vnd.syncml.dmtnds+wbxml":{"source":"iana"},"application/vnd.syncml.dmtnds+xml":{"source":"iana","compressible":true},"application/vnd.syncml.ds.notification":{"source":"iana"},"application/vnd.tableschema+json":{"source":"iana","compressible":true},"application/vnd.tao.intent-module-archive":{"source":"iana","extensions":["tao"]},"application/vnd.tcpdump.pcap":{"source":"iana","extensions":["pcap","cap","dmp"]},"application/vnd.think-cell.ppttc+json":{"source":"iana","compressible":true},"application/vnd.tmd.mediaflex.api+xml":{"source":"iana","compressible":true},"application/vnd.tml":{"source":"iana"},"application/vnd.tmobile-livetv":{"source":"iana","extensions":["tmo"]},"application/vnd.tri.onesource":{"source":"iana"},"application/vnd.trid.tpt":{"source":"iana","extensions":["tpt"]},"application/vnd.triscape.mxs":{"source":"iana","extensions":["mxs"]},"application/vnd.trueapp":{"source":"iana","extensions":["tra"]},"application/vnd.truedoc":{"source":"iana"},"application/vnd.ubisoft.webplayer":{"source":"iana"},"application/vnd.ufdl":{"source":"iana","extensions":["ufd","ufdl"]},"application/vnd.uiq.theme":{"source":"iana","extensions":["utz"]},"application/vnd.umajin":{"source":"iana","extensions":["umj"]},"application/vnd.unity":{"source":"iana","extensions":["unityweb"]},"application/vnd.uoml+xml":{"source":"iana","compressible":true,"extensions":["uoml"]},"application/vnd.uplanet.alert":{"source":"iana"},"application/vnd.uplanet.alert-wbxml":{"source":"iana"},"application/vnd.uplanet.bearer-choice":{"source":"iana"},"application/vnd.uplanet.bearer-choice-wbxml":{"source":"iana"},"application/vnd.uplanet.cacheop":{"source":"iana"},"application/vnd.uplanet.cacheop-wbxml":{"source":"iana"},"application/vnd.uplanet.channel":{"source":"iana"},"application/vnd.uplanet.channel-wbxml":{"source":"iana"},"application/vnd.uplanet.list":{"source":"iana"},"application/vnd.uplanet.list-wbxml":{"source":"iana"},"application/vnd.uplanet.listcmd":{"source":"iana"},"application/vnd.uplanet.listcmd-wbxml":{"source":"iana"},"application/vnd.uplanet.signal":{"source":"iana"},"application/vnd.uri-map":{"source":"iana"},"application/vnd.valve.source.material":{"source":"iana"},"application/vnd.vcx":{"source":"iana","extensions":["vcx"]},"application/vnd.vd-study":{"source":"iana"},"application/vnd.vectorworks":{"source":"iana"},"application/vnd.vel+json":{"source":"iana","compressible":true},"application/vnd.verimatrix.vcas":{"source":"iana"},"application/vnd.veryant.thin":{"source":"iana"},"application/vnd.ves.encrypted":{"source":"iana"},"application/vnd.vidsoft.vidconference":{"source":"iana"},"application/vnd.visio":{"source":"iana","extensions":["vsd","vst","vss","vsw"]},"application/vnd.visionary":{"source":"iana","extensions":["vis"]},"application/vnd.vividence.scriptfile":{"source":"iana"},"application/vnd.vsf":{"source":"iana","extensions":["vsf"]},"application/vnd.wap.sic":{"source":"iana"},"application/vnd.wap.slc":{"source":"iana"},"application/vnd.wap.wbxml":{"source":"iana","extensions":["wbxml"]},"application/vnd.wap.wmlc":{"source":"iana","extensions":["wmlc"]},"application/vnd.wap.wmlscriptc":{"source":"iana","extensions":["wmlsc"]},"application/vnd.webturbo":{"source":"iana","extensions":["wtb"]},"application/vnd.wfa.p2p":{"source":"iana"},"application/vnd.wfa.wsc":{"source":"iana"},"application/vnd.windows.devicepairing":{"source":"iana"},"application/vnd.wmc":{"source":"iana"},"application/vnd.wmf.bootstrap":{"source":"iana"},"application/vnd.wolfram.mathematica":{"source":"iana"},"application/vnd.wolfram.mathematica.package":{"source":"iana"},"application/vnd.wolfram.player":{"source":"iana","extensions":["nbp"]},"application/vnd.wordperfect":{"source":"iana","extensions":["wpd"]},"application/vnd.wqd":{"source":"iana","extensions":["wqd"]},"application/vnd.wrq-hp3000-labelled":{"source":"iana"},"application/vnd.wt.stf":{"source":"iana","extensions":["stf"]},"application/vnd.wv.csp+wbxml":{"source":"iana"},"application/vnd.wv.csp+xml":{"source":"iana","compressible":true},"application/vnd.wv.ssp+xml":{"source":"iana","compressible":true},"application/vnd.xacml+json":{"source":"iana","compressible":true},"application/vnd.xara":{"source":"iana","extensions":["xar"]},"application/vnd.xfdl":{"source":"iana","extensions":["xfdl"]},"application/vnd.xfdl.webform":{"source":"iana"},"application/vnd.xmi+xml":{"source":"iana","compressible":true},"application/vnd.xmpie.cpkg":{"source":"iana"},"application/vnd.xmpie.dpkg":{"source":"iana"},"application/vnd.xmpie.plan":{"source":"iana"},"application/vnd.xmpie.ppkg":{"source":"iana"},"application/vnd.xmpie.xlim":{"source":"iana"},"application/vnd.yamaha.hv-dic":{"source":"iana","extensions":["hvd"]},"application/vnd.yamaha.hv-script":{"source":"iana","extensions":["hvs"]},"application/vnd.yamaha.hv-voice":{"source":"iana","extensions":["hvp"]},"application/vnd.yamaha.openscoreformat":{"source":"iana","extensions":["osf"]},"application/vnd.yamaha.openscoreformat.osfpvg+xml":{"source":"iana","compressible":true,"extensions":["osfpvg"]},"application/vnd.yamaha.remote-setup":{"source":"iana"},"application/vnd.yamaha.smaf-audio":{"source":"iana","extensions":["saf"]},"application/vnd.yamaha.smaf-phrase":{"source":"iana","extensions":["spf"]},"application/vnd.yamaha.through-ngn":{"source":"iana"},"application/vnd.yamaha.tunnel-udpencap":{"source":"iana"},"application/vnd.yaoweme":{"source":"iana"},"application/vnd.yellowriver-custom-menu":{"source":"iana","extensions":["cmp"]},"application/vnd.youtube.yt":{"source":"iana"},"application/vnd.zul":{"source":"iana","extensions":["zir","zirz"]},"application/vnd.zzazz.deck+xml":{"source":"iana","compressible":true,"extensions":["zaz"]},"application/voicexml+xml":{"source":"iana","compressible":true,"extensions":["vxml"]},"application/voucher-cms+json":{"source":"iana","compressible":true},"application/vq-rtcpxr":{"source":"iana"},"application/wasm":{"compressible":true,"extensions":["wasm"]},"application/watcherinfo+xml":{"source":"iana","compressible":true},"application/webpush-options+json":{"source":"iana","compressible":true},"application/whoispp-query":{"source":"iana"},"application/whoispp-response":{"source":"iana"},"application/widget":{"source":"iana","extensions":["wgt"]},"application/winhlp":{"source":"apache","extensions":["hlp"]},"application/wita":{"source":"iana"},"application/wordperfect5.1":{"source":"iana"},"application/wsdl+xml":{"source":"iana","compressible":true,"extensions":["wsdl"]},"application/wspolicy+xml":{"source":"iana","compressible":true,"extensions":["wspolicy"]},"application/x-7z-compressed":{"source":"apache","compressible":false,"extensions":["7z"]},"application/x-abiword":{"source":"apache","extensions":["abw"]},"application/x-ace-compressed":{"source":"apache","extensions":["ace"]},"application/x-amf":{"source":"apache"},"application/x-apple-diskimage":{"source":"apache","extensions":["dmg"]},"application/x-arj":{"compressible":false,"extensions":["arj"]},"application/x-authorware-bin":{"source":"apache","extensions":["aab","x32","u32","vox"]},"application/x-authorware-map":{"source":"apache","extensions":["aam"]},"application/x-authorware-seg":{"source":"apache","extensions":["aas"]},"application/x-bcpio":{"source":"apache","extensions":["bcpio"]},"application/x-bdoc":{"compressible":false,"extensions":["bdoc"]},"application/x-bittorrent":{"source":"apache","extensions":["torrent"]},"application/x-blorb":{"source":"apache","extensions":["blb","blorb"]},"application/x-bzip":{"source":"apache","compressible":false,"extensions":["bz"]},"application/x-bzip2":{"source":"apache","compressible":false,"extensions":["bz2","boz"]},"application/x-cbr":{"source":"apache","extensions":["cbr","cba","cbt","cbz","cb7"]},"application/x-cdlink":{"source":"apache","extensions":["vcd"]},"application/x-cfs-compressed":{"source":"apache","extensions":["cfs"]},"application/x-chat":{"source":"apache","extensions":["chat"]},"application/x-chess-pgn":{"source":"apache","extensions":["pgn"]},"application/x-chrome-extension":{"extensions":["crx"]},"application/x-cocoa":{"source":"nginx","extensions":["cco"]},"application/x-compress":{"source":"apache"},"application/x-conference":{"source":"apache","extensions":["nsc"]},"application/x-cpio":{"source":"apache","extensions":["cpio"]},"application/x-csh":{"source":"apache","extensions":["csh"]},"application/x-deb":{"compressible":false},"application/x-debian-package":{"source":"apache","extensions":["deb","udeb"]},"application/x-dgc-compressed":{"source":"apache","extensions":["dgc"]},"application/x-director":{"source":"apache","extensions":["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"]},"application/x-doom":{"source":"apache","extensions":["wad"]},"application/x-dtbncx+xml":{"source":"apache","compressible":true,"extensions":["ncx"]},"application/x-dtbook+xml":{"source":"apache","compressible":true,"extensions":["dtb"]},"application/x-dtbresource+xml":{"source":"apache","compressible":true,"extensions":["res"]},"application/x-dvi":{"source":"apache","compressible":false,"extensions":["dvi"]},"application/x-envoy":{"source":"apache","extensions":["evy"]},"application/x-eva":{"source":"apache","extensions":["eva"]},"application/x-font-bdf":{"source":"apache","extensions":["bdf"]},"application/x-font-dos":{"source":"apache"},"application/x-font-framemaker":{"source":"apache"},"application/x-font-ghostscript":{"source":"apache","extensions":["gsf"]},"application/x-font-libgrx":{"source":"apache"},"application/x-font-linux-psf":{"source":"apache","extensions":["psf"]},"application/x-font-pcf":{"source":"apache","extensions":["pcf"]},"application/x-font-snf":{"source":"apache","extensions":["snf"]},"application/x-font-speedo":{"source":"apache"},"application/x-font-sunos-news":{"source":"apache"},"application/x-font-type1":{"source":"apache","extensions":["pfa","pfb","pfm","afm"]},"application/x-font-vfont":{"source":"apache"},"application/x-freearc":{"source":"apache","extensions":["arc"]},"application/x-futuresplash":{"source":"apache","extensions":["spl"]},"application/x-gca-compressed":{"source":"apache","extensions":["gca"]},"application/x-glulx":{"source":"apache","extensions":["ulx"]},"application/x-gnumeric":{"source":"apache","extensions":["gnumeric"]},"application/x-gramps-xml":{"source":"apache","extensions":["gramps"]},"application/x-gtar":{"source":"apache","extensions":["gtar"]},"application/x-gzip":{"source":"apache"},"application/x-hdf":{"source":"apache","extensions":["hdf"]},"application/x-httpd-php":{"compressible":true,"extensions":["php"]},"application/x-install-instructions":{"source":"apache","extensions":["install"]},"application/x-iso9660-image":{"source":"apache","extensions":["iso"]},"application/x-java-archive-diff":{"source":"nginx","extensions":["jardiff"]},"application/x-java-jnlp-file":{"source":"apache","compressible":false,"extensions":["jnlp"]},"application/x-javascript":{"compressible":true},"application/x-keepass2":{"extensions":["kdbx"]},"application/x-latex":{"source":"apache","compressible":false,"extensions":["latex"]},"application/x-lua-bytecode":{"extensions":["luac"]},"application/x-lzh-compressed":{"source":"apache","extensions":["lzh","lha"]},"application/x-makeself":{"source":"nginx","extensions":["run"]},"application/x-mie":{"source":"apache","extensions":["mie"]},"application/x-mobipocket-ebook":{"source":"apache","extensions":["prc","mobi"]},"application/x-mpegurl":{"compressible":false},"application/x-ms-application":{"source":"apache","extensions":["application"]},"application/x-ms-shortcut":{"source":"apache","extensions":["lnk"]},"application/x-ms-wmd":{"source":"apache","extensions":["wmd"]},"application/x-ms-wmz":{"source":"apache","extensions":["wmz"]},"application/x-ms-xbap":{"source":"apache","extensions":["xbap"]},"application/x-msaccess":{"source":"apache","extensions":["mdb"]},"application/x-msbinder":{"source":"apache","extensions":["obd"]},"application/x-mscardfile":{"source":"apache","extensions":["crd"]},"application/x-msclip":{"source":"apache","extensions":["clp"]},"application/x-msdos-program":{"extensions":["exe"]},"application/x-msdownload":{"source":"apache","extensions":["exe","dll","com","bat","msi"]},"application/x-msmediaview":{"source":"apache","extensions":["mvb","m13","m14"]},"application/x-msmetafile":{"source":"apache","extensions":["wmf","wmz","emf","emz"]},"application/x-msmoney":{"source":"apache","extensions":["mny"]},"application/x-mspublisher":{"source":"apache","extensions":["pub"]},"application/x-msschedule":{"source":"apache","extensions":["scd"]},"application/x-msterminal":{"source":"apache","extensions":["trm"]},"application/x-mswrite":{"source":"apache","extensions":["wri"]},"application/x-netcdf":{"source":"apache","extensions":["nc","cdf"]},"application/x-ns-proxy-autoconfig":{"compressible":true,"extensions":["pac"]},"application/x-nzb":{"source":"apache","extensions":["nzb"]},"application/x-perl":{"source":"nginx","extensions":["pl","pm"]},"application/x-pilot":{"source":"nginx","extensions":["prc","pdb"]},"application/x-pkcs12":{"source":"apache","compressible":false,"extensions":["p12","pfx"]},"application/x-pkcs7-certificates":{"source":"apache","extensions":["p7b","spc"]},"application/x-pkcs7-certreqresp":{"source":"apache","extensions":["p7r"]},"application/x-rar-compressed":{"source":"apache","compressible":false,"extensions":["rar"]},"application/x-redhat-package-manager":{"source":"nginx","extensions":["rpm"]},"application/x-research-info-systems":{"source":"apache","extensions":["ris"]},"application/x-sea":{"source":"nginx","extensions":["sea"]},"application/x-sh":{"source":"apache","compressible":true,"extensions":["sh"]},"application/x-shar":{"source":"apache","extensions":["shar"]},"application/x-shockwave-flash":{"source":"apache","compressible":false,"extensions":["swf"]},"application/x-silverlight-app":{"source":"apache","extensions":["xap"]},"application/x-sql":{"source":"apache","extensions":["sql"]},"application/x-stuffit":{"source":"apache","compressible":false,"extensions":["sit"]},"application/x-stuffitx":{"source":"apache","extensions":["sitx"]},"application/x-subrip":{"source":"apache","extensions":["srt"]},"application/x-sv4cpio":{"source":"apache","extensions":["sv4cpio"]},"application/x-sv4crc":{"source":"apache","extensions":["sv4crc"]},"application/x-t3vm-image":{"source":"apache","extensions":["t3"]},"application/x-tads":{"source":"apache","extensions":["gam"]},"application/x-tar":{"source":"apache","compressible":true,"extensions":["tar"]},"application/x-tcl":{"source":"apache","extensions":["tcl","tk"]},"application/x-tex":{"source":"apache","extensions":["tex"]},"application/x-tex-tfm":{"source":"apache","extensions":["tfm"]},"application/x-texinfo":{"source":"apache","extensions":["texinfo","texi"]},"application/x-tgif":{"source":"apache","extensions":["obj"]},"application/x-ustar":{"source":"apache","extensions":["ustar"]},"application/x-virtualbox-hdd":{"compressible":true,"extensions":["hdd"]},"application/x-virtualbox-ova":{"compressible":true,"extensions":["ova"]},"application/x-virtualbox-ovf":{"compressible":true,"extensions":["ovf"]},"application/x-virtualbox-vbox":{"compressible":true,"extensions":["vbox"]},"application/x-virtualbox-vbox-extpack":{"compressible":false,"extensions":["vbox-extpack"]},"application/x-virtualbox-vdi":{"compressible":true,"extensions":["vdi"]},"application/x-virtualbox-vhd":{"compressible":true,"extensions":["vhd"]},"application/x-virtualbox-vmdk":{"compressible":true,"extensions":["vmdk"]},"application/x-wais-source":{"source":"apache","extensions":["src"]},"application/x-web-app-manifest+json":{"compressible":true,"extensions":["webapp"]},"application/x-www-form-urlencoded":{"source":"iana","compressible":true},"application/x-x509-ca-cert":{"source":"apache","extensions":["der","crt","pem"]},"application/x-xfig":{"source":"apache","extensions":["fig"]},"application/x-xliff+xml":{"source":"apache","compressible":true,"extensions":["xlf"]},"application/x-xpinstall":{"source":"apache","compressible":false,"extensions":["xpi"]},"application/x-xz":{"source":"apache","extensions":["xz"]},"application/x-zmachine":{"source":"apache","extensions":["z1","z2","z3","z4","z5","z6","z7","z8"]},"application/x400-bp":{"source":"iana"},"application/xacml+xml":{"source":"iana","compressible":true},"application/xaml+xml":{"source":"apache","compressible":true,"extensions":["xaml"]},"application/xcap-att+xml":{"source":"iana","compressible":true,"extensions":["xav"]},"application/xcap-caps+xml":{"source":"iana","compressible":true,"extensions":["xca"]},"application/xcap-diff+xml":{"source":"iana","compressible":true,"extensions":["xdf"]},"application/xcap-el+xml":{"source":"iana","compressible":true,"extensions":["xel"]},"application/xcap-error+xml":{"source":"iana","compressible":true,"extensions":["xer"]},"application/xcap-ns+xml":{"source":"iana","compressible":true,"extensions":["xns"]},"application/xcon-conference-info+xml":{"source":"iana","compressible":true},"application/xcon-conference-info-diff+xml":{"source":"iana","compressible":true},"application/xenc+xml":{"source":"iana","compressible":true,"extensions":["xenc"]},"application/xhtml+xml":{"source":"iana","compressible":true,"extensions":["xhtml","xht"]},"application/xhtml-voice+xml":{"source":"apache","compressible":true},"application/xliff+xml":{"source":"iana","compressible":true,"extensions":["xlf"]},"application/xml":{"source":"iana","compressible":true,"extensions":["xml","xsl","xsd","rng"]},"application/xml-dtd":{"source":"iana","compressible":true,"extensions":["dtd"]},"application/xml-external-parsed-entity":{"source":"iana"},"application/xml-patch+xml":{"source":"iana","compressible":true},"application/xmpp+xml":{"source":"iana","compressible":true},"application/xop+xml":{"source":"iana","compressible":true,"extensions":["xop"]},"application/xproc+xml":{"source":"apache","compressible":true,"extensions":["xpl"]},"application/xslt+xml":{"source":"iana","compressible":true,"extensions":["xslt"]},"application/xspf+xml":{"source":"apache","compressible":true,"extensions":["xspf"]},"application/xv+xml":{"source":"iana","compressible":true,"extensions":["mxml","xhvml","xvml","xvm"]},"application/yang":{"source":"iana","extensions":["yang"]},"application/yang-data+json":{"source":"iana","compressible":true},"application/yang-data+xml":{"source":"iana","compressible":true},"application/yang-patch+json":{"source":"iana","compressible":true},"application/yang-patch+xml":{"source":"iana","compressible":true},"application/yin+xml":{"source":"iana","compressible":true,"extensions":["yin"]},"application/zip":{"source":"iana","compressible":false,"extensions":["zip"]},"application/zlib":{"source":"iana"},"application/zstd":{"source":"iana"},"audio/1d-interleaved-parityfec":{"source":"iana"},"audio/32kadpcm":{"source":"iana"},"audio/3gpp":{"source":"iana","compressible":false,"extensions":["3gpp"]},"audio/3gpp2":{"source":"iana"},"audio/aac":{"source":"iana"},"audio/ac3":{"source":"iana"},"audio/adpcm":{"source":"apache","extensions":["adp"]},"audio/amr":{"source":"iana"},"audio/amr-wb":{"source":"iana"},"audio/amr-wb+":{"source":"iana"},"audio/aptx":{"source":"iana"},"audio/asc":{"source":"iana"},"audio/atrac-advanced-lossless":{"source":"iana"},"audio/atrac-x":{"source":"iana"},"audio/atrac3":{"source":"iana"},"audio/basic":{"source":"iana","compressible":false,"extensions":["au","snd"]},"audio/bv16":{"source":"iana"},"audio/bv32":{"source":"iana"},"audio/clearmode":{"source":"iana"},"audio/cn":{"source":"iana"},"audio/dat12":{"source":"iana"},"audio/dls":{"source":"iana"},"audio/dsr-es201108":{"source":"iana"},"audio/dsr-es202050":{"source":"iana"},"audio/dsr-es202211":{"source":"iana"},"audio/dsr-es202212":{"source":"iana"},"audio/dv":{"source":"iana"},"audio/dvi4":{"source":"iana"},"audio/eac3":{"source":"iana"},"audio/encaprtp":{"source":"iana"},"audio/evrc":{"source":"iana"},"audio/evrc-qcp":{"source":"iana"},"audio/evrc0":{"source":"iana"},"audio/evrc1":{"source":"iana"},"audio/evrcb":{"source":"iana"},"audio/evrcb0":{"source":"iana"},"audio/evrcb1":{"source":"iana"},"audio/evrcnw":{"source":"iana"},"audio/evrcnw0":{"source":"iana"},"audio/evrcnw1":{"source":"iana"},"audio/evrcwb":{"source":"iana"},"audio/evrcwb0":{"source":"iana"},"audio/evrcwb1":{"source":"iana"},"audio/evs":{"source":"iana"},"audio/flexfec":{"source":"iana"},"audio/fwdred":{"source":"iana"},"audio/g711-0":{"source":"iana"},"audio/g719":{"source":"iana"},"audio/g722":{"source":"iana"},"audio/g7221":{"source":"iana"},"audio/g723":{"source":"iana"},"audio/g726-16":{"source":"iana"},"audio/g726-24":{"source":"iana"},"audio/g726-32":{"source":"iana"},"audio/g726-40":{"source":"iana"},"audio/g728":{"source":"iana"},"audio/g729":{"source":"iana"},"audio/g7291":{"source":"iana"},"audio/g729d":{"source":"iana"},"audio/g729e":{"source":"iana"},"audio/gsm":{"source":"iana"},"audio/gsm-efr":{"source":"iana"},"audio/gsm-hr-08":{"source":"iana"},"audio/ilbc":{"source":"iana"},"audio/ip-mr_v2.5":{"source":"iana"},"audio/isac":{"source":"apache"},"audio/l16":{"source":"iana"},"audio/l20":{"source":"iana"},"audio/l24":{"source":"iana","compressible":false},"audio/l8":{"source":"iana"},"audio/lpc":{"source":"iana"},"audio/melp":{"source":"iana"},"audio/melp1200":{"source":"iana"},"audio/melp2400":{"source":"iana"},"audio/melp600":{"source":"iana"},"audio/midi":{"source":"apache","extensions":["mid","midi","kar","rmi"]},"audio/mobile-xmf":{"source":"iana","extensions":["mxmf"]},"audio/mp3":{"compressible":false,"extensions":["mp3"]},"audio/mp4":{"source":"iana","compressible":false,"extensions":["m4a","mp4a"]},"audio/mp4a-latm":{"source":"iana"},"audio/mpa":{"source":"iana"},"audio/mpa-robust":{"source":"iana"},"audio/mpeg":{"source":"iana","compressible":false,"extensions":["mpga","mp2","mp2a","mp3","m2a","m3a"]},"audio/mpeg4-generic":{"source":"iana"},"audio/musepack":{"source":"apache"},"audio/ogg":{"source":"iana","compressible":false,"extensions":["oga","ogg","spx"]},"audio/opus":{"source":"iana"},"audio/parityfec":{"source":"iana"},"audio/pcma":{"source":"iana"},"audio/pcma-wb":{"source":"iana"},"audio/pcmu":{"source":"iana"},"audio/pcmu-wb":{"source":"iana"},"audio/prs.sid":{"source":"iana"},"audio/qcelp":{"source":"iana"},"audio/raptorfec":{"source":"iana"},"audio/red":{"source":"iana"},"audio/rtp-enc-aescm128":{"source":"iana"},"audio/rtp-midi":{"source":"iana"},"audio/rtploopback":{"source":"iana"},"audio/rtx":{"source":"iana"},"audio/s3m":{"source":"apache","extensions":["s3m"]},"audio/silk":{"source":"apache","extensions":["sil"]},"audio/smv":{"source":"iana"},"audio/smv-qcp":{"source":"iana"},"audio/smv0":{"source":"iana"},"audio/sp-midi":{"source":"iana"},"audio/speex":{"source":"iana"},"audio/t140c":{"source":"iana"},"audio/t38":{"source":"iana"},"audio/telephone-event":{"source":"iana"},"audio/tetra_acelp":{"source":"iana"},"audio/tone":{"source":"iana"},"audio/uemclip":{"source":"iana"},"audio/ulpfec":{"source":"iana"},"audio/usac":{"source":"iana"},"audio/vdvi":{"source":"iana"},"audio/vmr-wb":{"source":"iana"},"audio/vnd.3gpp.iufp":{"source":"iana"},"audio/vnd.4sb":{"source":"iana"},"audio/vnd.audiokoz":{"source":"iana"},"audio/vnd.celp":{"source":"iana"},"audio/vnd.cisco.nse":{"source":"iana"},"audio/vnd.cmles.radio-events":{"source":"iana"},"audio/vnd.cns.anp1":{"source":"iana"},"audio/vnd.cns.inf1":{"source":"iana"},"audio/vnd.dece.audio":{"source":"iana","extensions":["uva","uvva"]},"audio/vnd.digital-winds":{"source":"iana","extensions":["eol"]},"audio/vnd.dlna.adts":{"source":"iana"},"audio/vnd.dolby.heaac.1":{"source":"iana"},"audio/vnd.dolby.heaac.2":{"source":"iana"},"audio/vnd.dolby.mlp":{"source":"iana"},"audio/vnd.dolby.mps":{"source":"iana"},"audio/vnd.dolby.pl2":{"source":"iana"},"audio/vnd.dolby.pl2x":{"source":"iana"},"audio/vnd.dolby.pl2z":{"source":"iana"},"audio/vnd.dolby.pulse.1":{"source":"iana"},"audio/vnd.dra":{"source":"iana","extensions":["dra"]},"audio/vnd.dts":{"source":"iana","extensions":["dts"]},"audio/vnd.dts.hd":{"source":"iana","extensions":["dtshd"]},"audio/vnd.dts.uhd":{"source":"iana"},"audio/vnd.dvb.file":{"source":"iana"},"audio/vnd.everad.plj":{"source":"iana"},"audio/vnd.hns.audio":{"source":"iana"},"audio/vnd.lucent.voice":{"source":"iana","extensions":["lvp"]},"audio/vnd.ms-playready.media.pya":{"source":"iana","extensions":["pya"]},"audio/vnd.nokia.mobile-xmf":{"source":"iana"},"audio/vnd.nortel.vbk":{"source":"iana"},"audio/vnd.nuera.ecelp4800":{"source":"iana","extensions":["ecelp4800"]},"audio/vnd.nuera.ecelp7470":{"source":"iana","extensions":["ecelp7470"]},"audio/vnd.nuera.ecelp9600":{"source":"iana","extensions":["ecelp9600"]},"audio/vnd.octel.sbc":{"source":"iana"},"audio/vnd.presonus.multitrack":{"source":"iana"},"audio/vnd.qcelp":{"source":"iana"},"audio/vnd.rhetorex.32kadpcm":{"source":"iana"},"audio/vnd.rip":{"source":"iana","extensions":["rip"]},"audio/vnd.rn-realaudio":{"compressible":false},"audio/vnd.sealedmedia.softseal.mpeg":{"source":"iana"},"audio/vnd.vmx.cvsd":{"source":"iana"},"audio/vnd.wave":{"compressible":false},"audio/vorbis":{"source":"iana","compressible":false},"audio/vorbis-config":{"source":"iana"},"audio/wav":{"compressible":false,"extensions":["wav"]},"audio/wave":{"compressible":false,"extensions":["wav"]},"audio/webm":{"source":"apache","compressible":false,"extensions":["weba"]},"audio/x-aac":{"source":"apache","compressible":false,"extensions":["aac"]},"audio/x-aiff":{"source":"apache","extensions":["aif","aiff","aifc"]},"audio/x-caf":{"source":"apache","compressible":false,"extensions":["caf"]},"audio/x-flac":{"source":"apache","extensions":["flac"]},"audio/x-m4a":{"source":"nginx","extensions":["m4a"]},"audio/x-matroska":{"source":"apache","extensions":["mka"]},"audio/x-mpegurl":{"source":"apache","extensions":["m3u"]},"audio/x-ms-wax":{"source":"apache","extensions":["wax"]},"audio/x-ms-wma":{"source":"apache","extensions":["wma"]},"audio/x-pn-realaudio":{"source":"apache","extensions":["ram","ra"]},"audio/x-pn-realaudio-plugin":{"source":"apache","extensions":["rmp"]},"audio/x-realaudio":{"source":"nginx","extensions":["ra"]},"audio/x-tta":{"source":"apache"},"audio/x-wav":{"source":"apache","extensions":["wav"]},"audio/xm":{"source":"apache","extensions":["xm"]},"chemical/x-cdx":{"source":"apache","extensions":["cdx"]},"chemical/x-cif":{"source":"apache","extensions":["cif"]},"chemical/x-cmdf":{"source":"apache","extensions":["cmdf"]},"chemical/x-cml":{"source":"apache","extensions":["cml"]},"chemical/x-csml":{"source":"apache","extensions":["csml"]},"chemical/x-pdb":{"source":"apache"},"chemical/x-xyz":{"source":"apache","extensions":["xyz"]},"font/collection":{"source":"iana","extensions":["ttc"]},"font/otf":{"source":"iana","compressible":true,"extensions":["otf"]},"font/sfnt":{"source":"iana"},"font/ttf":{"source":"iana","compressible":true,"extensions":["ttf"]},"font/woff":{"source":"iana","extensions":["woff"]},"font/woff2":{"source":"iana","extensions":["woff2"]},"image/aces":{"source":"iana","extensions":["exr"]},"image/apng":{"compressible":false,"extensions":["apng"]},"image/avci":{"source":"iana"},"image/avcs":{"source":"iana"},"image/bmp":{"source":"iana","compressible":true,"extensions":["bmp"]},"image/cgm":{"source":"iana","extensions":["cgm"]},"image/dicom-rle":{"source":"iana","extensions":["drle"]},"image/emf":{"source":"iana","extensions":["emf"]},"image/fits":{"source":"iana","extensions":["fits"]},"image/g3fax":{"source":"iana","extensions":["g3"]},"image/gif":{"source":"iana","compressible":false,"extensions":["gif"]},"image/heic":{"source":"iana","extensions":["heic"]},"image/heic-sequence":{"source":"iana","extensions":["heics"]},"image/heif":{"source":"iana","extensions":["heif"]},"image/heif-sequence":{"source":"iana","extensions":["heifs"]},"image/hej2k":{"source":"iana","extensions":["hej2"]},"image/hsj2":{"source":"iana","extensions":["hsj2"]},"image/ief":{"source":"iana","extensions":["ief"]},"image/jls":{"source":"iana","extensions":["jls"]},"image/jp2":{"source":"iana","compressible":false,"extensions":["jp2","jpg2"]},"image/jpeg":{"source":"iana","compressible":false,"extensions":["jpeg","jpg","jpe"]},"image/jph":{"source":"iana","extensions":["jph"]},"image/jphc":{"source":"iana","extensions":["jhc"]},"image/jpm":{"source":"iana","compressible":false,"extensions":["jpm"]},"image/jpx":{"source":"iana","compressible":false,"extensions":["jpx","jpf"]},"image/jxr":{"source":"iana","extensions":["jxr"]},"image/jxra":{"source":"iana","extensions":["jxra"]},"image/jxrs":{"source":"iana","extensions":["jxrs"]},"image/jxs":{"source":"iana","extensions":["jxs"]},"image/jxsc":{"source":"iana","extensions":["jxsc"]},"image/jxsi":{"source":"iana","extensions":["jxsi"]},"image/jxss":{"source":"iana","extensions":["jxss"]},"image/ktx":{"source":"iana","extensions":["ktx"]},"image/naplps":{"source":"iana"},"image/pjpeg":{"compressible":false},"image/png":{"source":"iana","compressible":false,"extensions":["png"]},"image/prs.btif":{"source":"iana","extensions":["btif"]},"image/prs.pti":{"source":"iana","extensions":["pti"]},"image/pwg-raster":{"source":"iana"},"image/sgi":{"source":"apache","extensions":["sgi"]},"image/svg+xml":{"source":"iana","compressible":true,"extensions":["svg","svgz"]},"image/t38":{"source":"iana","extensions":["t38"]},"image/tiff":{"source":"iana","compressible":false,"extensions":["tif","tiff"]},"image/tiff-fx":{"source":"iana","extensions":["tfx"]},"image/vnd.adobe.photoshop":{"source":"iana","compressible":true,"extensions":["psd"]},"image/vnd.airzip.accelerator.azv":{"source":"iana","extensions":["azv"]},"image/vnd.cns.inf2":{"source":"iana"},"image/vnd.dece.graphic":{"source":"iana","extensions":["uvi","uvvi","uvg","uvvg"]},"image/vnd.djvu":{"source":"iana","extensions":["djvu","djv"]},"image/vnd.dvb.subtitle":{"source":"iana","extensions":["sub"]},"image/vnd.dwg":{"source":"iana","extensions":["dwg"]},"image/vnd.dxf":{"source":"iana","extensions":["dxf"]},"image/vnd.fastbidsheet":{"source":"iana","extensions":["fbs"]},"image/vnd.fpx":{"source":"iana","extensions":["fpx"]},"image/vnd.fst":{"source":"iana","extensions":["fst"]},"image/vnd.fujixerox.edmics-mmr":{"source":"iana","extensions":["mmr"]},"image/vnd.fujixerox.edmics-rlc":{"source":"iana","extensions":["rlc"]},"image/vnd.globalgraphics.pgb":{"source":"iana"},"image/vnd.microsoft.icon":{"source":"iana","extensions":["ico"]},"image/vnd.mix":{"source":"iana"},"image/vnd.mozilla.apng":{"source":"iana"},"image/vnd.ms-dds":{"extensions":["dds"]},"image/vnd.ms-modi":{"source":"iana","extensions":["mdi"]},"image/vnd.ms-photo":{"source":"apache","extensions":["wdp"]},"image/vnd.net-fpx":{"source":"iana","extensions":["npx"]},"image/vnd.radiance":{"source":"iana"},"image/vnd.sealed.png":{"source":"iana"},"image/vnd.sealedmedia.softseal.gif":{"source":"iana"},"image/vnd.sealedmedia.softseal.jpg":{"source":"iana"},"image/vnd.svf":{"source":"iana"},"image/vnd.tencent.tap":{"source":"iana","extensions":["tap"]},"image/vnd.valve.source.texture":{"source":"iana","extensions":["vtf"]},"image/vnd.wap.wbmp":{"source":"iana","extensions":["wbmp"]},"image/vnd.xiff":{"source":"iana","extensions":["xif"]},"image/vnd.zbrush.pcx":{"source":"iana","extensions":["pcx"]},"image/webp":{"source":"apache","extensions":["webp"]},"image/wmf":{"source":"iana","extensions":["wmf"]},"image/x-3ds":{"source":"apache","extensions":["3ds"]},"image/x-cmu-raster":{"source":"apache","extensions":["ras"]},"image/x-cmx":{"source":"apache","extensions":["cmx"]},"image/x-freehand":{"source":"apache","extensions":["fh","fhc","fh4","fh5","fh7"]},"image/x-icon":{"source":"apache","compressible":true,"extensions":["ico"]},"image/x-jng":{"source":"nginx","extensions":["jng"]},"image/x-mrsid-image":{"source":"apache","extensions":["sid"]},"image/x-ms-bmp":{"source":"nginx","compressible":true,"extensions":["bmp"]},"image/x-pcx":{"source":"apache","extensions":["pcx"]},"image/x-pict":{"source":"apache","extensions":["pic","pct"]},"image/x-portable-anymap":{"source":"apache","extensions":["pnm"]},"image/x-portable-bitmap":{"source":"apache","extensions":["pbm"]},"image/x-portable-graymap":{"source":"apache","extensions":["pgm"]},"image/x-portable-pixmap":{"source":"apache","extensions":["ppm"]},"image/x-rgb":{"source":"apache","extensions":["rgb"]},"image/x-tga":{"source":"apache","extensions":["tga"]},"image/x-xbitmap":{"source":"apache","extensions":["xbm"]},"image/x-xcf":{"compressible":false},"image/x-xpixmap":{"source":"apache","extensions":["xpm"]},"image/x-xwindowdump":{"source":"apache","extensions":["xwd"]},"message/cpim":{"source":"iana"},"message/delivery-status":{"source":"iana"},"message/disposition-notification":{"source":"iana","extensions":["disposition-notification"]},"message/external-body":{"source":"iana"},"message/feedback-report":{"source":"iana"},"message/global":{"source":"iana","extensions":["u8msg"]},"message/global-delivery-status":{"source":"iana","extensions":["u8dsn"]},"message/global-disposition-notification":{"source":"iana","extensions":["u8mdn"]},"message/global-headers":{"source":"iana","extensions":["u8hdr"]},"message/http":{"source":"iana","compressible":false},"message/imdn+xml":{"source":"iana","compressible":true},"message/news":{"source":"iana"},"message/partial":{"source":"iana","compressible":false},"message/rfc822":{"source":"iana","compressible":true,"extensions":["eml","mime"]},"message/s-http":{"source":"iana"},"message/sip":{"source":"iana"},"message/sipfrag":{"source":"iana"},"message/tracking-status":{"source":"iana"},"message/vnd.si.simp":{"source":"iana"},"message/vnd.wfa.wsc":{"source":"iana","extensions":["wsc"]},"model/3mf":{"source":"iana","extensions":["3mf"]},"model/gltf+json":{"source":"iana","compressible":true,"extensions":["gltf"]},"model/gltf-binary":{"source":"iana","compressible":true,"extensions":["glb"]},"model/iges":{"source":"iana","compressible":false,"extensions":["igs","iges"]},"model/mesh":{"source":"iana","compressible":false,"extensions":["msh","mesh","silo"]},"model/stl":{"source":"iana","extensions":["stl"]},"model/vnd.collada+xml":{"source":"iana","compressible":true,"extensions":["dae"]},"model/vnd.dwf":{"source":"iana","extensions":["dwf"]},"model/vnd.flatland.3dml":{"source":"iana"},"model/vnd.gdl":{"source":"iana","extensions":["gdl"]},"model/vnd.gs-gdl":{"source":"apache"},"model/vnd.gs.gdl":{"source":"iana"},"model/vnd.gtw":{"source":"iana","extensions":["gtw"]},"model/vnd.moml+xml":{"source":"iana","compressible":true},"model/vnd.mts":{"source":"iana","extensions":["mts"]},"model/vnd.opengex":{"source":"iana","extensions":["ogex"]},"model/vnd.parasolid.transmit.binary":{"source":"iana","extensions":["x_b"]},"model/vnd.parasolid.transmit.text":{"source":"iana","extensions":["x_t"]},"model/vnd.rosette.annotated-data-model":{"source":"iana"},"model/vnd.usdz+zip":{"source":"iana","compressible":false,"extensions":["usdz"]},"model/vnd.valve.source.compiled-map":{"source":"iana","extensions":["bsp"]},"model/vnd.vtu":{"source":"iana","extensions":["vtu"]},"model/vrml":{"source":"iana","compressible":false,"extensions":["wrl","vrml"]},"model/x3d+binary":{"source":"apache","compressible":false,"extensions":["x3db","x3dbz"]},"model/x3d+fastinfoset":{"source":"iana","extensions":["x3db"]},"model/x3d+vrml":{"source":"apache","compressible":false,"extensions":["x3dv","x3dvz"]},"model/x3d+xml":{"source":"iana","compressible":true,"extensions":["x3d","x3dz"]},"model/x3d-vrml":{"source":"iana","extensions":["x3dv"]},"multipart/alternative":{"source":"iana","compressible":false},"multipart/appledouble":{"source":"iana"},"multipart/byteranges":{"source":"iana"},"multipart/digest":{"source":"iana"},"multipart/encrypted":{"source":"iana","compressible":false},"multipart/form-data":{"source":"iana","compressible":false},"multipart/header-set":{"source":"iana"},"multipart/mixed":{"source":"iana"},"multipart/multilingual":{"source":"iana"},"multipart/parallel":{"source":"iana"},"multipart/related":{"source":"iana","compressible":false},"multipart/report":{"source":"iana"},"multipart/signed":{"source":"iana","compressible":false},"multipart/vnd.bint.med-plus":{"source":"iana"},"multipart/voice-message":{"source":"iana"},"multipart/x-mixed-replace":{"source":"iana"},"text/1d-interleaved-parityfec":{"source":"iana"},"text/cache-manifest":{"source":"iana","compressible":true,"extensions":["appcache","manifest"]},"text/calendar":{"source":"iana","extensions":["ics","ifb"]},"text/calender":{"compressible":true},"text/cmd":{"compressible":true},"text/coffeescript":{"extensions":["coffee","litcoffee"]},"text/css":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["css"]},"text/csv":{"source":"iana","compressible":true,"extensions":["csv"]},"text/csv-schema":{"source":"iana"},"text/directory":{"source":"iana"},"text/dns":{"source":"iana"},"text/ecmascript":{"source":"iana"},"text/encaprtp":{"source":"iana"},"text/enriched":{"source":"iana"},"text/flexfec":{"source":"iana"},"text/fwdred":{"source":"iana"},"text/grammar-ref-list":{"source":"iana"},"text/html":{"source":"iana","compressible":true,"extensions":["html","htm","shtml"]},"text/jade":{"extensions":["jade"]},"text/javascript":{"source":"iana","compressible":true},"text/jcr-cnd":{"source":"iana"},"text/jsx":{"compressible":true,"extensions":["jsx"]},"text/less":{"compressible":true,"extensions":["less"]},"text/markdown":{"source":"iana","compressible":true,"extensions":["markdown","md"]},"text/mathml":{"source":"nginx","extensions":["mml"]},"text/mdx":{"compressible":true,"extensions":["mdx"]},"text/mizar":{"source":"iana"},"text/n3":{"source":"iana","compressible":true,"extensions":["n3"]},"text/parameters":{"source":"iana"},"text/parityfec":{"source":"iana"},"text/plain":{"source":"iana","compressible":true,"extensions":["txt","text","conf","def","list","log","in","ini"]},"text/provenance-notation":{"source":"iana"},"text/prs.fallenstein.rst":{"source":"iana"},"text/prs.lines.tag":{"source":"iana","extensions":["dsc"]},"text/prs.prop.logic":{"source":"iana"},"text/raptorfec":{"source":"iana"},"text/red":{"source":"iana"},"text/rfc822-headers":{"source":"iana"},"text/richtext":{"source":"iana","compressible":true,"extensions":["rtx"]},"text/rtf":{"source":"iana","compressible":true,"extensions":["rtf"]},"text/rtp-enc-aescm128":{"source":"iana"},"text/rtploopback":{"source":"iana"},"text/rtx":{"source":"iana"},"text/sgml":{"source":"iana","extensions":["sgml","sgm"]},"text/shex":{"extensions":["shex"]},"text/slim":{"extensions":["slim","slm"]},"text/strings":{"source":"iana"},"text/stylus":{"extensions":["stylus","styl"]},"text/t140":{"source":"iana"},"text/tab-separated-values":{"source":"iana","compressible":true,"extensions":["tsv"]},"text/troff":{"source":"iana","extensions":["t","tr","roff","man","me","ms"]},"text/turtle":{"source":"iana","charset":"UTF-8","extensions":["ttl"]},"text/ulpfec":{"source":"iana"},"text/uri-list":{"source":"iana","compressible":true,"extensions":["uri","uris","urls"]},"text/vcard":{"source":"iana","compressible":true,"extensions":["vcard"]},"text/vnd.a":{"source":"iana"},"text/vnd.abc":{"source":"iana"},"text/vnd.ascii-art":{"source":"iana"},"text/vnd.curl":{"source":"iana","extensions":["curl"]},"text/vnd.curl.dcurl":{"source":"apache","extensions":["dcurl"]},"text/vnd.curl.mcurl":{"source":"apache","extensions":["mcurl"]},"text/vnd.curl.scurl":{"source":"apache","extensions":["scurl"]},"text/vnd.debian.copyright":{"source":"iana"},"text/vnd.dmclientscript":{"source":"iana"},"text/vnd.dvb.subtitle":{"source":"iana","extensions":["sub"]},"text/vnd.esmertec.theme-descriptor":{"source":"iana"},"text/vnd.ficlab.flt":{"source":"iana"},"text/vnd.fly":{"source":"iana","extensions":["fly"]},"text/vnd.fmi.flexstor":{"source":"iana","extensions":["flx"]},"text/vnd.gml":{"source":"iana"},"text/vnd.graphviz":{"source":"iana","extensions":["gv"]},"text/vnd.hgl":{"source":"iana"},"text/vnd.in3d.3dml":{"source":"iana","extensions":["3dml"]},"text/vnd.in3d.spot":{"source":"iana","extensions":["spot"]},"text/vnd.iptc.newsml":{"source":"iana"},"text/vnd.iptc.nitf":{"source":"iana"},"text/vnd.latex-z":{"source":"iana"},"text/vnd.motorola.reflex":{"source":"iana"},"text/vnd.ms-mediapackage":{"source":"iana"},"text/vnd.net2phone.commcenter.command":{"source":"iana"},"text/vnd.radisys.msml-basic-layout":{"source":"iana"},"text/vnd.senx.warpscript":{"source":"iana"},"text/vnd.si.uricatalogue":{"source":"iana"},"text/vnd.sosi":{"source":"iana"},"text/vnd.sun.j2me.app-descriptor":{"source":"iana","extensions":["jad"]},"text/vnd.trolltech.linguist":{"source":"iana"},"text/vnd.wap.si":{"source":"iana"},"text/vnd.wap.sl":{"source":"iana"},"text/vnd.wap.wml":{"source":"iana","extensions":["wml"]},"text/vnd.wap.wmlscript":{"source":"iana","extensions":["wmls"]},"text/vtt":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["vtt"]},"text/x-asm":{"source":"apache","extensions":["s","asm"]},"text/x-c":{"source":"apache","extensions":["c","cc","cxx","cpp","h","hh","dic"]},"text/x-component":{"source":"nginx","extensions":["htc"]},"text/x-fortran":{"source":"apache","extensions":["f","for","f77","f90"]},"text/x-gwt-rpc":{"compressible":true},"text/x-handlebars-template":{"extensions":["hbs"]},"text/x-java-source":{"source":"apache","extensions":["java"]},"text/x-jquery-tmpl":{"compressible":true},"text/x-lua":{"extensions":["lua"]},"text/x-markdown":{"compressible":true,"extensions":["mkd"]},"text/x-nfo":{"source":"apache","extensions":["nfo"]},"text/x-opml":{"source":"apache","extensions":["opml"]},"text/x-org":{"compressible":true,"extensions":["org"]},"text/x-pascal":{"source":"apache","extensions":["p","pas"]},"text/x-processing":{"compressible":true,"extensions":["pde"]},"text/x-sass":{"extensions":["sass"]},"text/x-scss":{"extensions":["scss"]},"text/x-setext":{"source":"apache","extensions":["etx"]},"text/x-sfv":{"source":"apache","extensions":["sfv"]},"text/x-suse-ymp":{"compressible":true,"extensions":["ymp"]},"text/x-uuencode":{"source":"apache","extensions":["uu"]},"text/x-vcalendar":{"source":"apache","extensions":["vcs"]},"text/x-vcard":{"source":"apache","extensions":["vcf"]},"text/xml":{"source":"iana","compressible":true,"extensions":["xml"]},"text/xml-external-parsed-entity":{"source":"iana"},"text/yaml":{"extensions":["yaml","yml"]},"video/1d-interleaved-parityfec":{"source":"iana"},"video/3gpp":{"source":"iana","extensions":["3gp","3gpp"]},"video/3gpp-tt":{"source":"iana"},"video/3gpp2":{"source":"iana","extensions":["3g2"]},"video/bmpeg":{"source":"iana"},"video/bt656":{"source":"iana"},"video/celb":{"source":"iana"},"video/dv":{"source":"iana"},"video/encaprtp":{"source":"iana"},"video/flexfec":{"source":"iana"},"video/h261":{"source":"iana","extensions":["h261"]},"video/h263":{"source":"iana","extensions":["h263"]},"video/h263-1998":{"source":"iana"},"video/h263-2000":{"source":"iana"},"video/h264":{"source":"iana","extensions":["h264"]},"video/h264-rcdo":{"source":"iana"},"video/h264-svc":{"source":"iana"},"video/h265":{"source":"iana"},"video/iso.segment":{"source":"iana"},"video/jpeg":{"source":"iana","extensions":["jpgv"]},"video/jpeg2000":{"source":"iana"},"video/jpm":{"source":"apache","extensions":["jpm","jpgm"]},"video/mj2":{"source":"iana","extensions":["mj2","mjp2"]},"video/mp1s":{"source":"iana"},"video/mp2p":{"source":"iana"},"video/mp2t":{"source":"iana","extensions":["ts"]},"video/mp4":{"source":"iana","compressible":false,"extensions":["mp4","mp4v","mpg4"]},"video/mp4v-es":{"source":"iana"},"video/mpeg":{"source":"iana","compressible":false,"extensions":["mpeg","mpg","mpe","m1v","m2v"]},"video/mpeg4-generic":{"source":"iana"},"video/mpv":{"source":"iana"},"video/nv":{"source":"iana"},"video/ogg":{"source":"iana","compressible":false,"extensions":["ogv"]},"video/parityfec":{"source":"iana"},"video/pointer":{"source":"iana"},"video/quicktime":{"source":"iana","compressible":false,"extensions":["qt","mov"]},"video/raptorfec":{"source":"iana"},"video/raw":{"source":"iana"},"video/rtp-enc-aescm128":{"source":"iana"},"video/rtploopback":{"source":"iana"},"video/rtx":{"source":"iana"},"video/smpte291":{"source":"iana"},"video/smpte292m":{"source":"iana"},"video/ulpfec":{"source":"iana"},"video/vc1":{"source":"iana"},"video/vc2":{"source":"iana"},"video/vnd.cctv":{"source":"iana"},"video/vnd.dece.hd":{"source":"iana","extensions":["uvh","uvvh"]},"video/vnd.dece.mobile":{"source":"iana","extensions":["uvm","uvvm"]},"video/vnd.dece.mp4":{"source":"iana"},"video/vnd.dece.pd":{"source":"iana","extensions":["uvp","uvvp"]},"video/vnd.dece.sd":{"source":"iana","extensions":["uvs","uvvs"]},"video/vnd.dece.video":{"source":"iana","extensions":["uvv","uvvv"]},"video/vnd.directv.mpeg":{"source":"iana"},"video/vnd.directv.mpeg-tts":{"source":"iana"},"video/vnd.dlna.mpeg-tts":{"source":"iana"},"video/vnd.dvb.file":{"source":"iana","extensions":["dvb"]},"video/vnd.fvt":{"source":"iana","extensions":["fvt"]},"video/vnd.hns.video":{"source":"iana"},"video/vnd.iptvforum.1dparityfec-1010":{"source":"iana"},"video/vnd.iptvforum.1dparityfec-2005":{"source":"iana"},"video/vnd.iptvforum.2dparityfec-1010":{"source":"iana"},"video/vnd.iptvforum.2dparityfec-2005":{"source":"iana"},"video/vnd.iptvforum.ttsavc":{"source":"iana"},"video/vnd.iptvforum.ttsmpeg2":{"source":"iana"},"video/vnd.motorola.video":{"source":"iana"},"video/vnd.motorola.videop":{"source":"iana"},"video/vnd.mpegurl":{"source":"iana","extensions":["mxu","m4u"]},"video/vnd.ms-playready.media.pyv":{"source":"iana","extensions":["pyv"]},"video/vnd.nokia.interleaved-multimedia":{"source":"iana"},"video/vnd.nokia.mp4vr":{"source":"iana"},"video/vnd.nokia.videovoip":{"source":"iana"},"video/vnd.objectvideo":{"source":"iana"},"video/vnd.radgamettools.bink":{"source":"iana"},"video/vnd.radgamettools.smacker":{"source":"iana"},"video/vnd.sealed.mpeg1":{"source":"iana"},"video/vnd.sealed.mpeg4":{"source":"iana"},"video/vnd.sealed.swf":{"source":"iana"},"video/vnd.sealedmedia.softseal.mov":{"source":"iana"},"video/vnd.uvvu.mp4":{"source":"iana","extensions":["uvu","uvvu"]},"video/vnd.vivo":{"source":"iana","extensions":["viv"]},"video/vnd.youtube.yt":{"source":"iana"},"video/vp8":{"source":"iana"},"video/webm":{"source":"apache","compressible":false,"extensions":["webm"]},"video/x-f4v":{"source":"apache","extensions":["f4v"]},"video/x-fli":{"source":"apache","extensions":["fli"]},"video/x-flv":{"source":"apache","compressible":false,"extensions":["flv"]},"video/x-m4v":{"source":"apache","extensions":["m4v"]},"video/x-matroska":{"source":"apache","compressible":false,"extensions":["mkv","mk3d","mks"]},"video/x-mng":{"source":"apache","extensions":["mng"]},"video/x-ms-asf":{"source":"apache","extensions":["asf","asx"]},"video/x-ms-vob":{"source":"apache","extensions":["vob"]},"video/x-ms-wm":{"source":"apache","extensions":["wm"]},"video/x-ms-wmv":{"source":"apache","compressible":false,"extensions":["wmv"]},"video/x-ms-wmx":{"source":"apache","extensions":["wmx"]},"video/x-ms-wvx":{"source":"apache","extensions":["wvx"]},"video/x-msvideo":{"source":"apache","extensions":["avi"]},"video/x-sgi-movie":{"source":"apache","extensions":["movie"]},"video/x-smv":{"source":"apache","extensions":["smv"]},"x-conference/x-cooltalk":{"source":"apache","extensions":["ice"]},"x-shader/x-fragment":{"compressible":true},"x-shader/x-vertex":{"compressible":true}}')},function(e,n,t){e.exports={parallel:t(445),serial:t(447),serialOrdered:t(196)}},function(e,n,t){var i=t(191),a=t(194),o=t(195);e.exports=function(e,n,t){var r=a(e);for(;r.index<(r.keyedList||e).length;)i(e,n,r,(function(e,n){e?t(e,n):0!==Object.keys(r.jobs).length||t(null,r.results)})),r.index++;return o.bind(r,t)}},function(e,n){e.exports=function(e){var n="function"==typeof setImmediate?setImmediate:"object"==typeof process&&"function"==typeof process.nextTick?process.nextTick:null;n?n(e):setTimeout(e,0)}},function(e,n,t){var i=t(196);e.exports=function(e,n,t){return i(e,n,null,t)}},function(e,n){e.exports=function(e,n){return Object.keys(n).forEach((function(t){e[t]=e[t]||n[t]})),e}},function(e,n,t){"use strict";t(10);var i=t(12);Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n,t,i){return(0,s.validateApiKeys)(e,n),new Promise((function(f,d){var m="".concat(o.baseUrl,"/pinning/pinFileToIPFS");u.stat(t,(function(o,h){if(o&&d(o),h.isFile()){var v=new r.default;v.append("file",u.createReadStream(t)),i&&(i.pinataMetadata&&((0,s.validateMetadata)(i.pinataMetadata),v.append("pinataMetadata",JSON.stringify(i.pinataMetadata))),i.pinataOptions&&((0,s.validatePinataOptions)(i.pinataOptions),v.append("pinataOptions",JSON.stringify(i.pinataOptions)))),a.default.post(m,v,{withCredentials:!0,maxContentLength:"Infinity",maxBodyLength:"Infinity",headers:{"Content-type":"multipart/form-data; boundary= ".concat(v._boundary),pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&d(new Error("unknown server response while pinning File to IPFS: ".concat(e))),f(e.data)})).catch((function(e){var n=(0,p.handleError)(e);d(n)}))}else l.readdirr(t,(function(o,l,h){o&&d(new Error(o));var v=new r.default;h.forEach((function(e){v.append("file",u.createReadStream(e),{filepath:(0,c.default)(t,e)})})),i&&(i.pinataMetadata&&((0,s.validateMetadata)(i.pinataMetadata),v.append("pinataMetadata",JSON.stringify(i.pinataMetadata))),i.pinataOptions&&((0,s.validatePinataOptions)(i.pinataOptions),v.append("pinataOptions",JSON.stringify(i.pinataOptions)))),a.default.post(m,v,{withCredentials:!0,maxContentLength:"Infinity",maxBodyLength:"Infinity",headers:{"Content-type":"multipart/form-data; boundary= ".concat(v._boundary),pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&d(new Error("unknown server response while pinning File to IPFS: ".concat(e))),f(e.data)})).catch((function(e){var n=(0,p.handleError)(e);d(n)}))}))}))}))},t(16),t(22),t(56);var a=i(t(33)),o=t(34),r=i(t(190)),s=t(28),c=i(t(450)),p=t(35),u=t(65),l=t(451);e.exports=n.default},function(e,n){e.exports=function(e,n){let t=e.startsWith("./")?e.substring(2):e;const i=t.lastIndexOf("/");if(-1===i)return n;i===e.length-1&&(t=e.slice(0,-1));const a=t.lastIndexOf("/");if(-1===a)return t;{const e=t.substring(0,a+1);t=n.split(e)[1]}return t}},function(e,n,t){e.exports={readdirr:t(130).readdirr,rmdirr:t(131).rmdirr,rmdirs:t(131).rmdirs,rmfiles:t(131).rmfiles,cpdirr:t(132).cpdirr,cpdirs:t(132).cpdirs,cpfiles:t(132).cpfiles}},function(e,n,t){"use strict";t(10);var i=t(12);Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n,t,i){(0,s.validateApiKeys)(e,n);var p=t;if("object"!==(0,a.default)(t))throw new Error("body must be a valid JSON object");i&&(p={pinataContent:t},i.pinataMetadata&&((0,s.validateMetadata)(i.pinataMetadata),p.pinataMetadata=i.pinataMetadata),i.pinataOptions&&((0,s.validatePinataOptions)(i.pinataOptions),p.pinataOptions=i.pinataOptions));var u="".concat(r.baseUrl,"/pinning/pinJSONToIPFS");return new Promise((function(t,i){o.default.post(u,p,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&i(new Error("unknown server response while pinning JSON to IPFS: ".concat(e))),t(e.data)})).catch((function(e){var n=(0,c.handleError)(e);i(n)}))}))},t(16),t(22);var a=i(t(126)),o=i(t(33)),r=t(34),s=t(28),c=t(35);e.exports=n.default},function(e,n,t){"use strict";t(10);var i=t(12);Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n,t){(0,r.validateApiKeys)(e,n);var i="".concat(o.baseUrl,"/pinning/pinJobs");t&&(i=(0,s.default)(i,t));return new Promise((function(t,o){a.default.get(i,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&o(new Error("unknown server response while attempting to retrieve pin jobs: ".concat(e))),t(e.data)})).catch((function(e){var n=(0,c.handleError)(e);o(n)}))}))},t(16),t(22);var a=i(t(33)),o=t(34),r=t(28),s=i(t(454)),c=t(35);e.exports=n.default},function(e,n,t){"use strict";t(10);var i=t(12);Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n){if(!e)throw new Error("no baseUrl provided");if(!n)return e;var t=e,i=!1;function o(e){i?t="".concat(t,"&").concat(e):(i=!0,t="".concat(t,"?").concat(e))}if(n){if(n.sort){if("ASC"!==n.sort&&"DESC"!==n.sort)throw new Error("Unknown sort value: ".concat(n.sort," provided"));o("sort=".concat(n.sort))}if(n.status){if("searching"!==n.status&&"expired"!==n.status&&"over_free_limit"!==n.status&&"over_max_size"!==n.status&&"invalid_object"!==n.status&&"bad_host_node"!==n.status)throw new Error("Unknown status value: ".concat(n.status," provided"));o("status=".concat(n.status))}if(n.ipfs_pin_hash){if(!a.default.cid(n.ipfs_pin_hash))throw new Error("Invalid IPFS hash: ".concat(n.ipfs_pin_hash));o("ipfs_pin_hash=".concat(n.ipfs_pin_hash))}if(n.limit){if(!(Number.isInteger(n.limit)&&n.limit>0&&n.limit<100))throw new Error("Invalid limit: ".concat(n.limit,". Valid limits are 1-100"));o("limit=".concat(n.limit))}if(n.offset){if(!(Number.isInteger(n.offset)&&n.offset>0))throw new Error("Invalid offset: ".concat(n.offset,". Please provide a positive integer for the offset"));o("offset=".concat(n.offset))}}return t},t(151),t(99),t(96);var a=i(t(63));e.exports=n.default},function(e,n,t){"use strict";t(10);var i=t(12);Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n,t){if((0,r.validateApiKeys)(e,n),!t)throw new Error("hashToUnpin value is required for removing a pin from Pinata");if(!s.default.cid(t))throw new Error("".concat(t," is an invalid IPFS CID"));var i="".concat(o.baseUrl,"/pinning/unpin/").concat(t);return new Promise((function(t,o){a.default.delete(i,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&o(new Error("unknown server response while removing pin from IPFS: ".concat(e))),t(e.data)})).catch((function(e){var n=(0,c.handleError)(e);o(n)}))}))},t(16),t(22);var a=i(t(33)),o=t(34),r=t(28),s=i(t(63)),c=t(35);e.exports=n.default},function(e,n,t){"use strict";t(10);var i=t(12);Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n){(0,r.validateApiKeys)(e,n);var t="".concat(o.baseUrl,"/data/testAuthentication");return new Promise((function(i,o){a.default.get(t,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&o(new Error("unknown server response while authenticating: ".concat(e))),i({authenticated:!0})})).catch((function(e){var n=(0,s.handleError)(e);o(n)}))}))},t(16),t(22);var a=i(t(33)),o=t(34),r=t(28),s=t(35);e.exports=n.default},function(e,n,t){"use strict";t(10);var i=t(12);Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n){if(!e)throw new Error("no baseUrl provided");var t="?",i="";if(n){if(n.includeCount&&(t+="includeCount=".concat(n.includeCount,"&")),n.hashContains){if("string"!=typeof n.hashContains)throw new Error("hashContains value is not a string");t+="hashContains=".concat(n.hashContains,"&")}if(n.pinStart&&(t+="pinStart=".concat(o(n.pinStart),"&")),n.pinEnd&&(t+="pinEnd=".concat(o(n.pinEnd),"&")),n.unpinStart&&(t+="unpinStart=".concat(o(n.unpinStart),"&")),n.unpinEnd&&(t+="unpinEnd=".concat(o(n.unpinEnd),"&")),n.pinSizeMin){if(isNaN(n.pinSizeMin)||n.pinSizeMin<0)throw new Error("Please make sure the pinSizeMin is a valid positive integer");t+="pinSizeMin=".concat(n.pinSizeMin,"&")}if(n.pinSizeMax){if(isNaN(n.pinSizeMax)||n.pinSizeMax<0)throw new Error("Please make sure the pinSizeMax is a valid positive integer");t+="pinSizeMax=".concat(n.pinSizeMax,"&")}if(n.status){if("all"!==n.status&&"pinned"!==n.status&&"unpinned"!==n.status)throw new Error("status value must be either: all, pinned, or unpinned");t+="status=".concat(n.status,"&")}if(n.pageLimit){if(isNaN(n.pageLimit)||n.pageLimit<=0||n.pageLimit>1e3)throw new Error("Please make sure the pageLimit is a valid integer between 1-1000");t+="pageLimit=".concat(parseInt(n.pageLimit),"&")}if(n.pageOffset){if(isNaN(n.pageOffset)||n.pageOffset<=0)throw new Error("Please make sure the pageOffset is a positive integer");t+="pageOffset=".concat(parseInt(n.pageOffset),"&")}if(n.metadata){if("object"!==(0,a.default)(n.metadata))throw new Error("metadata value must be an object");if(n.metadata.name&&(i="metadata[name]=".concat(n.metadata.name,"&")),n.metadata.keyvalues){if(i+="metadata[keyvalues]=","object"!==(0,a.default)(n.metadata.keyvalues))throw new Error("metadata keyvalues must be an object");var r={};Object.entries(n.metadata.keyvalues).forEach((function(e){var n=e[0],t=e[1];if("object"!==(0,a.default)(t))throw new Error("keyValue: ".concat(n," is not an object"));if(!t||!t.value||!t.op)throw new Error("keyValue: ".concat(n," must have both value and op attributes"));if("string"!=typeof t.value&&"boolean"!=typeof t.value&&"number"!=typeof t.value)throw new Error("Metadata keyvalue values must be strings, booleans, or numbers");switch(t.op){case"gt":case"gte":case"lt":case"lte":case"ne":case"eq":r[n]={value:t.value,op:t.op};break;case"between":if(!t.secondValue)throw new Error("Because between op code was passed in, keyValue: ".concat(e[0]," must have both also include a secondValue"));if("string"!=typeof t.secondValue&&"boolean"!=typeof t.secondValue&&"number"!=typeof t.secondValue)throw new Error("Metadata keyvalue secondValue must be a string, boolean, or number");r[n]={value:t.value,op:t.op,secondValue:t.secondValue};break;case"notBetween":if(!t.secondValue)throw new Error("Because notBetween op code was passed in, keyValue: ".concat(e[0]," must have both also include a secondValue"));if("string"!=typeof t.secondValue&&"boolean"!=typeof t.secondValue&&"number"!=typeof t.secondValue)throw new Error("Metadata keyvalue secondValue must be a string, boolean, or number");r[n]={value:t.value,op:t.op,secondValue:t.secondValue};break;case"like":case"notLike":case"iLike":case"notILike":case"regexp":case"iRegexp":r[n]={value:t.value,op:t.op};break;default:throw new Error("keyValue op: ".concat(t.op," is not a valid op code"))}})),i+="".concat(JSON.stringify(r))}}}return"".concat(e).concat(t).concat(i)};var a=i(t(126));function o(e){var n=new Date(Date.parse(e));try{if(n.toISOString()===e)return e;throw new Error("dates must be in valid ISO_8601 format")}catch(e){throw new Error("dates must be in valid ISO_8601 format")}}t(148),t(69),t(56),t(120),e.exports=n.default},function(e,n,t){"use strict";var i=t(12);Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;if((0,o.validateApiKeys)(e,n),0===i)throw Error("Max count can't be 0");var s=(0,a.default)({},Symbol.asyncIterator,(function(){var a=0,o=0,s=[],p=!1;return{next:function(){return new Promise((function(u,l){(0===a||a%10==0&&p)&&u((0,r.default)(e,n,c({filters:t},{pageOffset:o,pageLimit:10})).then((function(e){s=e.rows,o+=s.length,p=0!==s.length&&(-1===i?10===s.length:a<i)}))),u()})).then((function(){var e=s[a%10],n=!((-1===i?a<o:a<i)&&p);return a++,Promise.resolve({value:e,done:n})}))},return:function(){return Promise.resolve({value:a,done:!0})}}}));return s};var a=i(t(198));t(85),t(168),t(16),t(22),t(93),t(110),t(92),t(56),t(119),t(91),t(10);var o=t(28),r=i(t(197));function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){(0,a.default)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}e.exports=n.default},function(e,n,t){"use strict";t(10);var i=t(12);Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n){(0,r.validateApiKeys)(e,n);var t="".concat(o.baseUrl,"/data/userPinnedDataTotal");return new Promise((function(i,o){a.default.get(t,{withCredentials:!0,headers:{pinata_api_key:e,pinata_secret_api_key:n}}).then((function(e){200!==e.status&&o(new Error("unknown server response while attempting to retrieve pinned data total: ".concat(e))),i(e.data)})).catch((function(e){var n=(0,s.handleError)(e);o(n)}))}))},t(16),t(22);var a=i(t(33)),o=t(34),r=t(28),s=t(35);e.exports=n.default}])}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,